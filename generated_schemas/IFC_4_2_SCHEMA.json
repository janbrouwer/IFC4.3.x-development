{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "IFC.JSON",
  "description": "This is the schema for representing IFC4 data in JSON",
  "version": "IFC_4_2_SCHEMA_13_11_2019",
  "type": "object",
  "properties": {
    "file_schema": {
      "const": "IFC_4_2_SCHEMA_13_11_2019"
    },
    "data": {
      "type": "array",
      "items": {
        "anyOf": [
          {
            "description": "IfcPropertySetDefinition is a generalization of all individual property sets that can be assigned to an object or type object. The property set definition can be either Dynamically extendable property sets IfcPropertySet , a set of properties for which the IFC specification only provides a kind of meta model , to be further declared by agreement. This means no entity definition of the properties exists within the IFC specification. The declaration is done by assigning a significant string value to the Name attribute of the entity as defined in the entity IfcPropertySet and at each subtype of IfcProperty , referenced by the property set. Dynamically defined property sets may have an underlying template provided by IfcPropertySetTemplate . Statically defined property sets IfcPreDefinedPropertySet , a property set entity that exists within the IFC specification. The semantic meaning of each statically defined property set is declared by its entity type and the meaning of the properties is defined by the name and data type of the explicit attribute representing it. Property set definitions define information that is shared among multiple instances of objects, either object occurrences or object types. IfcPropertySetDefinition s by their instantiable subtypes can participate within the following relationships Assignment to object types an DefinesType direct relationship to IfcTypeObject that applies the property set, with all included properties, to the object type. Those properties apply to all object occurrences having the same object type. Assignment to object occurrences an DefinesOccurrence relationship to IfcRelDefinesByProperties that applies the property set, with all included properties, to the object occurrence. NOTE Properties assigned to object occurrences may override properties assigned to the object type. See IfcRelDefinesByType for further information. HISTORY New entity in IFC2x .change ifc2x4 IFC4 CHANGE The subtype IfcPreDefinedPropertySet has been added. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcPropertyDefinition"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcPropertyDefinition"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An IfcObjectDefinition is the generalization of any semantically treated thing or process, either being a type or an occurrences. Object defintions can be named, using the inherited Name attribute, which should be a user recognizable label for the object occurrance. Further explanations to the object can be given using the inherited Description attribute. A context is a specific kind of object definition as it provides the project or library context in which object types and object occurrences are defined. Objects are independent pieces of information that might contain or reference other pieces of information. There are four essential kinds of relationships in which object definitons by their instantiable subtypes can be involved Assignment of other objects an assignment relationship IfcRelAssigns that refers to other types of objects and creates a bi directional association. The semantic of the assignment is established at the level of the subtypes of the general IfcRelAssigns relationship. There is no dependency implied a priori by the assignment. Association to external resources an association relationship IfcRelAssociates that refers to external sources of information most notably a classification or document and creates a uni directional association. There is no dependency implied by the association. Aggregation of other objects an aggregation relationship IfcRelAggregates that establishes an unordered, spatial whole part relation and creates a bi directional relation. There is an implied dependency established. Nesting of other objects a nesting relationship IfcRelNests that establishes an ordered, non spatial whole part relation and creates a bi directional relation. There is an implied dependency established. Declaration within a context a relationship IfcRelDeclares of the uppermost object definition within the object definition tree e.g. the summary object within an object nesting tree to the context a project or project library . It applies the units, representation context and other context information to this object definition and all dependent ones. NOTE The link between the uppermost object in the spatial structure tree, that is IfcSite or ifcBuilding , and the context provided by IfcProject is created using the IfcRelAggregates relationship. See IfcProject for more information. HISTORY New abstract entity in IFC2x3. .change ifc2x4 IFC4 CHANGE The new subtype IfcContext and the relationship to context HasContext has been added . The decomposition relationship is split into ordered nesting Nests , IsNestedBy and un ordered aggregating Decomposes , IsDecomposedBy . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRoot"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRoot"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The objectified relationship IfcRelDeclares handles the declaration of objects subtypes of IfcObject or properties subtypes of IfcPropertyDefinition to a project or project library represented by IfcProject , or IfcProjectLibrary . The relationship handles the assignment of other objects, like IfcActor , or IfcTypeObject to the project, or project libary. The attribute RelatedDefinitions provides the references to the first level objects, that are the elements within the context. All other objects that relate to the first level objects are also defined in the context. NOTE Every object as subtype of IfcObject has to be declared within the context of a single IfcProject , or of a IfcProjectLibrary assigned to a single IfcProject . This declaration is transitive. For example the IfcWorkPlan as first level object is declared within the context of IfcProject via IfcRelDeclares , all related IfcWorkSchedule s are related to the context in a transitive way through IfcWorkPlan . NOTE The assignment excludes subtypes of IfcProduct s, these are assigned to the IfcProject using the spatial structure approach through IfcSpatialStructureElement s , where the outer container element such as IfcSite or IfcBuilding has an IfcRelAggregates relationship with the IfcProject . The RelatingContext is the project, or project library that comprises all elements. The unit assignments and the presentation contexts defined at IfcProject or IfcProjectLibrary apply to all these elements. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelationship"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelationship"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An IfcObject is the generalization of any semantically treated thing or process. Objects are things as they appear i.e. occurrences. NOTE Examples of IfcObject include physically tangible items such as wall, beam or covering, physically existing items such as spaces, or conceptual items such as grids or virtual boundaries. It also stands for processes such as work tasks, for controls such as cost items, or for actors such as persons involved in the design process. Objects can be named, using the inherited Name attribute, which should be a user recognizable label for the object occurrance. Further explanations to the object can be given using the inherited Description attribute. The ObjectType attribute is used to store the user defined value for all subtypes of IfcObject , where a PredefinedType attribute is given, and its value is set to USERDEFINED. to provide a type information could be seen as a very lightweight classifier of the subtype of IfcObject , if no PredefinedType attribute is given. This is often the case, if no comprehensive list of predefined types is available. Objects are independent pieces of information that might contain or reference other pieces of information. There are several relationships in which objects can be involved Association to external internal resource information an association relationship that refers to external internal sources of information. See supertype IfcObjectDefinition for more information. Assignment of other objects an assignment relationship that refers to other types of objects. See supertype IfcObjectDefinition for more information. Aggregation of other objects an aggregation relationship that establishes a whole part relation. Objects can either be a whole, or a part, or both. See supertype IfcObjectDefinition for more information. Assignment of a type IsTypedBy a definition relationship IfcRelDefinesByType that uses a type definition to define the common characteristics of this occurrences, potentially including the common shape representation and common properties of all object occurrences assigned to this type. It is a specific occurrence relationship with implied dependencies as the occurrence properties depend on the properties of the type, but may override them . Assignment of a partial type IsDeclaredBy , Declares a definition relationship IfcRelDefinesByObject that uses a component of a type definition a part of a type, called the declaring part to define a component of an occurence part of occurrence, called the reflected part . This is also refered to as a deep copy . The common characteristics of all parts in the occurrence are defined by parts in the type. It is a specific occurrence relationship with implied dependencies as the occurrence properties depend on the properties of the type, but may override them . Assignment of property sets IsDefinedBy a definition relationship IfcRelDefinesByProperties that assignes property set definitions to the object occurrence. NOTE See IfcRelDefinesByType for an explanatory figure. Also see there for how to override type properties by occurrence properties. See IfcRelDefinesByObject for an explanatory figure for the assignment of a partial type. HISTORY New entity in IFC1.0 .change ifc2x4 IFC4 CHANGE The inverse relationships Declares , IsDeclaredBy , and IsTypedBy have been added, types are not longer included in the IsDefinesBy relationship. IfcProject has been promoted to be a subtype of IfcObjectDefinition IfcContext . .spec head Informal Propositions 1. A partial type assignment, i.e. the inverse attribute IsDeclaredBy , or Declares shall only be used, if the object is part of a decomposition, i.e. if either IsDecomposedBy , or Decomposes is exerted. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcObjectDefinition"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcObjectDefinition"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcPropertySetTemplate defines the template for all dynamically extensible property sets represented by IfcPropertySet . The property set template is a container of property templates within a property tree. The individual property templates are interpreted according to their Name attribute and shall have no values assigned. NOTE By convention an IfcPropertySetTemplate can also be used as a template for an IfcElementQuantity , being a particular type of a property set definition. Property set templates can form part of a property library used and declared within a project. Depending on the TemplateType the IfcPropertySetTemplate defines a template for Pset occurrences of IfcPropertySet QTO occurrences of IfcElementQuantity The inherited HasContext inverse relation to IfcRelDeclares is used to declare the IfcPropertySetTemplate within a project library. If included in an exchange data set it can then be traversed through the IfcProjectLibrary . The Defines inverse relation to IfcRelDefinesByTemplate is provided to keep the definition relationship between the IfcPropertySetTemplate and the one to many IfcPropertySet s, for which it provides the template. Figure 1 illustrates relationships used for property set templates. property set template .. .. .. .. .. .. figures ifcpropertysettemplate fig 1.png Figure 1 Property set template relationships Between IfcProperty s within the HasProperties set of IfcPropertySet having the same Name attribute value as the IfcPropertyTemplate s within the HasPropertyTemplates set of IfcPropertySetTemplate an implicit definition relationship is established that assigns the template to the individual properties. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcPropertyTemplateDefinition"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcPropertyTemplateDefinition"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcPreDefinedPropertySet is a generalization of all statically defined property sets that are assigned to an object or type object. The statically or pre defined property sets are entities with a fixed list of attributes having particular defined data types. Property sets are related to other objects by using the relationship object that refers to the corresponding object Occurrence Object IfcRelDefinesByProperties using the inverse attribute DefinesOccurrence . Type Object using a direct link by inverse attribute DefinesType . IfcPreDefinedPropertySet s can be assigned to objects and object types but do not have a defining property set template. HISTORY New entity in IFC4 bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcPropertySetDefinition"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcPropertySetDefinition"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcSimplePropertyTemplate defines the template for all dynamically extensible properties, either the subtypes of IfcSimpleProperty , or the subtypes of IfcPhysicalSimpleQuantity . The individual property templates are interpreted according to their Name attribute and may have a predefined template type, property units, and property measure types. The correct interpretation of the attributes PrimaryUnit SecondaryUnit PrimaryMeasureType SecondaryMeasureType is determined by the TemplateType . The attributes Enumerators and Expression only apply to instances of IfcSimplePropertyTemplate having a particular TemplateType . The TemplateType also controls, which subtype of either IfcSimpleProperty or IfcPhysicalSimpleQuantity shall be used for property occurrences corresponding to this template. The IfcSimplePropertyTemplate is part of the set of templates included in the IfcPropertySetTemplate . The template can be accessed throught the inverse attribute PartOfPsetTemplate The IfcPropertySetTemplate may define one or several instances of IfcPropertySet or IfcElementQuantity . The definition assignment is established by the objectified relationship IfcRelDefinesByTemplate as shown in Figure 1. There is no direct link between an IfcSimplePropertyTemplate and a subtype of either IfcSimpleProperty or IfcPhysicalSimpleQuantity . The definition relationship between the template and the individual properties or quantities is established by the Name attributes. NOTE Constraints at IfcPropertySetTemplate and IfcPropertySet and IfcElementQuantity guarantee that the Name attributes of included property templates and individual properties are unique. IfcSimplePropertyTemplate figure 1 .. .. .. .. .. .. figures ifcsimplepropertytemplate fig 1.png Figure 1 Property template relationships HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcPropertyTemplate"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcPropertyTemplate"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcPropertySetTemplate defines the template for all dynamically extensible property sets represented by IfcPropertySet . The property set template is a container of property templates within a property tree. The individual property templates are interpreted according to their Name attribute and shall have no values assigned. NOTE By convention an IfcPropertySetTemplate can also be used as a template for an IfcElementQuantity , being a particular type of a property set definition. Property set templates can form part of a property library used and declared within a project. Depending on the TemplateType the IfcPropertySetTemplate defines a template for Pset occurrences of IfcPropertySet QTO occurrences of IfcElementQuantity The inherited HasContext inverse relation to IfcRelDeclares is used to declare the IfcPropertySetTemplate within a project library. If included in an exchange data set it can then be traversed through the IfcProjectLibrary . The Defines inverse relation to IfcRelDefinesByTemplate is provided to keep the definition relationship between the IfcPropertySetTemplate and the one to many IfcPropertySet s, for which it provides the template. Figure 1 illustrates relationships used for property set templates. property set template .. .. .. .. .. .. figures ifcpropertysettemplate fig 1.png Figure 1 Property set template relationships Between IfcProperty s within the HasProperties set of IfcPropertySet having the same Name attribute value as the IfcPropertyTemplate s within the HasPropertyTemplates set of IfcPropertySetTemplate an implicit definition relationship is established that assigns the template to the individual properties. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcPropertySetTemplate"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcPropertySetTemplate"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcComplexPropertyTemplate defines the template for all complex properties, either the IfcComplexProperty s, or the IfcPhysicalComplexQuantity s. The individual complex property templates are interpreted according to their Name attribute and and optional UsageName attribute. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcComplexPropertyTemplate"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcComplexPropertyTemplate"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcSimplePropertyTemplate defines the template for all dynamically extensible properties, either the subtypes of IfcSimpleProperty , or the subtypes of IfcPhysicalSimpleQuantity . The individual property templates are interpreted according to their Name attribute and may have a predefined template type, property units, and property measure types. The correct interpretation of the attributes PrimaryUnit SecondaryUnit PrimaryMeasureType SecondaryMeasureType is determined by the TemplateType . The attributes Enumerators and Expression only apply to instances of IfcSimplePropertyTemplate having a particular TemplateType . The TemplateType also controls, which subtype of either IfcSimpleProperty or IfcPhysicalSimpleQuantity shall be used for property occurrences corresponding to this template. The IfcSimplePropertyTemplate is part of the set of templates included in the IfcPropertySetTemplate . The template can be accessed throught the inverse attribute PartOfPsetTemplate The IfcPropertySetTemplate may define one or several instances of IfcPropertySet or IfcElementQuantity . The definition assignment is established by the objectified relationship IfcRelDefinesByTemplate as shown in Figure 1. There is no direct link between an IfcSimplePropertyTemplate and a subtype of either IfcSimpleProperty or IfcPhysicalSimpleQuantity . The definition relationship between the template and the individual properties or quantities is established by the Name attributes. NOTE Constraints at IfcPropertySetTemplate and IfcPropertySet and IfcElementQuantity guarantee that the Name attributes of included property templates and individual properties are unique. IfcSimplePropertyTemplate figure 1 .. .. .. .. .. .. figures ifcsimplepropertytemplate fig 1.png Figure 1 Property template relationships HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSimplePropertyTemplate"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSimplePropertyTemplate"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An IfcElementQuantity defines a set of derived measures of an element s physical property. Elements could be spatial structure elements like buildings, storeys, or spaces or building elements like walls, slabs, finishes . The IfcElementQuantity gets assigned to the element by using the IfcRelDefinesByProperties relationship. The optional MethodOfMeasurement attribute defines the code, e.g. from a standard method of measurement, which had been used to calculate the element quantity. NOTE The recognizable values for the name and the method of measurement attributes have to be agreed upon in further agreement documents, such as implementers agreements. Some of these agreements might be limited to a certain region, to which the method of measurement applies. The name attribute, given at the individual Quantities provides a recognizable semantic meaning of the element quantity. Both information is needed to establish a precise meaning for the measure value. An optional description may be assigned to each of the Quantities . All quantities assigned by a single instance of IfcElementQuantity are deemed to have been generated according to the same method of measurement. However several instances of IfcElementQuantity are assignable to an element, thus allowing for an element having quantities generated according to several methods of measurement. EXAMPLE To exchange the net floor area of spaces in the German region as IfcSpace , the name might be Netto Grundfl\u00e4che net floor area , and the method of measurement might be accordingly DIN277 2 German industry norm no. 277 edition 2 . EXAMPLE The same instance of IfcSpace may have a different area measure assigned in the German region according to a housing regulation, the name would be Wohnfl\u00e4che and the method of measurement would be 2.BV . It would be attached to the IfcSpace by a separate IfcRelDefinesByProperties relationship. The IfcElementQuantity can have the following subtypes of IfcPhysicalQuantity within its SET of Quantities , which count for the basis measure types used count measure weight measure length measure area measure volume measure time measure Base quantities are quantity definitions that are independent of a particular method of measurement and therefore internationally applicable. Base quantities are defined as gross and net values and provided by measurement of the correct geometric shape representation of the element. This specification includes a set of base quantity definition. See each subtype of IfcElement for applicable base quantities. The following general agreements apply for each base quantity set IfcElementQuantity.Name IfcElementQuantity.MethodOfMeasurement BaseQuantities IfcElementQuantity.Quantities SET of subtypes of IfcPhysicalSimpleQuantity with values for the Name attribute as published as part of this specifciation. HISTORY New entity in IFC2x. .change ifc2x4 IFC4 CHANGE Subtyped from new intermediate IfcQuantitySet supertype. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcQuantitySet"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcQuantitySet"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcPropertySet is a container that holds properties within a property tree. These properties are interpreted according to their name attribute. Each individual property has a significant name string. Some property sets are included in the specification of this standard and have a predefined set of properties indicated by assigning a significant name. These property sets are listed under property sets within this specification. Property sets applicable to certain objects are listed in the object specification. The naming convention Pset Xxx applies to all those property sets that are defined as part of this specification and it shall be used as the value of the Name attribute. In addition any user defined property set can be captured. Property sets that are not declared as part of the IFC specification shall have a Name value not including the Pset prefix. IfcPropertySet can be assigned to object occurrences and object types. An IfcPropertySet assigned to an object type is shared among all occurrences of the same object type. NOTE See IfcRelDefinesByType for how to override property sets assigned to an object type within the object occurrence. An IfcPropertySetTemplate may define the underlying structure, i.e. the required name, the applicable object or object types to which the property set can be attached, and the individual properties that can be included. Property sets are related to other objects by using the relationship object that refers to the corresponding object Occurrence Object IfcRelDefinesByProperties using the inverse attribute DefinesOccurrence . Type Object using a direct link by inverse attribute DefinesType . Underlying template IfcRelDefinesByTemplate using the inverse attribute IsDefinedBy . External reference subtypes of IfcRelAssociates are used to provide a link to a classification system, or external library providing further reference to the property set. Accessible by inverse attribute HasAssociations . HISTORY New entity in IFC1.0 .change ifc2x4 IFC4 CHANGE All statically defined property set entities are no longer subtypes of IfcPropertySet . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcPropertySet"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcPropertySet"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The door lining is the frame which enables the door leaf to be fixed in position. The door lining is used to hang the door leaf. The parameters of the door lining define the geometrically relevant parameter of the lining. NOTE The IfcDoorLiningProperties shall only be applied by the receiving application to parametrically define the 3D shape of a door, if the attribute IfcDoorType .ParameterTakesPrecedence is set TRUE. The IfcDoorLiningProperties are included in the list of properties of IfcDoorType .HasPropertySets. More information about the door lining can be included in the same list of the IfcDoorTyype using another IfcPropertySet for dynamic extensions. The IfcDoorLiningProperties does not hold its own geometric representation. However it defines parameters which can be used to create the shape of the door type which is inserted by the IfcDoor into the spatial context of the project as shown in Figure 1. The parameters of the IfcDoorLiningProperties define a standard door lining, including if given a threshold and a transom. The outer boundary of the lining is determined by the Profile shape representation assigned to the IfcDoor , which inserts the IfcDoorType . The lining is applied to the left, right and upper side of the opening reveal. The parameters are LiningDepth, if omited, equal to wall thickness this only takes effect if a value for LiningThickness is given. If both parameters are not given, then there is no lining. LiningThickness LiningToPanelOffsetX LiningToPanelOffsetY NOTE The parameters LiningToPanelOffsetX and LiningToPanelOffsetY are added in IFC4. The lining can only cover part of the opening reveal. LiningOffset given if lining edge has an offset to the x axis of the local placement. NOTE In addition to the S LiningOffset, the local placement of the IfcDoor can already have an offset to the wall edge and thereby shift the lining along the y axis. The actual position of the lining is calculated from the origin of the local placement along the positive y axis with the distance given by LiningOffset. The lining may include a casing, which covers part of the wall faces around the opening. The casing covers the left, right and upper side of the lining on both sides of the wall. The parameters are CasingDepth CasingThickness The lining may include a threshold, which covers the bottom side of the opening. The parameters are ThresholdDepth if omited, equal to wall thickness this only takes effect if a value for ThresholdThickness is given. If both parameters are not given, then there is no threshold. ThresholdThickness ThresholdOffset not shown in figure given, if the threshold edge has an offset to the x axis of the local placement. The lining may have a transom which separates the door panel from a window panel. The transom, if given, is defined by TransomOffset a parallel edge to the x axis of the local placement TransomThickness The depth of the transom is identical to the depth of the lining and not given as separate parameter. Figure 1 Door lining properties NOTE LiningDepth describes the length of the lining along the reveal of the door opening. It can be given by an absolute value if the door lining has a specific depth depending on the door style. However often it is equal to the wall thickness. If the same door style is used like the same type of single swing door , but inserted into different walls with different thicknesses, it would be necessary to create a special door style for each wall thickness. Therefore several CAD systems allow to set the value to automatically aligned to wall thickness. This should be exchanged by leaving the optional attribute LiningDepth unassigned. The same agreement applies to ThresholdDepth . HISTORY New entity in IFC2.0. Has been renamed from IfcDoorLining in IFC2x. .change ifc2x4 IFC4 CHANGE The following attributes have been added LiningToPanelOffsetX , LiningToPanelOffsetY . The attribute ShapeAspectStyle is deprecated and shall no longer be used. Supertype changed to new IfcPreDefinedPropertySet . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcPreDefinedPropertySet"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcPreDefinedPropertySet"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An IfcElementQuantity defines a set of derived measures of an element s physical property. Elements could be spatial structure elements like buildings, storeys, or spaces or building elements like walls, slabs, finishes . The IfcElementQuantity gets assigned to the element by using the IfcRelDefinesByProperties relationship. The optional MethodOfMeasurement attribute defines the code, e.g. from a standard method of measurement, which had been used to calculate the element quantity. NOTE The recognizable values for the name and the method of measurement attributes have to be agreed upon in further agreement documents, such as implementers agreements. Some of these agreements might be limited to a certain region, to which the method of measurement applies. The name attribute, given at the individual Quantities provides a recognizable semantic meaning of the element quantity. Both information is needed to establish a precise meaning for the measure value. An optional description may be assigned to each of the Quantities . All quantities assigned by a single instance of IfcElementQuantity are deemed to have been generated according to the same method of measurement. However several instances of IfcElementQuantity are assignable to an element, thus allowing for an element having quantities generated according to several methods of measurement. EXAMPLE To exchange the net floor area of spaces in the German region as IfcSpace , the name might be Netto Grundfl\u00e4che net floor area , and the method of measurement might be accordingly DIN277 2 German industry norm no. 277 edition 2 . EXAMPLE The same instance of IfcSpace may have a different area measure assigned in the German region according to a housing regulation, the name would be Wohnfl\u00e4che and the method of measurement would be 2.BV . It would be attached to the IfcSpace by a separate IfcRelDefinesByProperties relationship. The IfcElementQuantity can have the following subtypes of IfcPhysicalQuantity within its SET of Quantities , which count for the basis measure types used count measure weight measure length measure area measure volume measure time measure Base quantities are quantity definitions that are independent of a particular method of measurement and therefore internationally applicable. Base quantities are defined as gross and net values and provided by measurement of the correct geometric shape representation of the element. This specification includes a set of base quantity definition. See each subtype of IfcElement for applicable base quantities. The following general agreements apply for each base quantity set IfcElementQuantity.Name IfcElementQuantity.MethodOfMeasurement BaseQuantities IfcElementQuantity.Quantities SET of subtypes of IfcPhysicalSimpleQuantity with values for the Name attribute as published as part of this specifciation. HISTORY New entity in IFC2x. .change ifc2x4 IFC4 CHANGE Subtyped from new intermediate IfcQuantitySet supertype. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcElementQuantity"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcElementQuantity"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A window panel is a casement, that is, a component, fixed or opening, consisting essentially of a frame and the infilling. The infilling of a window panel is normally glazing. The way of operation is defined in the operation type. The IfcWindowPanelProperties are used to parametrically describe the shape and operation of window panels. The parametric definition can be added solely or additionally to the explicit shape representation of the window. The IfcWindowType can define windows consisting of more then one panel. In this case, one instance of IfcWindowPanelProperties has to be included for each window panel. The PanelPosition attribute, in conjunction with the IfcWindowType .OperationType attribute, determines to which panel the IfcWindowPanelProperties apply. The IfcWindowPanelProperties are included in the list of properties HasPropertySets of the IfcWindowStyle . More information about the window panel can be included in the same list of the IfcWindowType using the IfcPropertySet for dynamic extensions. The IfcWindowPanelProperties does not hold an own geometric representation. However it defines parameter, which can be used to create the shape of the IfcWindowType which is inserted by the IfcWindow into the spatial context of the project . The parameters at the IfcWindowPanelProperties define a standard window panel. The outer boundary of the lining is determined by the Profile shape representation assigned to the IfcWindow , which inserts the IfcWindowType . It has to take the lining parameter into account as well. The position of the window panel within the overall window is determined by the PanelPosition attribute. As shown in Figure 1, the panel is applied to the position within the lining as defined by the panel position attribute. The following parameter apply to that panel FrameDepth , FrameThickness . panel 1 .. .. .. .. .. .. figures ifcwindowpanelproperties fig01.gif Figure 1 Window panel properties HISTORY New entity in IFC2.0, it had been renamed from IfcWindowPanel in IFC2x. .change ifc2x4 IFC4 CHANGE Supertype changed to new IfcPreDefinedPropertySet . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcWindowPanelProperties"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcWindowPanelProperties"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A door panel is normally a door leaf that opens to allow people or goods to pass. The parameters of the door panel define the geometrically relevant parameter of the panel, The IfcDoorPanelProperties are used to parametrically describe the shape and operation of door panels. The parametric definition can be added solely or additionally to the explicit shape representation of the door. The IfcDoorType can define doors consisting of more then one panel. In this case, one instance of IfcDoorPanelProperties has to be included for each door panel. The PanelPosition attribute, in conjunction with the IfcDoorStyle.OperationType attribute, determines to which panel the IfcDoorPanelProperties apply. The IfcDoorPanelProperties are included in the list of properties , given by attribute HasPropertySets of the IfcDoorType . More information about the door panel can be included in the same list of the IfcDoorStyle using the IfcPropertySet for dynamic extensions. The IfcDoorPanelProperties does not hold a geometric representation. However it defines parameters which can be used to create the shape of the door type which is inserted by the IfcDoor into the spatial context of the project as shown in Figure 1. The parameters of the IfcDoorPanelProperties define a standard door panel, including if given a proportional width to define non uniform double swing or sliding, or folding doors. The outer boundary of the panel is determined by the Profile shape representation assigned to the IfcDoor , which inserts the IfcDoorType . It has to take the lining parameter into account as well. The depth of the panel swinging, double acting, and sliding panels is defined by the PanelDepth parameter. PanelDepth For door operation types that include more than one panel, the width of at least one panel is given by a normalised ratio measure. It determines the width of that panel, which is defined as a ratio of the overall width of the door opening. PanelWidth Figure 1 Door panel properties HISTORY New entity in IFC2.0. .change ifc2x4 IFC4 CHANGE Supertype changed to new IfcPreDefinedPropertySet . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDoorPanelProperties"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDoorPanelProperties"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "This entity is a description of a panel within a door or window as fillers for opening which allows for air flow. It is given by its properties IfcPermeableCoveringProperties . A permeable covering is a casement, such as a component, fixed or opening, consisting essentially of a frame and the infilling. The infilling is normally a grill, a louver or a screen. The way of operation is defined in the operation type. The IfcPermeableCoveringProperties are included in the list of properties HasPropertySets of the IfcWindowStyle or the IfcDoorStyle . More information about the permeable covering can be included in the same list of the window or door style using the IfcPropertySet for dynamic extensions. This particularly applies for additional properties for the various operation types The IfcPermeableCoveringProperties does not hold a geometric representation. However it defines parameters which can be used to create the shape of the IfcWindowStyle which is inserted by the IfcWindow into the spatial context of the project , or of the IfcDoorStyle which is inserted by the IfcDoor . The parameters at the IfcPermeableCoveringProperties define a standard permeable covering. The outer boundary of the panel is determined by the occurrence parameter assigned to the IfcWindow or IfcDoor . It has to take the lining parameter into account as well. The position of the permeable covering within the overall window or door is determined by the PanelPosition attribute. Figure 1 illustrates the panel applied to the position within the lining, as defined by the panel position attribute. The following parameters apply to that panel FrameDepth , FrameThickness . covering .. .. .. .. .. .. figures ifcpermeablecoveringproperties.gif Figure 1 Permeable covering properties HISTORY New entity in IFC2.0, it had been renamed from IfcPermeableCovering in IFC2x. .change ifc2x4 IFC4 CHANGE Supertype changed to new IfcPreDefinedPropertySet . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcPermeableCoveringProperties"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcPermeableCoveringProperties"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The window lining is the outer frame which enables the window to be fixed in position. The window lining is used to hold the window panels or other casements. The parameter of the IfcWindowLiningProperties define the geometrically relevant parameter of the lining. NOTE The IfcWindowLiningProperties shall only be applied to construct the 3D shape of a window, if the attribute IfcWindowType .ParameterTakesPrecedence is set TRUE. The IfcWindowLiningProperties are included in the set of properties of IfcWindowStyle.HasPropertySets . More information about the window lining can be included in the same set of the IfcWindowType using another IfcPropertySet for dynamic extensions. The IfcWindowLiningProperties does not hold a geometric representation. However it defines parameters which can be used to create the shape of the window type which is inserted by the IfcWindow into the spatial context of the project as shown in Figure 1. The parameters at the IfcWindowLiningProperties define a standard window lining, including if given a mullion and a transom for horizontal and vertical splits . The outer boundary of the lining is determined by the Profile shape representation assigned to the IfcWindow , which inserts the IfcWindowType . The lining is applied to all faces of the opening reveal. The parameter are LiningDepth LiningThickness LiningOffset LiningToPanelOffsetX LiningToPanelOffsetY The inner side is defined as the direction of the window panel opening operation. If the OperationType of the window style is DoublePanelVertical shown TriplePanelBottom TriplePanelTop TriplePanelLeft TriplePanelRight the following additional parameter apply MullionThickness FirstMullionOffset measured as offset to the Z axis in XZ plane as a normalized ratio measure If the OperationType of the window type is DoublePanelHorizontal TriplePanelBottom TriplePanelTop TriplePanelLeft TriplePanelRight the following additional parameter apply TransomThickness FirstTransomOffset measured as offset to the X axis in XZ plane as a normalized ratio measure If the OperationType of the window type is TriplePanelVertical the following additional parameter apply SecondMullionOffset measured as offset to the Z axis in XZ plane as a normalized ratio measure If the OperationType of the window type is TriplePanelHorizontal the following additional parameter apply SecondTransomOffset measured as offset to the X axis in XZ plane as a normalized ratio measure Figure 1 Window lining properties HISTORY New entity in IFC2.0. Has been renamed from IfcWindowLining in IFC2x. .change ifc2x4 IFC4 CHANGE The following attributes have been added LiningOffset , LiningToPanelOffsetX , LiningToPanelOffsetY . The attribute ShapeAspectStyle is deprecated and shall no longer be used. Supertype changed to new IfcPreDefinedPropertySet . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcWindowLiningProperties"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcWindowLiningProperties"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcReinforcementDefinitionProperties defines the cross section properties of reinforcement included in reinforced concrete building elements. The property set definition may be used both in conjunction with insitu and precast structures. This subtype of IfcPropertySetDefinition is used to define the reinforcement properties in early design stages, such as in requirement definition or scheme design. In later design stages explicit instances of subtypes of IfcReinforcingElement are used. The intended usage may be indicated using the DefinitionType attribute value as a designator recommended values are Reinforcement area requirement or Reinforcement configuration requirement . Other values may be used according to local standards. Only one property set definition of this kind is used for each concrete building element in each intended usage indicated by the DefinitionType attribute value. This set then defines a list of cross section properties in a discrete number of longitudinal sections as instances of IfcSectionReinforcementProperties one for each structural reinforcement bar role , which in turn have a section cross section property defined as a profile and a number of reinforcement properties, one for each steel grade bar type. HISTORY New entity in IFC2x2 .change ifc2x4 IFC4 CHANGE Supertype changed from IfcPropertySetDefinition to IfcPreDefinedPropertySet bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcReinforcementDefinitionProperties"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcReinforcementDefinitionProperties"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The door lining is the frame which enables the door leaf to be fixed in position. The door lining is used to hang the door leaf. The parameters of the door lining define the geometrically relevant parameter of the lining. NOTE The IfcDoorLiningProperties shall only be applied by the receiving application to parametrically define the 3D shape of a door, if the attribute IfcDoorType .ParameterTakesPrecedence is set TRUE. The IfcDoorLiningProperties are included in the list of properties of IfcDoorType .HasPropertySets. More information about the door lining can be included in the same list of the IfcDoorTyype using another IfcPropertySet for dynamic extensions. The IfcDoorLiningProperties does not hold its own geometric representation. However it defines parameters which can be used to create the shape of the door type which is inserted by the IfcDoor into the spatial context of the project as shown in Figure 1. The parameters of the IfcDoorLiningProperties define a standard door lining, including if given a threshold and a transom. The outer boundary of the lining is determined by the Profile shape representation assigned to the IfcDoor , which inserts the IfcDoorType . The lining is applied to the left, right and upper side of the opening reveal. The parameters are LiningDepth, if omited, equal to wall thickness this only takes effect if a value for LiningThickness is given. If both parameters are not given, then there is no lining. LiningThickness LiningToPanelOffsetX LiningToPanelOffsetY NOTE The parameters LiningToPanelOffsetX and LiningToPanelOffsetY are added in IFC4. The lining can only cover part of the opening reveal. LiningOffset given if lining edge has an offset to the x axis of the local placement. NOTE In addition to the S LiningOffset, the local placement of the IfcDoor can already have an offset to the wall edge and thereby shift the lining along the y axis. The actual position of the lining is calculated from the origin of the local placement along the positive y axis with the distance given by LiningOffset. The lining may include a casing, which covers part of the wall faces around the opening. The casing covers the left, right and upper side of the lining on both sides of the wall. The parameters are CasingDepth CasingThickness The lining may include a threshold, which covers the bottom side of the opening. The parameters are ThresholdDepth if omited, equal to wall thickness this only takes effect if a value for ThresholdThickness is given. If both parameters are not given, then there is no threshold. ThresholdThickness ThresholdOffset not shown in figure given, if the threshold edge has an offset to the x axis of the local placement. The lining may have a transom which separates the door panel from a window panel. The transom, if given, is defined by TransomOffset a parallel edge to the x axis of the local placement TransomThickness The depth of the transom is identical to the depth of the lining and not given as separate parameter. Figure 1 Door lining properties NOTE LiningDepth describes the length of the lining along the reveal of the door opening. It can be given by an absolute value if the door lining has a specific depth depending on the door style. However often it is equal to the wall thickness. If the same door style is used like the same type of single swing door , but inserted into different walls with different thicknesses, it would be necessary to create a special door style for each wall thickness. Therefore several CAD systems allow to set the value to automatically aligned to wall thickness. This should be exchanged by leaving the optional attribute LiningDepth unassigned. The same agreement applies to ThresholdDepth . HISTORY New entity in IFC2.0. Has been renamed from IfcDoorLining in IFC2x. .change ifc2x4 IFC4 CHANGE The following attributes have been added LiningToPanelOffsetX , LiningToPanelOffsetY . The attribute ShapeAspectStyle is deprecated and shall no longer be used. Supertype changed to new IfcPreDefinedPropertySet . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDoorLiningProperties"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDoorLiningProperties"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcRelVoidsElement is an objectified relationship between a building element and one opening element that creates a void in the element. It is a one to one relationship. This relationship implies a Boolean operation of subtraction between the geometric bodies of the element and the opening. As shown in Figure 1, the insertion of a void into a wall is represented by the relationship IfcRelVoidsElement . The opening is created within the wall by IfcWall StandardCase o IfcRelVoidsElement o IfcOpeningElement . relationships for voiding .. .. .. .. .. .. figures ifcrelvoidselements fig1.png Figure 1 Relationship for element voiding HISTORY New entity in IFC1.0 bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelDecomposes"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelDecomposes"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcRelServicesBuildings is an objectified relationship that defines the relationship between a system and the sites, buildings, storeys, spaces, or spatial zones, it serves. Examples of systems are building service systems heating, cooling, waste water system represented by instances of IfcDistributionSystem building systems fenestration, shading represented by instances of IfcBuildingSystem zones as collection of logically grouped spaces represented by instances of IfcZone idealized structural analysis systems represented by instances of IfcStructuralAnalysisModel . NOTE The name IfcRelServicesBuildings is a known anomaly, as the relationship is not restricted to buildings anymore. HISTORY New entity in IFC1.0. .change ifc2x IFC2x CHANGE The data type of the attribute RelatedBuildings has been changed from IfcBuilding to its supertype IfcSpatialStructureElement with upward compatibility for file based exchange. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelConnects"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelConnects"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The objectified relationship IfcRelAssignsToActor handles the assignment of objects subtypes of IfcObject to an actor subtypes of IfcActor . The IfcRelAssignsToActor objectified relationship defines a relationship between an IfcActor and one or many objects. A particular role of the actor played in that relationship can be associated. If specified, it takes priority over the role that may be directly assigned to the person or organization. EXAMPLE An occupant as an actor may rent a flat as a collection of spaces or a zone . This would be an application of this generic relationship. Reference to the objects or single object on which the actor acts upon in a certain role if given is specified in the inherited RelatedObjects attribute. HISTORY New entity in IFC2.0. Has been renamed from IfcRelActsUpon in IFC2x. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelAssigns"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelAssigns"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The entity IfcRelAssociatesApproval is used to apply approval information defined by IfcApproval , in IfcApprovalResource schema, to subtypes of IfcRoot . HISTORY New entity in IFC2x2. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelAssociates"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelAssociates"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The objectified relationship IfcRelDefinesByProperties defines the relationships between property set definitions and objects. Properties are aggregated in property sets. Property sets can be either directly assigned to occurrence objects using this relationship, or assigned to an object type and assigned via that type to occurrence objects. The assignment of an IfcPropertySet to an IfcTypeObject is not handled via this objectified relationship, but through the direct relationship HasPropertySets at IfcTypeObject . The IfcRelDefinesByProperties is an N to N relationship, as it allows for the assignment of one or more property sets to one or more objects. Those objects then share the same property definition. HISTORY New entity in IFC2.0. Has been renamed from IfcRelAssignsProperties in IFC2x. .change ifc2x4 IFC4 CHANGE The attribute RelatedObjects had been demoted from the supertype IfcRelDefines to IfcRelDefinesByProperties . This relationship has been modified to support multiple property sets referenced by a single relationship. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelDefines"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelDefines"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The objectified relationship IfcRelDeclares handles the declaration of objects subtypes of IfcObject or properties subtypes of IfcPropertyDefinition to a project or project library represented by IfcProject , or IfcProjectLibrary . The relationship handles the assignment of other objects, like IfcActor , or IfcTypeObject to the project, or project libary. The attribute RelatedDefinitions provides the references to the first level objects, that are the elements within the context. All other objects that relate to the first level objects are also defined in the context. NOTE Every object as subtype of IfcObject has to be declared within the context of a single IfcProject , or of a IfcProjectLibrary assigned to a single IfcProject . This declaration is transitive. For example the IfcWorkPlan as first level object is declared within the context of IfcProject via IfcRelDeclares , all related IfcWorkSchedule s are related to the context in a transitive way through IfcWorkPlan . NOTE The assignment excludes subtypes of IfcProduct s, these are assigned to the IfcProject using the spatial structure approach through IfcSpatialStructureElement s , where the outer container element such as IfcSite or IfcBuilding has an IfcRelAggregates relationship with the IfcProject . The RelatingContext is the project, or project library that comprises all elements. The unit assignments and the presentation contexts defined at IfcProject or IfcProjectLibrary apply to all these elements. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelDeclares"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelDeclares"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The nesting relationship IfcRelNests is a special type of the general composition decomposition or whole part relationship IfcRelDecomposes . The nesting relationship can be applied to all non physical subtypes of object and object types, namely processes, controls like cost items , and resources. It can also be applied to physical subtypes of object and object types, namely elements having ports. The nesting implies an order among the nested parts. EXAMPLE A nesting of costs items in an IfcCostSchedule is the composition of complex cost items from other cost items. The order of the nested cost items underneath the parent cost item is determined by the order of the list of RelatedObjects . EXAMPLE A nesting of IfcTask s within a work schedule is the composition of a parent work task from more specific sub work tasks. The order of the sub tasks underneath the parent task is determined by the order of the list of RelatedObjects . EXAMPLE A series of IfcDistributionPort s can be nested within an IfcDistributionElement . They decompose the distribution element and have an implied order. Decompositions imply a dependency, i.e. the definition of the whole depends on the definition of the parts and the parts depend on the existence of the whole. The behaviour that is implied from the dependency has to be established inside the applications. HISTORY New entity in IFC2.0 .change ifc2x4 IFC4 CHANGE The attributes RelatingObject and RelatedObjects are demoted from the supertype IfcRelDecomposes , and RelatedObjects is refined to be a list. The use of IfcRelNests is repurposed to be a nesting of an ordered collections of parts. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelNests"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelNests"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcRelProjectsElement is an objectified relationship between an element and one projection element that creates a modifier to the shape of the element. The relationship is defined to be a 1 1 relationship, if an element has more than one projection, several relationship objects have to be used, each pointing to a different projection element. The IfcRelProjectsElement establishes an aggregation relationship between the main element and a sub ordinary addition feature. NOTE In contrary the IfcRelAggregates relationship established an aggregation of equal parts to a whole. The IfcRelProjectsElement implies a Boolean operation of addition for the geometric bodies of the element and the feature element. As with all decomposition relationships it determines existence dependency the RelatedFeatureElement cannot exist without the RelatingElement hierarchical and non cyclical relationship the IfcRelProjectsElement can only alter a single IfcElement no spatial containment the IfcFeatureElementAddition as related element never participates in the hiearchical spatial containment relationship IfcRelContainedInSpatialStructure HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE Supertype changed to IfcRelDecomposes. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelProjectsElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelProjectsElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The aggregation relationship IfcRelAggregates is a special type of the general composition decomposition or whole part relationship IfcRelDecomposes . The aggregation relationship can be applied to all subtypes of IfcObjectDefinition . In cases of aggregation of physical elements into a physical aggregate the shape representation of the whole within the same representation identifier can be taken from the sum of the shape representations of the parts. EXAMPLE A roof is the aggregation of the roof elements, such as roof slabs, rafters, purlins, etc. Within the same representation identifier such as the body geometric representation , the shape representation of the roof is given by the shape representation of its parts. Decompositions imply a dependency, implying that the whole depends on the definition of the parts and the parts depend on the existence of the whole. The behaviour that is implied from the dependency relationship has to be established inside the applications. HISTORY New entity in IFC2x. .change ifc2x4 IFC4 CHANGE The attributes RelatingObject and RelatedObjects are demoted from the supertype IfcRelDecomposes . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelAggregates"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelAggregates"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcRelVoidsElement is an objectified relationship between a building element and one opening element that creates a void in the element. It is a one to one relationship. This relationship implies a Boolean operation of subtraction between the geometric bodies of the element and the opening. As shown in Figure 1, the insertion of a void into a wall is represented by the relationship IfcRelVoidsElement . The opening is created within the wall by IfcWall StandardCase o IfcRelVoidsElement o IfcOpeningElement . relationships for voiding .. .. .. .. .. .. figures ifcrelvoidselements fig1.png Figure 1 Relationship for element voiding HISTORY New entity in IFC1.0 bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelVoidsElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelVoidsElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcRelConnectsPathElements relationship provides the connectivity information between two elements, which have path information. The objectified relationship provides the additional information required to describe the connection between two path based elements that might have single or multiple layers of material. The connection type specifies where at the path based element a connection is given at the start, in the middle or at the end . The connection is described by a connection geometry, given within the object coordinate systems of the RelatingElement and of the RelatedElement . In case of IfcWallStandardCase as the RelatingElement and RelatedElement the connection geometry is provided by the subtype IfcConnectionCurveGeometry . Both curves indicate the so called end cap , i.e. the curve that trims the wall outer edges being parallel along the wall axis at the end. Figure 1 shows the application of IfcRelConnectsPathElements with the ConnectionGeometry of type IfcConnectionCurveGeometry. The example shows the connection relationship between two instances of IfcWallStandardCase using the IfcRelConnectsPathElements relationship. The ConnectionCurveGeometry defines the CurveOnReleatingElement and CurveOnRelatedElement, both are of type IfcPolyline. Figure 1 Path connection geometry Figure 2 Path connection T Type Figure 3 Path connection L Type Figure 2 illustrates using the IfcRelConnectsPathElements for a T type connection between two instances of IfcWallStandardCase. Figure 3 illustrates using the IfcRelConnectsPathElements for a L type connection between two instances of IfcWallStandardCase. NOTE The two wall axes connect in each case. HISTORY New entity in IFC1.5. .change ifc2x4 IFC4 CHANGE The data type of RelatingPriorities and RelatedPriorities are restricted to a range o 0..100 to be a normalized ratio measure. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelConnectsElements"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelConnectsElements"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "This objectified relationship between a distribution flow element occurrence and one to many control element occurrences indicates that the control element s sense or control some aspect of the flow element. It is applied to IfcDistributionFlowElement and IfcDistributionControlElement . This relationship may be used to indicate an operational relationship such as an actuator operating a valve, damper, or switch. It may also be used to indicate a sensing relationship such as a sensor detecting conditions of fluid flow. This relationship implies a sensing or controlling relationship if elements are merely connected without any control relationship, then IfcRelConnectsElements should be used. HISTORY New entity in IFC2x. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelFlowControlElements"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelFlowControlElements"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcRelSequence is a sequential relationship between processes where one process must occur before the other in time and where the timing of the relationship may be described as a type of sequence. The relating process IfcRelSequence.RelatingProcess is considered to be the predecessor in the relationship has precedence whilst the related process IfcRelSequence.RelatedProcess is the successor. IfcRelSequence is defined as one to one relationship therefore it assigns one predecessor to one successor. HISTORY New entity in IFC1.0. .change ifc2x4 IFC4 CHANGE Relocated to IfcProcessExtension schema. TimeLag and SequenceType made optional. USERDEFINED added to the IfcSequenceType enumeration. UserDefinedSequenceType attribute added. WHERE rule controlling use of the USERDEFINED enumeration added. .use head Use definitions IfcRelSequence is used to describe the logical sequence relationship that exists between two processes. This logical relationship identifies that there is a predecessor or relating process and a successor or related process. In IFC, there may be one predecessor and one successor in the relationship. Many occurrences of IfcRelSequence may exist to describe the sequence relationships of a predecessor task with many successor tasks or of many predecessor tasks with one successor task, thus enabling a m n sequence relationship between tasks. Please note that sequence relationships can be used to define dependencies between process occurrences but also between process types for further information see IfcRelDefinesByObject and IfcTaskType . In case of defining dependencies between process occurrences sequence relationships should stay within the limits of a directed, non cyclic graph. A sequence type may be set for a sequence. For tasks assigned to a work schedule, it is expected that the sequence type will be asserted. For a process map, where the sequence relationship between processes is simply a logical flow, it need not be asserted. A time lag may be assigned to a sequence, and the sequence type defines the way in which the time lag applies to the sequence either as a ratio or percentage of time duration e.g. start successor task when predecessor is 50 complete or as a time measure e.g. start successor task 1 week after commencement of the predecessor task . Care should be used when assigning a time lag to a sequence depending on the setting of the sequence type since there is no checking that the time lag value is in keeping with the sequence type set. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelSequence"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelSequence"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcRelConnectsStructuralActivity relationship connects a structural activity either an action or reaction to a structural member, structural connection, or element. HISTORY New entity in IFC2x2. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelConnectsStructuralActivity"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelConnectsStructuralActivity"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "This objectified relationship, IfcRelContainedInSpatialStructure , is used to assign elements to a certain level of the spatial project structure. Any element can only be assigned once to a certain level of the spatial structure. The question, which level is relevant for which type of element, can only be answered within the context of a particular project and might vary within the various regions. EXAMPLE A multi storey space is contained or belongs to the building storey at which its ground level is, but it is referenced by all the other building storeys, in which it spans. A lift shaft might be contained by the basement, but referenced by all storeys, through which it spans. The containment relationship of an element within a spatial structure has to be a hierarchical relationship an element can only be contained within a single spatial structure element. The reference relationship between an element and the spatial structure need not be hierarchical that is, an element can reference many spatial structure elements. NOTE The reference relationship is expressed by IfcRelReferencedInSpatialStructure . Predefined spatial structure elements to which elements can be assigned are site as IfcSite facility as IfcFacility or its subtypes IfcBridge, IfcBuilding, IfcMarineFacility, IfcRailway or IfcRoad part of facility as IfcFaciltityPart, or more specifically as IfcBuildingStorey or IfcSpace Occurrences of the same element type can be assigned to different spatial structure elements depending on the context of the occurrence. EXAMPLE A wall might be normally assigned to a storey, however the curtain wall might be assigned to the building and the retaining wall in the terrain might be assigned to the site. Figure 1 shows the use of IfcRelContainedInSpatialStructure to assign a stair and two walls to two different levels within the spatial structure. fig1 .. .. .. .. .. .. figures ifcrelcontainedinspatialstructure fig1.png Figure 1 Relationship for spatial structure containment HISTORY New entity in IFC2x. .change ifc2x IFC2x CHANGE The data type of the attribute RelatedElements has been changed from IfcElement to its supertype IfcProduct with upward compatibility for file based exchange. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelContainedInSpatialStructure"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelContainedInSpatialStructure"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The entity IfcRelConnectsWithEccentricity adds the definition of eccentricity to the connection between a structural member and a structural connection representing either a node or support . NOTE Another eccentricity model is available independently of eccentric connection specification The section profile of a curve member may be inserted eccentrically with respect to the member s reference curve, see definitions at IfcStructuralCurveMember . Whether one or the other or both eccentricity models may be used is subject to information requirements and local agreements. HISTORY New entity in IFC2x3. .change ifc2x4 IFC4 CHANGE Use definitions changed to always require two topology items. Use Definition Point Connection ConnectionConstraint shall be of type IfcConnectionPointGeometry and shall refer to two instances of IfcVertexPoint . Curve Connection ConnectionConstraint shall be of type IfcConnectionCurveGeometry and shall refer to two instances of IfcEdge or subtypes. Surface Connection ConnectionConstraint shall be of type IfcConnectionSurfaceGeometry and shall refer to two instances of IfcFaceSurface . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelConnectsStructuralMember"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelConnectsStructuralMember"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The objectified relationship, IfcRelReferencedInSpatialStructure is used to assign elements in addition to those levels of the project spatial S structure, in which they are referenced, but not primarily contained. It is also used to connect a system to the relevant spatial element that it serves. NOTE The primary containment relationship between an element and the spatial structure is handled by IfcRelContainedInSpatialStructure. Any element can be referenced to zero, one or several levels of the spatial structure. Whereas the IfcRelContainedInSpatialStructure relationship is required to be hierarchical an element can only be contained in exactly one spatial structure element , the IfcRelReferencedInSpatialStructure is not restricted to be hierarchical. EXAMPLE A wall might be normally contained within a storey, and since it does not span through several stories, it is not referenced in any additional storey. However a curtain wall might span through several stories, in this case it can be contained within the ground floor, but it would be referenced by all additional stories, it spans. Predefined spatial structure elements to which elements can be assigned are site as IfcSite facility as IfcFacility or its subtypes IfcBridge, IfcBuilding, IfcMarineFacility, IfcRailway or IfcRoad part of facility as IfcFaciltityPart, or more specifically as IfcBuildingStorey or IfcSpace Elements can also be references in a spatial zone that is provided as IfcSpatialZone. Figure 167 shows the use of IfcRelContainedInSpatialStructure and IfcRelReferencedInSpatialStructure to assign an IfcCurtainWall to two different levels within the spatial structure. It is primarily contained within the ground floor, and additionally referenced within the first and second floor. Spatial referencing Figure 167 Relationship for spatial structure referencing HISTORY New entity in IFC2x3. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelReferencedInSpatialStructure"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelReferencedInSpatialStructure"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The 1st level space boundary defines the physical or virtual delimiter of a space by the relationship IfcRelSpaceBoundary1stLevel to the surrounding elements. 1st level space boundaries are characterizeda by 1st level space boundaries are the boundaries of a space defined by the surfaces of building elements bounding this space physical space boundaries or by virtual surfaces provided by an adjacent space with no dividing wall. 1st level space boundaries do not consider any change of material in the bounding building elements, or different spaces zones behind a wall or slab floor or ceiling . 1st level space boundaries are differentiated in two ways virtual or physical and internal,external, or undefined internal and external e.g. for a wall that is partially inside and outside. 1st level space boundaries form a closed shell around the space so long as the space is completely enclosed and include overlapping boundaries representing openings filled or not in the building elements see implementers agreement below . 1st level space boundaries define a space by its boundary surfaces without taking anything on the other side of the bounding elements into account. NOTE 1st level space boundaries are used e.g. in quantity take off and facility management as they describe the surfaces for finishes. They cannot be directly used for thermal analysis. However 1st level space boundaries can provide the input to preprocessors to thermal analysis software that take 1st level space boundaries and perform the necessary transformation into 2nd level space boundaries that are required for energy analysis. HISTORY New entity in IFC4. .use head Relationship Use Definitions As shown in Figure 1, the attribute ParentBoundary with inverse InnerBoundaries is provided to link the space boundaries of doors, windows, and openings to the parent boundary, such as of a wall or slab. NOTE The space boundary of the parent is not cut by the inner boundary both overlap. IfcRelSpaceBoundary1stLevel .. .. .. .. .. .. figures ifcrelspaceboundary1stlevel fig1.png Figure 1 Space boundary first level relationships .use head Geometry Use Definitions See the definition at the supertype IfcRelSpaceBoundary for guidance on using the connection geometry for first level space boundaries. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelSpaceBoundary"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelSpaceBoundary"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An IfcRelPositions relationship defines the relationship that positions a product related to a positioning element.. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelPositions"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelPositions"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcRelFillsElement is an objectified relationship between an opening element and an element that fills or partially fills the opening element. It is an one to one relationship. NOTE View definitions or implementer agreements may restrict an opening to be filled by one filling element only. As shown in Figure 1, the insertion of a door into a wall is represented by two separate relationships. First the door opening is created within the wall by IfcWall StandardCase IfcOpeningElement , then the door is inserted within the opening by IfcOpeningElement IfcDoor . relationships for filling .. .. .. .. .. .. figures ifcrelfillselements fig1.png Figure 1 Relationships for element filling HISTORY New entity in IFC1.0 bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelFillsElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelFillsElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcRelCoversBldgElements relationship is an objectified relationship between an element and one to many coverings, which cover that element. NOTE The definition of IfcCoverings include both the coverings of building elements, such as flooring or cladding. and the covering of distribution elements, such as wrapping or sleeving. The IFC specification provides two relationships IfcRelCoversBldgElements to assign coverings to elements. NOTE This relationship is now deprecated and replaced by IfcRelAggregates . IfcRelCoversSpaces to assign coverings to spaces NOTE This relationship is now deprecated and replaced by IfcRelContainedInSpatialStructure . Whether the relationship between the covering and the space, or between the covering and the element, is regarded as primary, has to be determined within the context of a model view definition. HISTORY New entity in IFC1.5 .deprecated DEPRECATION The relationship IfcRelCoversBldgElements shall not be used anymore, use IfcRelAggregates instead. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelCoversBldgElements"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelCoversBldgElements"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An IfcRelConnectsPorts relationship defines the relationship that is made between two ports at their point of connection. It may include the connection geometry between two ports. The objectified relationship IfcRelConnectsPorts is required for defining how two instances of IfcPort connect together. Each of the ports is logically contained within the IfcDistributionElement by using the ordered collection IfcRelNests . HISTORY New entity in IFC2.0, modified in IFC2x. .change ifc2x4 IFC4 CHANGE Previously the containment of the IfcPort within the IfcDistributionElement had been realized using the IfcRelConnectsPortToElement relationship. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelConnectsPorts"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelConnectsPorts"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcRelConnectsPortToElement is a relationship between a distribution element and dynamically connected ports where connections are realised to other distribution elements. Ports contained in different elements are connected to each other using the IfcRelConnectsPorts relationship. NOTE See IfcRelNests for its usages to represent an ordered collection of ports that are contained by an element and relevant subtypes of IfcDistributionElement for examples and port use definition sections. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE The objectified relation IfcRelConnectsPortToElement is now specialized for use of dynamically connected ports. For fixed ports, use IfcRelNests instead. Previously this objectified relationship IfcRelConnectsPortToElement defined the relationship that is made between a port and the IfcElement in which it is contained. It is a 1 to 1 relationship. The IfcRelConnectsPortToElement established a whole part relationship between the element and its port. The port is used as the means to connect to other ports in other elements. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelConnectsPortToElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelConnectsPortToElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The objectified relationship, IfcRelCoversSpace , relates a space object to one or many coverings, which faces or is assigned to the space. NOTE Particularly floorings, ceilings and wall coverings, such as claddings or tiling are often considered as space coverings, rather then wall or slab coverings. In some life cycle phases, such as the operation phase, the relationship is always made to the space. The IFC specification provides two relationships IfcRelCoversBldgElements to assign coverings to elements. NOTE This relationship is now deprecated and replaced by IfcRelAggregates . IfcRelCoversSpaces to assign coverings to spaces NOTE This relationship is now deprecated and replaced by IfcRelContainedInSpatialStructure . Whether the relationship between the covering and the space, or between the covering and the element, is regarded as primary, has to be determined within the context of a model view definition. HISTORY New entity in IFC2x3. .deprecated DEPRECATION The relationship IfcRelCoversSpace shall not be used anymore, use IfcRelContainedInSpatialStructure instead. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelCoversSpaces"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelCoversSpaces"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcRelInterferesElements objectified relationship indicates that two elements interfere. Interference is a spatial overlap between the two elements. It is a 1 to 1 relationship. The concept of two elements interfering physically or logically is described independently from the elements. The interference may be related to the shape representation of the entities by providing an interference geometry. When the interference geometry is available it can be passed by the optional attribute InterferenceGeometry pointing to IfcConnectionGeometry . The connection geometry is provided as a point, curve, surface, or volume within the local placement coordinate systems of the connecting elements. The IfcConnectionVolumeGeometry is the default type to be used for interference in 3D space, as indicated in e.g. clash detections. If the interference geometry is omitted then the interference is provided as a logical relationship. Under this circumstance, the connection point, curve, surface, or solid has to be recalculated by the receiving application. The RelatingElement and RelatedElement define the two elements in the relationship, that may have different roles. This is controlled by the attribute ImpliedOrder . ImpliedOrder TRUE S The RelatingElement constitutes the primary element of the interference relationship. If the interference is to be resolved by subtracting the overlapping part, it should be subtracted from the RelatingElement . The net result would be the RelatingElement subtracted by the InterferenceGeometry . This would be the case in interference relationships where the RelatedElement creates a void in the RelatingElement dynamically. ImpliedOrder FALSE S The RelatingElement and RelatedElement have no priority among each other. If the interference is to be resolved then no information about whether the InterferenceGeometry should be subtracted from the RelatingElement or thed RelatedElement can be traced. This would be the case for clash detection results. ImpliedOrder UNKNOWN No information about the priorities is provided. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelInterferesElements"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelInterferesElements"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcRelServicesBuildings is an objectified relationship that defines the relationship between a system and the sites, buildings, storeys, spaces, or spatial zones, it serves. Examples of systems are building service systems heating, cooling, waste water system represented by instances of IfcDistributionSystem building systems fenestration, shading represented by instances of IfcBuildingSystem zones as collection of logically grouped spaces represented by instances of IfcZone idealized structural analysis systems represented by instances of IfcStructuralAnalysisModel . NOTE The name IfcRelServicesBuildings is a known anomaly, as the relationship is not restricted to buildings anymore. HISTORY New entity in IFC1.0. .change ifc2x IFC2x CHANGE The data type of the attribute RelatedBuildings has been changed from IfcBuilding to its supertype IfcSpatialStructureElement with upward compatibility for file based exchange. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelServicesBuildings"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelServicesBuildings"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcRelConnectsWithRealizingElements defines a generic relationship that is made between two elements that require the realization of that relationship by means of further realizing elements. An IfcRelConnectsWithRealizingElements is a specialization of IfcRelConnectsElement where the connecting operation has the additional attribute of one or many realizing elements that may be used to realize or further qualify the relationship. It is defined as a ternary relationship. EXAMPLE It may be used to describe the attachment of one element to another where the attachment is realized by a fixing element such as a bracket. It may also be used to describe the mounting of one element onto another such as the requirement for the mounting major plant items onto builders work bases and or anti vibration isolators. HISTORY New entity in IFC2x2. NOTE Regarding bridge prestressing, the tendon conduits and the tendon anchors are aggregated into the concrete elements, but not always the tendon itself as the tendon may pass through several elements . Therefore, it is good practise to use RelConnects relationships between the tendon and the tendon conduits and the tendon anchors. The connection types for bridges include TrussJoint Joint between truss members. ExpansionJoint Joint allowing movement, usually due to thermal expansion difference in structures, with DiscreteAccessory of type EXPANSION JOINT DEVICE as RealizingElement. EmbeddedPartsJoint Joint for auxiliary parts to structure, with appropriate RealizingElements, such as DiscreteAccessories of type ANCHORPLATE, BRACKET or SHOE. ConstructionJoint Joint for phasing of construction, typically in in situ concrete structures. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelConnectsWithRealizingElements"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelConnectsWithRealizingElements"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcRelConnectsPathElements relationship provides the connectivity information between two elements, which have path information. The objectified relationship provides the additional information required to describe the connection between two path based elements that might have single or multiple layers of material. The connection type specifies where at the path based element a connection is given at the start, in the middle or at the end . The connection is described by a connection geometry, given within the object coordinate systems of the RelatingElement and of the RelatedElement . In case of IfcWallStandardCase as the RelatingElement and RelatedElement the connection geometry is provided by the subtype IfcConnectionCurveGeometry . Both curves indicate the so called end cap , i.e. the curve that trims the wall outer edges being parallel along the wall axis at the end. Figure 1 shows the application of IfcRelConnectsPathElements with the ConnectionGeometry of type IfcConnectionCurveGeometry. The example shows the connection relationship between two instances of IfcWallStandardCase using the IfcRelConnectsPathElements relationship. The ConnectionCurveGeometry defines the CurveOnReleatingElement and CurveOnRelatedElement, both are of type IfcPolyline. Figure 1 Path connection geometry Figure 2 Path connection T Type Figure 3 Path connection L Type Figure 2 illustrates using the IfcRelConnectsPathElements for a T type connection between two instances of IfcWallStandardCase. Figure 3 illustrates using the IfcRelConnectsPathElements for a L type connection between two instances of IfcWallStandardCase. NOTE The two wall axes connect in each case. HISTORY New entity in IFC1.5. .change ifc2x4 IFC4 CHANGE The data type of RelatingPriorities and RelatedPriorities are restricted to a range o 0..100 to be a normalized ratio measure. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelConnectsPathElements"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelConnectsPathElements"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The entity IfcRelConnectsWithEccentricity adds the definition of eccentricity to the connection between a structural member and a structural connection representing either a node or support . NOTE Another eccentricity model is available independently of eccentric connection specification The section profile of a curve member may be inserted eccentrically with respect to the member s reference curve, see definitions at IfcStructuralCurveMember . Whether one or the other or both eccentricity models may be used is subject to information requirements and local agreements. HISTORY New entity in IFC2x3. .change ifc2x4 IFC4 CHANGE Use definitions changed to always require two topology items. Use Definition Point Connection ConnectionConstraint shall be of type IfcConnectionPointGeometry and shall refer to two instances of IfcVertexPoint . Curve Connection ConnectionConstraint shall be of type IfcConnectionCurveGeometry and shall refer to two instances of IfcEdge or subtypes. Surface Connection ConnectionConstraint shall be of type IfcConnectionSurfaceGeometry and shall refer to two instances of IfcFaceSurface . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelConnectsWithEccentricity"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelConnectsWithEccentricity"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The 2nd level space boundary defines the physical or virtual delimiter of a space by the relationship IfcRelSpaceBoundary2ndLevel to the surrounding elements. 2nd level space boundaries are characterized by 2nd level space boundaries still represent building elements that bound the space, but are more granular in that they are subdivided in any of the following cases Differences in materials and or material assemblies for example, a wainscot or paneling on the lower portion of a wall . Differences in spaces or zones on the other side of the building element or virtual boundary represented by the space boundary for example, two different spaces on the other side of a wall 2nd level space boundaries are differentiated in two ways virtual or physical and internal or external, whereby any space boundary that is both internal and external has to be split into segments being either or. 2nd level space boundaries represent both sides of a heat transfer surface separated by the thickness of the building element. They can be further differentiated in Type 2a that occurs when there is a space on the opposite side of the building element providing the space boundary Type 2b occurs if there is a building element on the opposite side of the building element providing the space boundary. The connection geometry of 2nd level space boundaries is restricted to planar surfaces only. This means that curved surfaces must be segmented. 2nd level space boundaries define the heat transfer surfaces on both sides of building elements that separate spaces. The generation of 2nd level space boundaries has to take building elements and spaces on the other side into account. NOTE 2nd level space boundaries are used by many analysis packages that require a surface view of the building that can be transformed into the various simple topological models. Examples of such analysis packages include 1 energy analysis, 2 lighting analysis, 3 fluid dynamics HISTORY New entity in IFC4. .use head Relationship Use Definitions As shown in Figure 1, the attribute ParentBoundary with inverse InnerBoundaries is provided to link the space boundaries of doors, windows, and openings to the parent boundary, such as of a wall or slab. NOTE The space boundary of the parent is not cut by the inner boundary both overlap. The attribute CorrespondingBoundary with inverse Corresponds is provided to link the pair of space boundaries on the opposite sides of the building element. NOTE Only 2nd level space boundaries of type A have corresponding boundaries. IfcRelSpaceBoundary2ndLevel .. .. .. .. .. .. figures ifcrelspaceboundary2ndlevel fig1.png Figure 1 Space boundary second level relationships .use head Geometry Use Definitions See the definition at the supertype IfcRelSpaceBoundary for guidance on using the connection geometry for second level space boundaries. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelSpaceBoundary1stLevel"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelSpaceBoundary1stLevel"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The 2nd level space boundary defines the physical or virtual delimiter of a space by the relationship IfcRelSpaceBoundary2ndLevel to the surrounding elements. 2nd level space boundaries are characterized by 2nd level space boundaries still represent building elements that bound the space, but are more granular in that they are subdivided in any of the following cases Differences in materials and or material assemblies for example, a wainscot or paneling on the lower portion of a wall . Differences in spaces or zones on the other side of the building element or virtual boundary represented by the space boundary for example, two different spaces on the other side of a wall 2nd level space boundaries are differentiated in two ways virtual or physical and internal or external, whereby any space boundary that is both internal and external has to be split into segments being either or. 2nd level space boundaries represent both sides of a heat transfer surface separated by the thickness of the building element. They can be further differentiated in Type 2a that occurs when there is a space on the opposite side of the building element providing the space boundary Type 2b occurs if there is a building element on the opposite side of the building element providing the space boundary. The connection geometry of 2nd level space boundaries is restricted to planar surfaces only. This means that curved surfaces must be segmented. 2nd level space boundaries define the heat transfer surfaces on both sides of building elements that separate spaces. The generation of 2nd level space boundaries has to take building elements and spaces on the other side into account. NOTE 2nd level space boundaries are used by many analysis packages that require a surface view of the building that can be transformed into the various simple topological models. Examples of such analysis packages include 1 energy analysis, 2 lighting analysis, 3 fluid dynamics HISTORY New entity in IFC4. .use head Relationship Use Definitions As shown in Figure 1, the attribute ParentBoundary with inverse InnerBoundaries is provided to link the space boundaries of doors, windows, and openings to the parent boundary, such as of a wall or slab. NOTE The space boundary of the parent is not cut by the inner boundary both overlap. The attribute CorrespondingBoundary with inverse Corresponds is provided to link the pair of space boundaries on the opposite sides of the building element. NOTE Only 2nd level space boundaries of type A have corresponding boundaries. IfcRelSpaceBoundary2ndLevel .. .. .. .. .. .. figures ifcrelspaceboundary2ndlevel fig1.png Figure 1 Space boundary second level relationships .use head Geometry Use Definitions See the definition at the supertype IfcRelSpaceBoundary for guidance on using the connection geometry for second level space boundaries. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelSpaceBoundary2ndLevel"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelSpaceBoundary2ndLevel"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The objectified relationship IfcRelAssignsToResource handles the assignment of objects as subtypes of IfcObject , acting as a resource usage or consumption, to a resource as subtypes of IfcResource . EXAMPLE The assignment of a resource usage to a construction resource is an application of this generic relationship. It could be an actor, as person or organization assigned to a labor resource, or a raw product assigned to a construction product or material resource . HISTORY New entity in IFC2x. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelAssignsToResource"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelAssignsToResource"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The objectified relationship S IfcRelAssignsToProduct handles the assignment of objects subtypes of IfcObject to a product subtypes of IfcProduct . The Name attribute should be used to classify the usage of the IfcRelAssignsToProduct objectified relationship. The following Name values are proposed Context Assignment of a context specific representation, such as of structural members to a different context representation with potentially different decomposition breakdown such as of building elements S for a specific S context specific representation. S View Assignment of a product via RelatingProduct that is decomposed according to a discipline view, to another product via RelatedObjects that is decomposed according to a different discipline view. An example is the assignment of the architectural slab to a different decomposition of the pre manufactured sections of a slab under a precast concrete discipline view . HISTORY New entity in IFC2x .change ifc2x3 IFC2x3 CHANGE S The reference of a product within a spatial structure is now handled by a new relationship object IfcRelReferencedInSpatialStructure . The IfcRelAssignsToProduct shall not be used to represent this relation from IFC2x3 onwards. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelAssignsToProduct"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelAssignsToProduct"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The objectified relationship IfcRelAssignsToProcess handles the assignment of one or many objects to a process or activity. An object can be a product that is the item the process operates on. Processes and activities can operate on things other than products, and can operate in ways other than input and output. EXAMPLE It may be common to define processes during estimating or scheduling that describe design tasks resulting in documents , procurement tasks resulting in construction materials , planning tasks resulting in processes , etc. Furthermore, the ways in which process can operate on something might include installs , finishes , transports , removes , etc. The ways are described as operation types. The inherited attribute RelatedObjects gives the references to the objects, or object type, which the process operates on. The RelatingProcess is the process or process type, that operates on the object. The operation types are captured in the inherited attribute Name . NOTE The agreement on valid and recognizable values for the Name attribute is part of view definitions and implementer agreements. HISTORY New entity in IFC1.5. Has been renamed from IfcRelProcessOperatesOn in IFC2x. .change ifc2x4 IFC4 CHANGE The data type RelatingProcess has been extended to cover also IfcTypeProcess bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelAssignsToProcess"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelAssignsToProcess"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The objectified relationship IfcRelAssignsToGroupByFactor is a specialization of the general grouping mechanism. It allows to add a factor to define the ratio that applies to the assignment of object definitions individual object occurrences as subtypes of IfcObject and object types as subtypes of IfcTypeObject to a group subtypes of IfcGroup . The ratio can be used to define a percentage assignment. For example, a Factor of 0.8 would indicate that the object is assigned by 80 to the group, or a Factor of 2.5 would indicate the object is assigned with a weight factor of 2.5 to the group. NOTE Examples of factored groups include the assignment of load cases in a load combination in structural analysis, or the assignment of spaces by percentage to different rental zones. The same object or object type may be included with the same or different Factor values to many groups. Grouping relationships are not hierarchical. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelAssignsToGroup"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelAssignsToGroup"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The objectified relationship IfcRelAssignsToControl handles the assignment of a control represented by subtypes of IfcControl to other objects represented by subtypes of IfcObject , with the exception of controls . EXAMPLE The assignment of a performance history as subtype of IfcControl for a building service element as subtype of IfcObject is an application of this generic relationship. HISTORY New entity in IFC2.0. .change ifc2x IFC2x CHANGE Entity has been renamed from IfcRelControls . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelAssignsToControl"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelAssignsToControl"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The objectified relationship IfcRelAssignsToActor handles the assignment of objects subtypes of IfcObject to an actor subtypes of IfcActor . The IfcRelAssignsToActor objectified relationship defines a relationship between an IfcActor and one or many objects. A particular role of the actor played in that relationship can be associated. If specified, it takes priority over the role that may be directly assigned to the person or organization. EXAMPLE An occupant as an actor may rent a flat as a collection of spaces or a zone . This would be an application of this generic relationship. Reference to the objects or single object on which the actor acts upon in a certain role if given is specified in the inherited RelatedObjects attribute. HISTORY New entity in IFC2.0. Has been renamed from IfcRelActsUpon in IFC2x. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelAssignsToActor"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelAssignsToActor"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The objectified relationship IfcRelAssignsToGroupByFactor is a specialization of the general grouping mechanism. It allows to add a factor to define the ratio that applies to the assignment of object definitions individual object occurrences as subtypes of IfcObject and object types as subtypes of IfcTypeObject to a group subtypes of IfcGroup . The ratio can be used to define a percentage assignment. For example, a Factor of 0.8 would indicate that the object is assigned by 80 to the group, or a Factor of 2.5 would indicate the object is assigned with a weight factor of 2.5 to the group. NOTE Examples of factored groups include the assignment of load cases in a load combination in structural analysis, or the assignment of spaces by percentage to different rental zones. The same object or object type may be included with the same or different Factor values to many groups. Grouping relationships are not hierarchical. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelAssignsToGroupByFactor"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelAssignsToGroupByFactor"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The objectified relationship IfcRelAssociatesClassification handles the assignment of a classification item items of the select IfcClassificationSelect to objects occurrences subtypes of IfcObject or object types subtypes of IfcTypeObject . The relationship is used to assign a classification item, or a classification system itself to objects. Depending on the type of the RelatingClassification it is either a reference to an classification item within an external classification system, or a reference to the classification system itself NOTE The reference to a classification item includes a link to the classification system within which the item is declared. It assigns the meaning of the classification item to the object ocurrence or type . The reference to the classification system provides the information that the object occurrence or type is governed by the classification system but no assignment of a particular items has been done yet. The inherited attribute RelatedObjects define the objects or object types to which the classification is applied. The attribute RelatingClassification is the reference to a classification, applied to the object s . A single RelatingClassification can thereby be applied to one or multiple objects. HISTORY New entity in IFC2x. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelAssociatesClassification"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelAssociatesClassification"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The objectified relationship IfcRelAssociatesLibrary handles the assignment of a library item items of the select IfcLibrarySelect to subtypes of IfcObjectDefinition or IfcPropertyDefinition . The relationship is used to assign a library reference or a more detailed link to a library information to objects, property sets or types. A single library reference can be applied to multiple items. The inherited attribute RelatedObjects define the items to which the library association is applied. The attribute RelatingLibrary is the reference to a library reference, applied to the item s . HISTORY New entity in IFC2x. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelAssociatesLibrary"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelAssociatesLibrary"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Associates Objects with a profile. In particular, may be used for indicating which SuperelevationEvent or WidthEvent has been used as basis for dimensioning a particular OpenCrossProfile.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelAssociatesProfileDef"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelAssociatesProfileDef"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The objectified relationship IfcRelAssociatesDocument handles the assignment of a document information items of the select IfcDocumentSelect to objects occurrences subtypes of IfcObject or object types subtypes of IfcTypeObject . The relationship is used to assign a document reference or a more detailed document information to objects. A single document reference can be applied to multiple objects. The inherited attribute RelatedObjects define the objects to which the document association is applied. The attribute RelatingDocument is the reference to a document reference, applied to the object s . HISTORY New entity in IFC2x. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelAssociatesDocument"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelAssociatesDocument"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcRelAssociatesMaterial is an objectified relationship between a material definition and elements or element types to which this material definition applies. The material definition can be assigned to an element occurrence as a specific usage of a layer set or profile set assigned to an element occurrence or element type as a layer set, profile set, constituent set or a single material Materials can be arranged by layers and applied to layered elements. Typical elements are walls and slabs. An IfcMaterialLayerSet , for layered elements with an indication of the layering direction and individual layer thicknesses An IfcMaterialLayerSetUsage , i.e. a material layer set with positioning information along the reference axis or surface of the element. NOTE As a material layer set usage is an occurrence based information, that applies to each individual element, it cannot be assigned to an element type. Material can be applied to profiles. Typical elements using profile material are beam, column, member An IfcMaterialProfileSet , i.e. a set of material assigned to a set of profiles, with a single material assigned to a single profile as the default. An IfcMaterialProfileSetUsage , i.e. a material profile set with positioning information relative to the element axis, also refered to as cardinal point. NOTE As a material profile set usage is an occurrence based information, that applies to each individual element, it cannot be assigned to an element type. Materials can be arranged by identified parts of a component based element. Typical elements are dorrs windows with components such as lining, framing and glazing , or distribution elements. An IfcMaterialConstituentSet , for component based elements with an indication of the component by keyword to which the material consituent applies. NOTE See the material use definitions at each applicable subtype of IfcElement or IfcElementType for a provision of these keywords. As a fallback, or in cases where only a single material information is needed, material information can be directly associated A single IfcMaterial for any element where the material use definition does not prohibits its direct association An IfcMaterialList , e.g. for composite elements, without an information, how the different materials are arranged. DEPRECATED The use of IfcMaterialList is deprecated in IFC4 onwards. Use IfcMaterialConstituentSet instead. The IfcRelAssociatesMaterial relationship is a special type of the IfcRelAssociates relationship. It can be applied to subtypes of IfcElement and subtypes of IfcElementType . The IfcElement has an inverse relation to its material definition by the HasAssociations attribute, inherited from IfcObject . The IfcElementType has an inverse relation to its material definition by the HasAssociations attribute, inherited from IfcPropertyDefinition . If both, the element occurrence by an instance of IfcElement and the element type by an instance of IfcElementType , connected through IfcRelDefinesByType have an associated material, then the material associated to the element occurrence overrides the material associated to the element type. HISTORY New entity in IFC2x. .spec head Informal Propositions 1. An IfcMaterialLayerSetUsage shall not be associated with a subtype of IfcElementType , it should only be associated with individual occurrences 2. An IfcMaterialProfileSetUsage shall not be associated with a subtype of IfcElementType , it should only be associated with individual occurrences bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelAssociatesMaterial"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelAssociatesMaterial"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The entity IfcRelAssociatesConstraint is used to apply constraint information defined by IfcConstraint , in the IfcConstraintResource schema, to subtypes of IfcRoot . HISTORY New entity in IFC2x2. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelAssociatesConstraint"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelAssociatesConstraint"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The entity IfcRelAssociatesApproval is used to apply approval information defined by IfcApproval , in IfcApprovalResource schema, to subtypes of IfcRoot . HISTORY New entity in IFC2x2. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelAssociatesApproval"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelAssociatesApproval"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The objectified relationship IfcRelDefinesByType defines the relationship between an object type and object occurrences. The IfcRelDefinesByType is a 1 to N relationship, as it allows for the assignment of one type information to a single or to many objects. Those objects then share the same object type, and the property sets and properties assigned to the object type. The IfcRelDefinesByType links the object type definition with the object occurrence. Both may define properties by assigning an IfcPropertySet , including one or many subtypes of IfcProperty to either the object type or object occurrence, as shown in Figure 1. There are several scenarios to define the same property set on the object type definition and object occurrence side 1. All properties for all object occurrences of a common object type have the same value then only the object type definition has a property set assigned. 2. All properties for all object occurrences are different, that is there are no common property values for the object type definition then each of the object occurrence has a property set assigned. 3. Some properties within the same property set have common values and are assigned to the object type definition and some are occurrence specific and assigned with potentially different values to the object occurrences then The sum of all properties within a given property set applicable to an object occurrence is the union of properties assigned to the object type definition plus the properties assigned to the object occurrence. If the object occurrence has a property with the same IfcProperty.Name in an IfcPropertySet , as the corresponding object type definition, then the occurrence property value overrides the type property value. Figure 1 Type definition relationships The following table provides an example of assigning properties assigned to IfcWall properties assigned to IfcWallType resulting property value for individual wall Pset WallCommon Pset WallCommon S S S ExtendToStructure TRUE S TRUE S S S ThermalTransmittance 0.375 0.375 S S ExtendToStructure FALSE S S ExtendToStructure TRUE FALSE HISTORY New entity in IFC2x. .change ifc2x4 IFC4 CHANGE The attribute RelatedObjects had been demoted from the supertype IfcRelDefines to IfcRelDefinesByType . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelDefinesByType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelDefinesByType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The objectified relationship IfcRelDefinesByObject defines the relationship between an object taking part in an object type decomposition and an object occurrences taking part in an occurrence decomposition of that type. The IfcRelDefinesByObject is a 1 to N relationship, as it allows for the assignment of one declaring object information to a single or to many reflected objects. Those objects then share the same object property sets and, for subtypes of IfcProduct , the eventually assigned representation maps. Only objects that take part in a type decomposition and in an occurrence decomposition of the same type can be connected by the IfcRelDefinesByObject relationship. The IfcRelDefinesByObject links the decomposed object type part, also called the declaring part with the occurrence of that part inside the occurrence of the decomposed type, also called the reflected part , as shown in Figure 1. instance diagram .. .. .. .. .. .. figures ifcreldefinesbyobject fig 1.png Figure 1 Part definition relationships The IfcRelDefinesByObject can be used together with the shape representations of the product type as shown in Figure 2. The IfcShapeRepresentation of the declaring part is referenced by the reflected part . The IfcObjectPlacement of the model occurrence the whole determines the position within the project context. geometry diagram .. .. .. .. .. .. figures ifcreldefinesbyobject fig 2.png Figure 2 Part definition relationships with shape representation HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelDefinesByObject"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelDefinesByObject"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The objectified relationship IfcRelDefinesByTemplate defines the relationships between property set template and property sets. Common information about property sets, e.g. the applicable name, description, contained properties, is defined by the property set template and assigned to all property sets. NOTE The assignment of an IfcPropertySetTemplate is supported for IfcPropertySet and IfcQuantitySet . The IfcRelDefinesByTemplate is a 1 to N relationship, as it allows for the assignment of one property set template to a single or to many property sets or quantity sets. Those property sets then share the same property set template definition. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelDefinesByTemplate"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelDefinesByTemplate"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The objectified relationship IfcRelDefinesByProperties defines the relationships between property set definitions and objects. Properties are aggregated in property sets. Property sets can be either directly assigned to occurrence objects using this relationship, or assigned to an object type and assigned via that type to occurrence objects. The assignment of an IfcPropertySet to an IfcTypeObject is not handled via this objectified relationship, but through the direct relationship HasPropertySets at IfcTypeObject . The IfcRelDefinesByProperties is an N to N relationship, as it allows for the assignment of one or more property sets to one or more objects. Those objects then share the same property definition. HISTORY New entity in IFC2.0. Has been renamed from IfcRelAssignsProperties in IFC2x. .change ifc2x4 IFC4 CHANGE The attribute RelatedObjects had been demoted from the supertype IfcRelDefines to IfcRelDefinesByProperties . This relationship has been modified to support multiple property sets referenced by a single relationship. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRelDefinesByProperties"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRelDefinesByProperties"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An IfcProjectLibrary collects all library elements that are included within a referenced project data set. Examples for project libraries include type libraries also called style or family libraries a collection of subtypes of IfcTypeObject property definition libraries a collections of IfcPropertySetTemplate or IfcPropertyTemplates The inherited attributes RepresentationContext and UnitsInContext have the following meaning Context of the representations used within the project library. When the project library includes shape representations for its library type objects, one or several geometric representation contexts need to be included that define the coordinate system, the coordinate space dimensions, and or the precision factor, Units locally assigned to measure types used within the context of this project library. NOTE It is generally discouraged to use a different length measure and plane angle measure in an included project library compared with the project itself. It may lead to unexpected results for the shape representation of items included in the project library. Instances of IfcProjectLibrary are assigned to the project context using the IfcRelDeclares relationship and accessible through the inverse attribute HasContext . Individual object types and property set templates are assigned to the IfcProjectLibrary using the IfcRelDeclares relationship and are accessible through the inverse attribute Declares . An IfcProjectLibrary may be decomposed into sub libraries using the relationship IfcRelNests . Sub libraries are accessed by the IfcProjectLibrary through the inverse attribute IsNestedBy . HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcContext"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcContext"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcTypeProduct defines a type definition of a product without being already inserted into a project structure without having a placement , and not being included in the geometric representation context of the project. S It is used to define a product specification, that is, the specific product information that is common to all occurrences of that product type. An IfcTypeProduct may have a list of property set attached and an optional set of product representations. Values of these properties and the representation maps are common to all occurrences S of that product type. S The type occurrence relationship is realized using the objectified relationship IfcRelDefinesByType . NOTE The product representations are defined as representation maps, which may be assigned by a product instance through the representation item s being an IfcShapeRepresentation and having Items of type S IfcMappedItem . The representations at the occurrence level represented by subtypes of IfcProduct can override the specific representations at the type level for geometric representations, a Cartesian transformation operator can be applied at the occurrence level. for property sets, a property within an occurrence property set, assigned at the product occurrence, overrides the same property assigned to the product type. An IfcTypeProduct may be exchanged without being already assigned to subtypes of IfcProduct . HISTORY New entity in IFC2x. .change ifc2x4 IFC4 CHANGE The entity IfcTypeProduct shall not be instantiated from IFC4 onwards. It will be changed into an ABSTRACT supertype in future releases of IFC. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcTypeObject"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcTypeObject"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcControl is the abstract generalization of all concepts that control or constrain the utilization of products, processes, or resources in general. It can be seen as a regulation, cost schedule, request or order, or other requirements applied to a product, process or resource whose requirements and provisions must be fulfilled. EXAMPLE Controls include action requests, cost schedules, project orders, work plans, and work calendars. HISTORY New entity in IFC1.0. .change ifc2x4 IFC4 CHANGE Attribute Identification added. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcObject"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcObject"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcProject indicates the undertaking of some design, engineering, construction, or maintenance activities leading towards a product. The project establishes the context for information to be exchanged or shared, and it may represent a construction project but does not have to. The IfcProject s main purpose in an exchange structure is to provide the root instance and the context for all other information items included. The context provided by the IfcProject includes the default units the geometric representation context for exchange structures including shape representations the project coordinate system the coordinate space dimension the precision used within the geometric representations optionally the indication of the true north optionally the map conversion between the project coordinate system and the geospatial coordinate reference system. HISTORY New entity in IFC1.0 .change ifc2x4 IFC4 CHANGE The attributes RepresentationContexts and UnitsInContext are made optional and are promoted to supertype IfcContext . .spec head Informal Propositions 1. There shall only be one project within the exchange context. This is enforced by the global rule IfcSingleProjectInstance . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcProject"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcProject"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An IfcProjectLibrary collects all library elements that are included within a referenced project data set. Examples for project libraries include type libraries also called style or family libraries a collection of subtypes of IfcTypeObject property definition libraries a collections of IfcPropertySetTemplate or IfcPropertyTemplates The inherited attributes RepresentationContext and UnitsInContext have the following meaning Context of the representations used within the project library. When the project library includes shape representations for its library type objects, one or several geometric representation contexts need to be included that define the coordinate system, the coordinate space dimensions, and or the precision factor, Units locally assigned to measure types used within the context of this project library. NOTE It is generally discouraged to use a different length measure and plane angle measure in an included project library compared with the project itself. It may lead to unexpected results for the shape representation of items included in the project library. Instances of IfcProjectLibrary are assigned to the project context using the IfcRelDeclares relationship and accessible through the inverse attribute HasContext . Individual object types and property set templates are assigned to the IfcProjectLibrary using the IfcRelDeclares relationship and are accessible through the inverse attribute Declares . An IfcProjectLibrary may be decomposed into sub libraries using the relationship IfcRelNests . Sub libraries are accessed by the IfcProjectLibrary through the inverse attribute IsNestedBy . HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcProjectLibrary"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcProjectLibrary"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An IfcEventType defines a particular type of event that may be specified. HISTORY New entity in IFC4 An IfcEventType provides for all forms of types of event that may be specified. Usage of IfcEventType defines the parameters for one or more occurrences of IfcEvent . Parameters may be specified through property sets that may be enumerated in the IfcEventTypeEnum data type or through explicit attributes of IfcEvent . Event occurrences IfcEvent entities are linked to the event type through the IfcRelDefinesByType relationship. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcTypeProcess"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcTypeProcess"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcConstructionResourceType is an abstract generalization of the different resource types used in construction projects, mainly labor, material, equipment and product resource types, plus subcontracted resource types and aggregations such as a crew resource type. A resource type represents a model of use of something and does not necessarily correspond to a specific type of object such as a person or vehicle, but represents possible usages of such objects such as general labor or an equipment fleet. A resource type can either represent usage in general consumption attributes defined but no task type assignment or a task specific resource type production attributes defined and having an IfcTask assignment . A construction resource type captures common productivities and cost rates for applying resources to particular task types. HISTORY New entity in IFC4. .use head Composition use definition Resource types may be decomposed into nested resource types indicating productivities when applying the resource to specific task types using the IfcRelNests relationship where IfcRelNests.RelatingObject refers to the general resource type and IfcRelNests.RelatedObjects refers to one or more task specific productivities. For example, an IfcLaborResourceType may be defined for Carpenter which may have a nested IfcLaborResourceType for Carpenter Wall Framing and another nested IfcLaborResourceType for Carpenter Drywall , each of which may have productivities based according to specific task types IfcTaskType . .use head Assignment use definition Resource types may be assigned to process types IfcTypeProcess subtypes using the IfcRelAssignsToProcess relationship as shown in Figure 1. Such relationship indicates that the resource type applies to the process type for the use indicated e.g. IfcTaskType.PredefinedType . Such relationship enables a scenario of placing an IfcProduct of a particular IfcTypeProduct , querying for a set of IfcTypeProcess process types for constructing such product e.g. IfcTaskTypeEnum.CONSTRUCTION , querying each IfcTypeProcess for a set of IfcTypeResource resource types for carrying out the process, and finally choosing an IfcTypeProcess and IfcTypeResource combination resulting in the shortest time for instantiated IfcTask occurrence s and or lowest cost for instantiated IfcConstructionResource occurrence s . Assignment Use Definition .. .. .. .. .. .. figures ifcconstructionresourcetype assignment.png Figure 1 Construction resource type assignment bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcTypeResource"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcTypeResource"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Definition The door style, IfcDoorStyle , defines a particular style of doors, which may be included into the spatial context of the building model through instances of IfcDoor . A door style defines the overall parameter of the door style and refers to the particular parameter of the lining and one or several panels through the IfcDoorLiningProperties and the IfcDoorPanelProperties . The door entity, IfcDoor , defines a particular occurrence of a door inserted in the spatial context of a project. The actual parameter of the door and or its shape is defined at the IfcDoorStyle , to which the IfcDoor is related by the inverse relationship IsDefinedBy pointing to IfcRelDefinedByType . The IfcDoorStyle also defines the particular attributes for the lining , IfcDoorLiningProperties , and panels, IfcDoorPanelProperties . The IfcDoorStyle defines the baseline geometry, or the representation map, for all occurrences of the door style, given by the IfcDoor , pointing to this style. The representation of the door style may be given by the agreed set of minimal parameters, defined for the door lining and the door panel s , or it may be given by a geometric representation used by the IfcRepresentationMap . The attribute ParameterTakesPrecedence decides, whether the set of parameters can be used to exactly represent the shape of the door style TRUE , or whether the attached IfcRepresentationMap holds the exact representation FALSE . The IfcDoorStyleOperationTypeEnum defines the general layout of the door style. Depending on the enumerator, the appropriate instances of IfcDoorLiningProperties and IfcDoorPanelProperties are attached in the list of HasPropertySets . The IfcDoorStyleOperationTypeEnum mainly determines the hinge side left hung, or right hung , the operation swinging, sliding, folding, etc. S and the number of panels. See geometry use definitions at IfcDoorStyleOperationTypeEnum for the correct usage of opening symbols for different operation types. HISTORY S New entity in IFC2x. .deprecated DEPRECATION The entity is deprecated and shall not be used. The new entity IfcDoorType shall be used instead. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcTypeProduct"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcTypeProduct"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An IfcTaskType defines a particular type of task that may be specified for use within a work control. HISTORY New entity in IFC4 An IfcTaskType provides for all forms of types of task that may be specified. It is a reference definition for a unit of work that may be broken down into a sequence of subtasks. Please note that a reference definition can not be part of a workflow definition, i.e. IfcTaskType instances define the most abstract level of a reference process without dependencies to other reference processes. Usage of IfcTaskType defines the parameters for one or more occurrences of IfcTask . Parameters may be specified through property sets that may be enumerated in the IfcTaskTypeEnum data type or through explict attributes of IfcTaskType . Task occurrences IfcTask entities are linked to the task type through the IfcRelDefinesByType relationship. Figure 1 shows the definition of a task type that is part of a task template library. Please note that in this example the task type is further subdivided into tasks that define task times for example, duration and or a task sequence. task type instantiation diagram .. .. .. .. .. .. figures ifctasktype instantiation diagram.png Figure 1 Task type relationships bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcTaskType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcTaskType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An IfcProcedureType defines a particular type of procedure that may be specified. HISTORY New entity in IFC4 An IfcProcedureType provides for all forms of types of procedure that may be specified. Usage of IfcProcedureType defines the parameters for one or more occurrences of IfcProcedure . Parameters may be specified through property sets that may be enumerated in the IfcProcedureTypeEnum data type or through explict attributes of IfcProcedure . Procedure occurrences IfcProcedure entities are linked to the procedure type through the IfcRelDefinesByType relationship. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcProcedureType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcProcedureType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An IfcEventType defines a particular type of event that may be specified. HISTORY New entity in IFC4 An IfcEventType provides for all forms of types of event that may be specified. Usage of IfcEventType defines the parameters for one or more occurrences of IfcEvent . Parameters may be specified through property sets that may be enumerated in the IfcEventTypeEnum data type or through explicit attributes of IfcEvent . Event occurrences IfcEvent entities are linked to the event type through the IfcRelDefinesByType relationship. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcEventType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcEventType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The resource type IfcConstructionProductType defines commonly shared information for occurrences of construction product resources. The set of shared information may include common productivities common cost rates common properties within shared property sets It is used to define a construction product resource specification i.e. the specific resource information that is common to all occurrences of that resource . Resource types may be exchanged without being already assigned to occurrences. Occurrences of the IfcConstructionProductResourceType are represented by instances of IfcConstructionProductResource . HISTORY New entity in IFC4. .use head Assignment use definition In addition to assignments specified at the base class IfcConstructionResourceType , a construction product resource type may have assignments of its own using IfcRelAssignsToResource where RelatingResource refers to the IfcConstructionProductResourceType and RelatedObjects contains one or more IfcTypeProduct subtypes. Such relationship indicates the type of product to be used as input, which is instantiated as an occurrence assigned for each resource occurrence. There may be multiple chains of production where such product type may have its own task and resource types assigned. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcConstructionResourceType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcConstructionResourceType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The resource type IfcSubContractResourceType defines commonly shared information for occurrences of subcontract resources. The set of shared information may include common productivities common cost rates common properties within shared property sets It is used to define a subcontract resource specification the specific resource information that is common to all occurrences of that resource . Resource types may be exchanged without being already assigned to occurrences. Occurrences of the IfcSubContractResourceType are represented by instances of IfcSubContractResource . HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSubContractResourceType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSubContractResourceType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The resource type IfcConstructionEquipmentType defines commonly shared information for occurrences of construction equipment resources. The set of shared information may include common productivities common cost rates common properties within shared property sets It is used to define a construction equipment resource specification the specific resource information that is common to all occurrences of that resource . Resource types may be exchanged without being already assigned to occurrences. Occurrences of the IfcConstructionEquipmentResourceType are represented by instances of IfcConstructionEquipmentResource . HISTORY New entity in IFC4. .use head Assignment use definition In addition to assignments specified at the base class IfcConstructionResourceType , a construction equipment resource type may have assignments of its own using IfcRelAssignsToResource where RelatingResource refers to the IfcConstructionEquipmentResourceType and RelatedObjects contains one or more IfcTypeProduct subtypes. Such relationship indicates the type of equipment to be used as input, which is instantiated as an occurrence assigned for each resource occurrence. There may be multiple chains of production where such product type may have its own task and resource types assigned indicating how to assemble such equipment. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcConstructionEquipmentResourceType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcConstructionEquipmentResourceType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The resource type IfcLaborResourceType defines commonly shared information for occurrences of labour resources. The set of shared information may include common productivities common cost rates common properties within shared property sets It is used to define a labour resource specification the specific resource information that is common to all occurrences of that resource . Resource types may be exchanged without being already assigned to occurrences. Occurrences of the IfcLaborResourceType are represented by instances of IfcLaborResource . HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcLaborResourceType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcLaborResourceType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The resource type IfcConstructionMaterialType defines commonly shared information for occurrences of construction material resources. The set of shared information may include common productivities common cost rates common properties within shared property sets It is used to define a construction material resource specification the specific resource information that is common to all occurrences of that resource . Resource types may be exchanged without being already assigned to occurrences. Occurrences of the IfcConstructionMaterialResourceType are represented by instances of IfcConstructionMaterialResource . HISTORY New entity in IFC4. .use head Assignment Use Definition In addition to assignments specified at the base class IfcConstructionResourceType , a construction material resource type may have assignments of its own using IfcRelAssignsToResource where RelatingResource refers to the IfcConstructionMaterialResourceType and RelatedObjects contains one or more IfcTypeProduct subtypes. Such relationship indicates material specifications to be used as input, which is instantiated as an occurrence assigned for each resource occurrence. The IfcGeographicElementType product type may be used to hold the material representation via IfcRelAssociatesMaterial . There may be multiple chains of production where such product type may have its own task and resource types assigned indicating how to transport or extract such material. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcConstructionMaterialResourceType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcConstructionMaterialResourceType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The resource type IfcCrewResourceType defines commonly shared information for occurrences of crew resources. The set of shared information may include common productivities common cost rates common properties within shared property sets It is used to define a crew resource specification the specific resource information that is common to all occurrences of that resource . Resource types may be exchanged without being already assigned to occurrences. Occurrences of the IfcCrewResourceType are represented by instances of IfcCrewResource . HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCrewResourceType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCrewResourceType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The resource type IfcConstructionProductType defines commonly shared information for occurrences of construction product resources. The set of shared information may include common productivities common cost rates common properties within shared property sets It is used to define a construction product resource specification i.e. the specific resource information that is common to all occurrences of that resource . Resource types may be exchanged without being already assigned to occurrences. Occurrences of the IfcConstructionProductResourceType are represented by instances of IfcConstructionProductResource . HISTORY New entity in IFC4. .use head Assignment use definition In addition to assignments specified at the base class IfcConstructionResourceType , a construction product resource type may have assignments of its own using IfcRelAssignsToResource where RelatingResource refers to the IfcConstructionProductResourceType and RelatedObjects contains one or more IfcTypeProduct subtypes. Such relationship indicates the type of product to be used as input, which is instantiated as an occurrence assigned for each resource occurrence. There may be multiple chains of production where such product type may have its own task and resource types assigned. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcConstructionProductResourceType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcConstructionProductResourceType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcElementAssemblyType defines a list of commonly shared property set definitions of an element and an optional set of product representations. It is used to define an element specification i.e. the specific product information, that is common to all occurrences of that product type . NOTE The product representations are defined as representation maps at the level of the supertype IfcTypeProduct , which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item 1 being an IfcMappedItem. An element assembly type is used to define the common properties of a certain type of an element assembly that may be applied to many instances of that type to assign a specific style. An element assembly types or the instantiable subtypes may be exchanged without being already assigned to occurrences. The occurrences of the IfcElementAssemblyType are represented by instances of IfcElementAssembly. HISTORY S New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcElementType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcElementType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The window style defines a particular style of windows, which may be included into the spatial context of the building model through instances of IfcWindow . A window style defines the overall parameter of the window style and refers to the particular parameter of the lining and one or several panels through IfcWindowLiningProperties and IfcWindowPanelProperties . The window entity IfcWindow defines a particular occurrence of a window inserted in the spatial context of a project. The actual parameter of the window and or its shape is defined at the IfcWindowStyle , to which the IfcWindow related by the inverse relationship IsDefinedBy pointing to IfcRelDefinesByType . The IfcWindowStyle also defines the particular attributes for the lining IfcWindowLiningProperties and panels IfcWindowPanelProperties . The IfcWindowStyle defines the baseline geometry, or the representation map, for all occurrences of the window style, given by the IfcWindow, pointing to this style. The representation of the window style may be given by the agreed set of minimal parameters, defined for the window lining and the window panel s , or it may be given by a geometric representation used by the IfcRepresentationMap . The attribute ParameterTakesPrecedence decides, whether the set of parameters can be used to exactly represent the shape of the window style TRUE , or whether the attached IfcRepresentationMap holds the exact representation FALSE . The IfcWindowStyleOperationTypeEnum defines the general layout of the window style. Depending on the enumerator, the appropriate instances of IfcWindowLiningProperties and IfcWindowPanelProperties are attached in the list of HasPropertySets . See geometry use definitions there. HISTORY New entity in IFC2x. .deprecated IFC4 CHANGE The entity has been deprecated and shall not be used. The new entity IfcWindowType shall be used instead. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcWindowStyle"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcWindowStyle"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcSpatialZoneType defines a list of commonly shared property set definitions of a space and an optional set of product representations. It is used to define a space specification i.e. the specific space information, that is common to all occurrences of that space type . NOTE The product representations are defined as representation maps at the level of the supertype IfcTypeProduct, which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item 1 being an IfcMappedItem. A spatial zone type is used to define the common properties of a certain type of space that may be applied to many instances of that type to assign a specific style. Space types may be exchanged without being already assigned to occurrences. NOTE The spatial zone types are often used to represent space catalogues, less so for sharing a common representation map. Spatial zone types in a space catalogue share same space classification and a common set of space requirement properties. The occurrences of IfcSpatialZoneType are represented by instances of IfcSpatialZone. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSpatialElementType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSpatialElementType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Definition The door style, IfcDoorStyle , defines a particular style of doors, which may be included into the spatial context of the building model through instances of IfcDoor . A door style defines the overall parameter of the door style and refers to the particular parameter of the lining and one or several panels through the IfcDoorLiningProperties and the IfcDoorPanelProperties . The door entity, IfcDoor , defines a particular occurrence of a door inserted in the spatial context of a project. The actual parameter of the door and or its shape is defined at the IfcDoorStyle , to which the IfcDoor is related by the inverse relationship IsDefinedBy pointing to IfcRelDefinedByType . The IfcDoorStyle also defines the particular attributes for the lining , IfcDoorLiningProperties , and panels, IfcDoorPanelProperties . The IfcDoorStyle defines the baseline geometry, or the representation map, for all occurrences of the door style, given by the IfcDoor , pointing to this style. The representation of the door style may be given by the agreed set of minimal parameters, defined for the door lining and the door panel s , or it may be given by a geometric representation used by the IfcRepresentationMap . The attribute ParameterTakesPrecedence decides, whether the set of parameters can be used to exactly represent the shape of the door style TRUE , or whether the attached IfcRepresentationMap holds the exact representation FALSE . The IfcDoorStyleOperationTypeEnum defines the general layout of the door style. Depending on the enumerator, the appropriate instances of IfcDoorLiningProperties and IfcDoorPanelProperties are attached in the list of HasPropertySets . The IfcDoorStyleOperationTypeEnum mainly determines the hinge side left hung, or right hung , the operation swinging, sliding, folding, etc. S and the number of panels. See geometry use definitions at IfcDoorStyleOperationTypeEnum for the correct usage of opening symbols for different operation types. HISTORY S New entity in IFC2x. .deprecated DEPRECATION The entity is deprecated and shall not be used. The new entity IfcDoorType shall be used instead. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDoorStyle"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDoorStyle"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The element type IfcDistributionControlElementType defines a list of commonly shared property set definitions of an element and an optional set of product representations. It is used to define an element specification the specific product information that is common to all occurrences of that product type . Distribution control element types or the instantiable subtypes may be exchanged without being already assigned to occurrences. The occurrences of the IfcDistributionControlElementType are represented by instances of IfcDistributionControlElement or its subtypes. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE Ports may now be defined using IfcRelNests to enable definition of ports at type definitions both forward and backward compatible , provide a logical order, and reduce the number of relationship objects needed. The relationship IfcRelConnectsPortToElement is still supported on occurrence objects, however is now specific to dynamically connected ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDistributionElementType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDistributionElementType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The furnishing element type IfcFurnitureType defines commonly shared information for occurrences of furnitures. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements It is used to define a furniture type specification indicating the specific product information that is common to all occurrences of that product type. The IfcFurnitureType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcFurnitureType are represented by instances of IfcFurniture . Refer to the documentation at IfcFurniture for supported property sets, materials, and composition. HISTORY New entity in IFC2x2 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFurnishingElementType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFurnishingElementType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The element type IfcTransportElementType defines commonly shared information for occurrences of transport elements. The set of shared information may include common properties within shared property sets common material information common shape representations It is used to define a transport element specification i.e. the specific product information that is common to all occurrences of that beam type . Transport element types or the instantiable subtypes may be exchanged without being already assigned to occurrences. The occurrences of the IfcTransportElementType are represented by instances of IfcTransportElement or its subtypes . HISTORY New entity in IFC2x2. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcTransportElementType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcTransportElementType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An IfcCivilElementType is used to define an element specification of an element used within civil engineering works. Civil element types include for different types of element that may be used to represent information for construction works external to a building. IfcCivilElementType s may include linear elements such as sections of a roadway including carriageway pavement, verge, median, marker line, kerb etc. elements for connections and junctions including traffic roundabouts, T junctions, 4 way junctions elements for supporting structures such as piers, piles, pylons, and similar. The specification of the specific types is provided by the inherited attribute IfcElementType.ElementType given as an IfcLabel. NOTE This is due to the range of choices of element type that are available and their expression in different languages. It is not considered possible to create a reasonably full list of types within an enumeration. It is suggested that selection of the relevant type be drawn from an available feature catalogue . NOTE The IfcCivilElementType has been introduced as a stub for future extensions of this specification to include an object model for civil engineering works. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCivilElementType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCivilElementType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The element component type IfcMechanicalFastenerType defines commonly shared information for occurrences of mechanical fasteners. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements It is used to define a mechanical fastener type specification indicating the specific product information that is common to all occurrences of that product type. The IfcMechanicalFastenerType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcMechanicalFastenerType are represented by instances of IfcMechanicalFastener. HISTORY New entity in IFC2x2 IFC4 CHANGE Supertype changed from IfcFastenerType to IfcElementComponentType. Attributes PredefinedType , NominalDiameter, NominalLength added. Classification Use Definition Mechanical fasteners, especially bolts, are often standardized. To refer to a formal fastener designation according to a standard a product norm , IfcRelAssociatesClassification together with IfcClassificationReference should be used. IfcClassificationReference.Identification contains a machine readable form of the formal fastener designation from the norm. Example M16X80 10.9 HV for a high strength structural bolting assembly for preloading with hexagon bolt and nut. On the other hand, IfcMechanicalFastenerType.Name contains a displayable name which may not necessarily be the same as the formal designation. IfcClassificationReference.Name carries the short name of the fastener norm. Example EN 14399 4 as the respective European standard for high strength hexagon bolts. Optionally, the norm can be further described by IfcClassificationReference.ReferencedSource , including information like publisher and date of issue of the norm. Furthermore, IfcRelAssociatesLibrary together with IfcLibraryReference may be used to refer to a library which contains fastener definitions. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcElementComponentType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcElementComponentType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The element type IfcRailType defines commonly shared information for occurrences of rails. The set of shared information may include common properties within shared property sets common material information common profile definitions common shape representations It is used to define a rail specification, or rail style the specific product information that is common to all occurrences of that rail type . Rail types may be exchanged without being already assigned to occurrences. Occurrences of the IfcRailType are represented by instances of IfcRail .",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcBuiltElementType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcBuiltElementType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An IfcGeographicElementType is used to define an element specification of a geographic element i.e. the specific product information, that is common to all occurrences of that product type . Geographic element types include for different types of element that may be used to represent information within a geographical landscape external to a building. Within the world of geographic information they are referred to generally as features . IfcGeographicElementType s include point features such as seating, bus shelters, signage, trees linear features such as layby s area features such as ponds, lakes, woods and forests drainage such as catchment, reserver or outfall. The specification of the specific types are given by the inherited attribute IfcElementType.ElementType given as an IfcLabel . Geographic element types are frequently identified in feature catalogs that are produced for particular purposes. The IfcGeographicElementType entity enables the continued use of existing feature catalogs through capture of their identity and attributes. Information from feature catalogs might be captured in various ways via property sets, some of which will be specifically defined within the IFC property set catalog whilst others will be created for local use this is the form of capture that is expected to be most widely used through use of the IFC classification model whereby features might be identified through an IfcClassificationReference with additional description in which case, any further attributes required would still need to be captured in property sets. NOTE This is due to the range of choices of element type thyat are available and their expression in different languages. It is not considered possible to create a reasonably full list of types within an enumeration. It is suggested that selection of the relevant type be drawn from an available feature catalog . HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcGeographicElementType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcGeographicElementType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcElementAssemblyType defines a list of commonly shared property set definitions of an element and an optional set of product representations. It is used to define an element specification i.e. the specific product information, that is common to all occurrences of that product type . NOTE The product representations are defined as representation maps at the level of the supertype IfcTypeProduct , which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item 1 being an IfcMappedItem. An element assembly type is used to define the common properties of a certain type of an element assembly that may be applied to many instances of that type to assign a specific style. An element assembly types or the instantiable subtypes may be exchanged without being already assigned to occurrences. The occurrences of the IfcElementAssemblyType are represented by instances of IfcElementAssembly. HISTORY S New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcElementAssemblyType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcElementAssemblyType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The element type IfcFlowMovingDeviceType defines a list of commonly shared property set definitions of a flow moving device and an optional set of product representations. It is used to define a flow moving device specification i.e. the specific product information, that is common to all occurrences of that product type . A flow moving type is used to define the common properties of a flow moving device that may be applied to many occurrences of that type. A flow moving device is a device that is used to produce a pressure differential in a distribution system, such as a pump, fan, or compressor. Flow moving types or the instantiable subtypes may be exchanged without being already assigned to occurrences. The occurrences of the IfcFlowMovingDeviceType are represented by instances of IfcFlowMovingDevice or its subtypes. HISTORY New entity in IFC2x2. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDistributionFlowElementType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDistributionFlowElementType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The distribution control element type IfcUnitaryControlElementType defines commonly shared information for occurrences of unitary control elements. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a unitary control element type specification indicating the specific product information that is common to all occurrences of that product type. The IfcUnitaryControlElementType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcUnitaryControlElementType are represented by instances of IfcUnitaryControlElement . Refer to the documentation at IfcUnitaryControlElement for supported property sets, materials, composition, and ports. HISTORY New entity in IFC4 bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDistributionControlElementType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDistributionControlElementType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow fitting type IfcDuctFittingType defines commonly shared information for occurrences of duct fittings. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a duct fitting type specification indicating the specific product information that is common to all occurrences of that product type. The IfcDuctFittingType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcDuctFittingType are represented by instances of IfcDuctFitting . Refer to the documentation at IfcDuctFitting for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFlowFittingType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFlowFittingType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow segment type IfcCableSegmentType defines commonly shared information for occurrences of cable segments. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a cable segment type specification indicating the specific product information that is common to all occurrences of that product type. The IfcCableSegmentType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcCableSegmentType are represented by instances of IfcCableSegment . Refer to the documentation at IfcCableSegment for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFlowSegmentType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFlowSegmentType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The energy conversion device type IfcHeatExchangerType defines commonly shared information for occurrences of heat exchangers. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a heat exchanger type specification indicating the specific product information that is common to all occurrences of that product type. The IfcHeatExchangerType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcHeatExchangerType are represented by instances of IfcHeatExchanger . Refer to the documentation at IfcHeatExchanger for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcEnergyConversionDeviceType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcEnergyConversionDeviceType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The distribution flow element type IfcDistributionChamberElementType defines commonly shared information for occurrences of distribution chamber elements. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a distribution chamber element type specification indicating the specific product information that is common to all occurrences of that product type. The IfcDistributionChamberElementType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcDistributionChamberElementType are represented by instances of IfcDistributionChamberElement . Refer to the documentation at IfcDistributionChamberElement for supported property sets, materials, composition, and ports. HISTORY New entity in IFC2x2. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDistributionChamberElementType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDistributionChamberElementType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow controller type IfcElectricDistributionBoardType defines commonly shared information for occurrences of electric distribution boards. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a electric distribution board type specification indicating the specific product information that is common to all occurrences of that product type. The IfcElectricDistributionBoardType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcElectricDistributionBoardType are represented by instances of IfcElectricDistributionBoard . Refer to the documentation at IfcElectricDistributionBoard for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFlowControllerType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFlowControllerType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow storage device type IfcTankType defines commonly shared information for occurrences of tanks. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a tank type specification indicating the specific product information that is common to all occurrences of that product type. The IfcTankType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcTankType are represented by instances of IfcTank . Refer to the documentation at IfcTank for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFlowStorageDeviceType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFlowStorageDeviceType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow treatment device type IfcFilterType defines commonly shared information for occurrences of filters. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a filter type specification indicating the specific product information that is common to all occurrences of that product type. The IfcFilterType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcFilterType are represented by instances of IfcFilter . Refer to the documentation at IfcFilter for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFlowTreatmentDeviceType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFlowTreatmentDeviceType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The LiquidTerminalType provides the type information for LiquidTerminal occurrences. A liquid terminal is a terminating or origination point for the transfer of liquid between distribution system s . this is the point where the liquid distribution system interacts with the external environment. An example of this is a loading arm for the transfer of liquid from a docked vessel.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFlowTerminalType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFlowTerminalType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow moving device type IfcFanType defines commonly shared information for occurrences of fans. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a fan type specification indicating the specific product information that is common to all occurrences of that product type. The IfcFanType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcFanType are represented by instances of IfcFan . Refer to the documentation at IfcFan for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFlowMovingDeviceType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFlowMovingDeviceType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow fitting type IfcJunctionBoxType defines commonly shared information for occurrences of junction boxs. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a junction box type specification indicating the specific product information that is common to all occurrences of that product type. The IfcJunctionBoxType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcJunctionBoxType are represented by instances of IfcJunctionBox . Refer to the documentation at IfcJunctionBox for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcJunctionBoxType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcJunctionBoxType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow fitting type IfcCableCarrierFittingType defines commonly shared information for occurrences of cable carrier fittings. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a cable carrier fitting type specification indicating the specific product information that is common to all occurrences of that product type. The IfcCableCarrierFittingType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcCableCarrierFittingType are represented by instances of IfcCableCarrierFitting . Refer to the documentation at IfcCableCarrierFitting for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCableCarrierFittingType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCableCarrierFittingType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow fitting type IfcCableFittingType defines commonly shared information for occurrences of cable fittings. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a cable fitting type specification indicating the specific product information that is common to all occurrences of that product type. The IfcCableFittingType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcCableFittingType are represented by instances of IfcCableFitting . Refer to the documentation at IfcCableFitting for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCableFittingType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCableFittingType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow fitting type IfcPipeFittingType defines commonly shared information for occurrences of pipe fittings. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a pipe fitting type specification indicating the specific product information that is common to all occurrences of that product type. The IfcPipeFittingType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcPipeFittingType are represented by instances of IfcPipeFitting . Refer to the documentation at IfcPipeFitting for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcPipeFittingType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcPipeFittingType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow fitting type IfcDuctFittingType defines commonly shared information for occurrences of duct fittings. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a duct fitting type specification indicating the specific product information that is common to all occurrences of that product type. The IfcDuctFittingType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcDuctFittingType are represented by instances of IfcDuctFitting . Refer to the documentation at IfcDuctFitting for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDuctFittingType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDuctFittingType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow segment type IfcCableCarrierSegmentType defines commonly shared information for occurrences of cable carrier segments. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a cable carrier segment type specification indicating the specific product information that is common to all occurrences of that product type. The IfcCableCarrierSegmentType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcCableCarrierSegmentType are represented by instances of IfcCableCarrierSegment . Refer to the documentation at IfcCableCarrierSegment for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCableCarrierSegmentType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCableCarrierSegmentType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow segment type IfcPipeSegmentType defines commonly shared information for occurrences of pipe segments. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a pipe segment type specification indicating the specific product information that is common to all occurrences of that product type. The IfcPipeSegmentType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcPipeSegmentType are represented by instances of IfcPipeSegment . Refer to the documentation at IfcPipeSegment for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcPipeSegmentType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcPipeSegmentType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow segment type IfcDuctSegmentType defines commonly shared information for occurrences of duct segments. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a duct segment type specification indicating the specific product information that is common to all occurrences of that product type. The IfcDuctSegmentType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcDuctSegmentType are represented by instances of IfcDuctSegment . Refer to the documentation at IfcDuctSegment for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDuctSegmentType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDuctSegmentType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The ConveyorSegmentType provides the type information for ConveyorSegment occurrences. A conveyor segment defines an occurrence of a flow segment continuous run within a conveyor system that joins two sections of the system. these can utilise different carrying methods such as belt, rope, chain, screw etc.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcConveyorSegmentType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcConveyorSegmentType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow segment type IfcCableSegmentType defines commonly shared information for occurrences of cable segments. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a cable segment type specification indicating the specific product information that is common to all occurrences of that product type. The IfcCableSegmentType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcCableSegmentType are represented by instances of IfcCableSegment . Refer to the documentation at IfcCableSegment for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCableSegmentType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCableSegmentType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The energy conversion device type IfcCooledBeamType defines commonly shared information for occurrences of cooled beams. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a cooled beam type specification indicating the specific product information that is common to all occurrences of that product type. The IfcCooledBeamType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcCooledBeamType are represented by instances of IfcCooledBeam . Refer to the documentation at IfcCooledBeam for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCooledBeamType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCooledBeamType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The energy conversion device type IfcChillerType defines commonly shared information for occurrences of chillers. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a chiller type specification indicating the specific product information that is common to all occurrences of that product type. The IfcChillerType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcChillerType are represented by instances of IfcChiller . Refer to the documentation at IfcChiller for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcChillerType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcChillerType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The energy conversion device type IfcUnitaryEquipmentType defines commonly shared information for occurrences of unitary equipments. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a unitary equipment type specification indicating the specific product information that is common to all occurrences of that product type. The IfcUnitaryEquipmentType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcUnitaryEquipmentType are represented by instances of IfcUnitaryEquipment . Refer to the documentation at IfcUnitaryEquipment for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcUnitaryEquipmentType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcUnitaryEquipmentType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The energy conversion device type IfcElectricMotorType defines commonly shared information for occurrences of electric motors. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a electric motor type specification indicating the specific product information that is common to all occurrences of that product type. The IfcElectricMotorType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcElectricMotorType are represented by instances of IfcElectricMotor . Refer to the documentation at IfcElectricMotor for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcElectricMotorType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcElectricMotorType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The energy conversion device type IfcEvaporatorType defines commonly shared information for occurrences of evaporators. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a evaporator type specification indicating the specific product information that is common to all occurrences of that product type. The IfcEvaporatorType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcEvaporatorType are represented by instances of IfcEvaporator . Refer to the documentation at IfcEvaporator for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcEvaporatorType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcEvaporatorType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The energy conversion device type IfcSolarDeviceType defines commonly shared information for occurrences of solar devices. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a solar device type specification indicating the specific product information that is common to all occurrences of that product type. The IfcSolarDeviceType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcSolarDeviceType are represented by instances of IfcSolarDevice . Refer to the documentation at IfcSolarDevice for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSolarDeviceType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSolarDeviceType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The energy conversion device type IfcEngineType defines commonly shared information for occurrences of engines. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a engine type specification indicating the specific product information that is common to all occurrences of that product type. The IfcEngineType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcEngineType are represented by instances of IfcEngine . Refer to the documentation at IfcEngine for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcEngineType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcEngineType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The energy conversion device type IfcCoolingTowerType defines commonly shared information for occurrences of cooling towers. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a cooling tower type specification indicating the specific product information that is common to all occurrences of that product type. The IfcCoolingTowerType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcCoolingTowerType are represented by instances of IfcCoolingTower . Refer to the documentation at IfcCoolingTower for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCoolingTowerType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCoolingTowerType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The energy conversion device type IfcEvaporativeCoolerType defines commonly shared information for occurrences of evaporative coolers. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a evaporative cooler type specification indicating the specific product information that is common to all occurrences of that product type. The IfcEvaporativeCoolerType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcEvaporativeCoolerType are represented by instances of IfcEvaporativeCooler . Refer to the documentation at IfcEvaporativeCooler for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcEvaporativeCoolerType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcEvaporativeCoolerType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The energy conversion device type IfcElectricGeneratorType defines commonly shared information for occurrences of electric generators. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a electric generator type specification indicating the specific product information that is common to all occurrences of that product type. The IfcElectricGeneratorType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcElectricGeneratorType are represented by instances of IfcElectricGenerator . Refer to the documentation at IfcElectricGenerator for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcElectricGeneratorType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcElectricGeneratorType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The energy conversion device type IfcBoilerType defines commonly shared information for occurrences of boilers. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a boiler type specification indicating the specific product information that is common to all occurrences of that product type. The IfcBoilerType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcBoilerType are represented by instances of IfcBoiler . Refer to the documentation at IfcBoiler for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcBoilerType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcBoilerType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The energy conversion device type IfcHumidifierType defines commonly shared information for occurrences of humidifiers. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a humidifier type specification indicating the specific product information that is common to all occurrences of that product type. The IfcHumidifierType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcHumidifierType are represented by instances of IfcHumidifier . Refer to the documentation at IfcHumidifier for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcHumidifierType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcHumidifierType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The energy conversion device type IfcTransformerType defines commonly shared information for occurrences of transformers. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a transformer type specification indicating the specific product information that is common to all occurrences of that product type. The IfcTransformerType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcTransformerType are represented by instances of IfcTransformer . Refer to the documentation at IfcTransformer for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcTransformerType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcTransformerType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The energy conversion device type IfcBurnerType defines commonly shared information for occurrences of burners. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a burner type specification indicating the specific product information that is common to all occurrences of that product type. The IfcBurnerType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcBurnerType are represented by instances of IfcBurner . Refer to the documentation at IfcBurner for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcBurnerType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcBurnerType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The energy conversion device type IfcCoilType defines commonly shared information for occurrences of coils. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a coil type specification indicating the specific product information that is common to all occurrences of that product type. The IfcCoilType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcCoilType are represented by instances of IfcCoil . Refer to the documentation at IfcCoil for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCoilType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCoilType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The energy conversion device type IfcMotorConnectionType defines commonly shared information for occurrences of motor connections. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a motor connection type specification indicating the specific product information that is common to all occurrences of that product type. The IfcMotorConnectionType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcMotorConnectionType are represented by instances of IfcMotorConnection . Refer to the documentation at IfcMotorConnection for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcMotorConnectionType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcMotorConnectionType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The energy conversion device type IfcAirToAirHeatRecoveryType defines commonly shared information for occurrences of air to air heat recoverys. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define an air to air heat recovery type specification indicating the specific product information that is common to all occurrences of that product type. The IfcAirToAirHeatRecoveryType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcAirToAirHeatRecoveryType are represented by instances of IfcAirToAirHeatRecovery . Refer to the documentation at IfcAirToAirHeatRecovery for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcAirToAirHeatRecoveryType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcAirToAirHeatRecoveryType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The energy conversion device type IfcCondenserType defines commonly shared information for occurrences of condensers. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a condenser type specification indicating the specific product information that is common to all occurrences of that product type. The IfcCondenserType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcCondenserType are represented by instances of IfcCondenser . Refer to the documentation at IfcCondenser for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCondenserType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCondenserType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The energy conversion device type IfcTubeBundleType defines commonly shared information for occurrences of tube bundles. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a tube bundle type specification indicating the specific product information that is common to all occurrences of that product type. The IfcTubeBundleType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcTubeBundleType are represented by instances of IfcTubeBundle . Refer to the documentation at IfcTubeBundle for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcTubeBundleType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcTubeBundleType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The energy conversion device type IfcHeatExchangerType defines commonly shared information for occurrences of heat exchangers. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a heat exchanger type specification indicating the specific product information that is common to all occurrences of that product type. The IfcHeatExchangerType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcHeatExchangerType are represented by instances of IfcHeatExchanger . Refer to the documentation at IfcHeatExchanger for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcHeatExchangerType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcHeatExchangerType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow controller type IfcAirTerminalBoxType defines commonly shared information for occurrences of air terminal boxes. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define an air terminal box type specification indicating the specific product information that is common to all occurrences of that product type. The IfcAirTerminalBoxType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcAirTerminalBoxType are represented by instances of IfcAirTerminalBox . Refer to the documentation at IfcAirTerminalBox for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcAirTerminalBoxType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcAirTerminalBoxType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow controller type IfcDistributionBoardType defines commonly shared information for occurrences of distribution boards. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a distribution board type specification indicating the specific product information that is common to all occurrences of that product type. The IfcDistributionBoardType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcDistributionBoardType are represented by instances of IfcDistributionBoard . Refer to the documentation at IfcDistributionBoard for supported property sets, materials, composition, and ports.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDistributionBoardType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDistributionBoardType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow controller type IfcElectricTimeControlType defines commonly shared information for occurrences of electric time controls. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a electric time control type specification indicating the specific product information that is common to all occurrences of that product type. The IfcElectricTimeControlType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcElectricTimeControlType are represented by instances of IfcElectricTimeControl . Refer to the documentation at IfcElectricTimeControl for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcElectricTimeControlType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcElectricTimeControlType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow controller type IfcValveType defines commonly shared information for occurrences of valves. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a valve type specification indicating the specific product information that is common to all occurrences of that product type. The IfcValveType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcValveType are represented by instances of IfcValve . Refer to the documentation at IfcValve for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcValveType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcValveType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow controller type IfcFlowMeterType defines commonly shared information for occurrences of flow meters. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a flow meter type specification indicating the specific product information that is common to all occurrences of that product type. The IfcFlowMeterType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcFlowMeterType are represented by instances of IfcFlowMeter . Refer to the documentation at IfcFlowMeter for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFlowMeterType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFlowMeterType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow controller type IfcProtectiveDeviceType defines commonly shared information for occurrences of protective devices. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a protective device type specification indicating the specific product information that is common to all occurrences of that product type. The IfcProtectiveDeviceType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcProtectiveDeviceType are represented by instances of IfcProtectiveDevice . Refer to the documentation at IfcProtectiveDevice for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcProtectiveDeviceType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcProtectiveDeviceType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow controller type IfcSwitchingDeviceType defines commonly shared information for occurrences of switching devices. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a switching device type specification indicating the specific product information that is common to all occurrences of that product type. The IfcSwitchingDeviceType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcSwitchingDeviceType are represented by instances of IfcSwitchingDevice . Refer to the documentation at IfcSwitchingDevice for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSwitchingDeviceType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSwitchingDeviceType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow controller type IfcDamperType defines commonly shared information for occurrences of dampers. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a damper type specification indicating the specific product information that is common to all occurrences of that product type. The IfcDamperType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcDamperType are represented by instances of IfcDamper . Refer to the documentation at IfcDamper for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDamperType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDamperType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow controller type IfcElectricDistributionBoardType defines commonly shared information for occurrences of electric distribution boards. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a electric distribution board type specification indicating the specific product information that is common to all occurrences of that product type. The IfcElectricDistributionBoardType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcElectricDistributionBoardType are represented by instances of IfcElectricDistributionBoard . Refer to the documentation at IfcElectricDistributionBoard for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcElectricDistributionBoardType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcElectricDistributionBoardType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow storage device type IfcElectricFlowStorageDeviceType defines commonly shared information for occurrences of electric flow storage devices. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a electric flow storage device type specification indicating the specific product information that is common to all occurrences of that product type. The IfcElectricFlowStorageDeviceType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcElectricFlowStorageDeviceType are represented by instances of IfcElectricFlowStorageDevice . Refer to the documentation at IfcElectricFlowStorageDevice for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcElectricFlowStorageDeviceType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcElectricFlowStorageDeviceType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow storage device type IfcTankType defines commonly shared information for occurrences of tanks. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a tank type specification indicating the specific product information that is common to all occurrences of that product type. The IfcTankType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcTankType are represented by instances of IfcTank . Refer to the documentation at IfcTank for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcTankType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcTankType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow treatment device type IfcDuctSilencerType defines commonly shared information for occurrences of duct silencers. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a duct silencer type specification indicating the specific product information that is common to all occurrences of that product type. The IfcDuctSilencerType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcDuctSilencerType are represented by instances of IfcDuctSilencer . Refer to the documentation at IfcDuctSilencer for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDuctSilencerType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDuctSilencerType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow treatment device type IfcElectricFlowTreatmentDeviceType defines commonly shared information for occurrences of mobile telecommunications appliances. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define an electric flow treatment device type specification indicating the specific product information that is common to all occurrences of that product type. The IfcElectricFlowTreatmentDeviceType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcElectricFlowTreatmentDeviceType are represented by instances of IfcElectricFlowTreatmentDevice . Refer to the documentation at IfcElectricFlowTreatmentDevice for supported property sets, materials, composition, and ports.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcElectricFlowTreatmentDeviceType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcElectricFlowTreatmentDeviceType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow treatment device type IfcInterceptorType defines commonly shared information for occurrences of interceptors. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a interceptor type specification indicating the specific product information that is common to all occurrences of that product type. The IfcInterceptorType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcInterceptorType are represented by instances of IfcInterceptor . Refer to the documentation at IfcInterceptor for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcInterceptorType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcInterceptorType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow treatment device type IfcFilterType defines commonly shared information for occurrences of filters. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a filter type specification indicating the specific product information that is common to all occurrences of that product type. The IfcFilterType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcFilterType are represented by instances of IfcFilter . Refer to the documentation at IfcFilter for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFilterType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFilterType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcSignalType provides the type information for IfcSignal occurrences. A signal is an active device that conveys information or instructions to users, by means of an audio, visual signal or a combination of the 2.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSignalType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSignalType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow terminal type IfcLightFixtureType defines commonly shared information for occurrences of light fixtures. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a light fixture type specification indicating the specific product information that is common to all occurrences of that product type. The IfcLightFixtureType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcLightFixtureType are represented by instances of IfcLightFixture . Refer to the documentation at IfcLightFixture for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcLightFixtureType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcLightFixtureType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow terminal type IfcMobileTelecommunicationsApplianceType defines commonly shared information for occurrences of mobile telecommunications appliances. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a mobile telecommunications appliance type specification indicating the specific product information that is common to all occurrences of that product type. The IfcMobileTelecommunicationsApplianceType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcMobileTelecommunicationsApplianceType are represented by instances of IfcMobileTelecommunicationsAppliance . Refer to the documentation at IfcMobileTelecommunicationsAppliance for supported property sets, materials, composition, and ports.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcMobileTelecommunicationsApplianceType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcMobileTelecommunicationsApplianceType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow terminal type IfcFireSuppressionTerminalType defines commonly shared information for occurrences of fire suppression terminals. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a fire suppression terminal type specification indicating the specific product information that is common to all occurrences of that product type. The IfcFireSuppressionTerminalType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcFireSuppressionTerminalType are represented by instances of IfcFireSuppressionTerminal. Refer to the documentation at IfcFireSuppressionTerminal for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFireSuppressionTerminalType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFireSuppressionTerminalType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow terminal type IfcOutletType defines commonly shared information for occurrences of outlets. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a outlet type specification indicating the specific product information that is common to all occurrences of that product type. The IfcOutletType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcOutletType are represented by instances of IfcOutlet . Refer to the documentation at IfcOutlet for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcOutletType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcOutletType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow terminal type IfcWasteTerminalType defines commonly shared information for occurrences of waste terminals. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a waste terminal type specification indicating the specific product information that is common to all occurrences of that product type. The IfcWasteTerminalType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcWasteTerminalType are represented by instances of IfcWasteTerminal . Refer to the documentation at IfcWasteTerminal for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcWasteTerminalType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcWasteTerminalType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow terminal type IfcElectricApplianceType defines commonly shared information for occurrences of electric appliances. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a electric appliance type specification indicating the specific product information that is common to all occurrences of that product type. The IfcElectricApplianceType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcElectricApplianceType are represented by instances of IfcElectricAppliance . Refer to the documentation at IfcElectricAppliance for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcElectricApplianceType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcElectricApplianceType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow terminal type IfcStackTerminalType defines commonly shared information for occurrences of stack terminals. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a stack terminal type specification indicating the specific product information that is common to all occurrences of that product type. The IfcStackTerminalType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcStackTerminalType are represented by instances of IfcStackTerminal . Refer to the documentation at IfcStackTerminal for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStackTerminalType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStackTerminalType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow terminal type IfcAudioVisualApplianceType defines commonly shared information for occurrences of audio visual appliances. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a audio visual appliance type specification indicating the specific product information that is common to all occurrences of that product type. The IfcAudioVisualApplianceType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcAudioVisualApplianceType are represented by instances of IfcAudioVisualAppliance . Refer to the documentation at IfcAudioVisualAppliance for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcAudioVisualApplianceType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcAudioVisualApplianceType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow terminal type IfcAirTerminalType defines commonly shared information for occurrences of air terminals. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define an air terminal type specification indicating the specific product information that is common to all occurrences of that product type. The IfcAirTerminalType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcAirTerminalType are represented by instances of IfcAirTerminal . Refer to the documentation at IfcAirTerminal for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcAirTerminalType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcAirTerminalType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow terminal type IfcMedicalDeviceType defines commonly shared information for occurrences of medical devices. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a medical device type specification indicating the specific product information that is common to all occurrences of that product type. The IfcMedicalDeviceType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcMedicalDeviceType are represented by instances of IfcMedicalDevice . Refer to the documentation at IfcMedicalDevice for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcMedicalDeviceType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcMedicalDeviceType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow terminal type IfcCommunicationsApplianceType defines commonly shared information for occurrences of communications appliances. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a communications appliance type specification indicating the specific product information that is common to all occurrences of that product type. The IfcCommunicationsApplianceType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcCommunicationsApplianceType are represented by instances of IfcCommunicationsAppliance . Refer to the documentation at IfcCommunicationsAppliance for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCommunicationsApplianceType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCommunicationsApplianceType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow terminal type IfcSanitaryTerminalType defines commonly shared information for occurrences of sanitary terminals. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a sanitary terminal type specification indicating the specific product information that is common to all occurrences of that product type. The IfcSanitaryTerminalType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcSanitaryTerminalType are represented by instances of IfcSanitaryTerminal . Refer to the documentation at IfcSanitaryTerminal for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSanitaryTerminalType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSanitaryTerminalType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow terminal type IfcSpaceHeaterType defines commonly shared information for occurrences of space heaters. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a space heater type specification indicating the specific product information that is common to all occurrences of that product type. The IfcSpaceHeaterType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcSpaceHeaterType are represented by instances of IfcSpaceHeater . Refer to the documentation at IfcSpaceHeater for supported property sets, materials, composition, and ports. .change ifc2x4 IFC4 CHANGE Supertype changed from IfcEnergyConversionDeviceType to IfcFlowTerminalType bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSpaceHeaterType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSpaceHeaterType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow terminal type IfcLampType defines commonly shared information for occurrences of lamps. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a lamp type specification indicating the specific product information that is common to all occurrences of that product type. The IfcLampType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcLampType are represented by instances of IfcLamp . Refer to the documentation at IfcLamp for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcLampType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcLampType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The LiquidTerminalType provides the type information for LiquidTerminal occurrences. A liquid terminal is a terminating or origination point for the transfer of liquid between distribution system s . this is the point where the liquid distribution system interacts with the external environment. An example of this is a loading arm for the transfer of liquid from a docked vessel.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcLiquidTerminalType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcLiquidTerminalType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow moving device type IfcPumpType defines commonly shared information for occurrences of pumps. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a pump type specification indicating the specific product information that is common to all occurrences of that product type. The IfcPumpType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcPumpType are represented by instances of IfcPump . Refer to the documentation at IfcPump for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcPumpType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcPumpType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow moving device type IfcCompressorType defines commonly shared information for occurrences of compressors. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a compressor type specification indicating the specific product information that is common to all occurrences of that product type. The IfcCompressorType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcCompressorType are represented by instances of IfcCompressor . Refer to the documentation at IfcCompressor for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCompressorType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCompressorType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The flow moving device type IfcFanType defines commonly shared information for occurrences of fans. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a fan type specification indicating the specific product information that is common to all occurrences of that product type. The IfcFanType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcFanType are represented by instances of IfcFan . Refer to the documentation at IfcFan for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFanType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFanType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The distribution control element type IfcProtectiveDeviceTrippingUnitType defines commonly shared information for occurrences of protective device tripping units. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a protective device tripping unit type specification indicating the specific product information that is common to all occurrences of that product type. The IfcProtectiveDeviceTrippingUnitType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcProtectiveDeviceTrippingUnitType are represented by instances of IfcProtectiveDeviceTrippingUnit . Refer to the documentation at IfcProtectiveDeviceTrippingUnit for supported property sets, materials, composition, and ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcProtectiveDeviceTrippingUnitType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcProtectiveDeviceTrippingUnitType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The distribution control element type IfcAlarmType defines commonly shared information for occurrences of alarms. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a alarm type specification indicating the specific product information that is common to all occurrences of that product type. The IfcAlarmType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcAlarmType are represented by instances of IfcAlarm . Refer to the documentation at IfcAlarm for supported property sets, materials, composition, and ports. HISTORY New entity in IFC2x2 bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcAlarmType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcAlarmType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The distribution control element type IfcSensorType defines commonly shared information for occurrences of sensors. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a sensor type specification indicating the specific product information that is common to all occurrences of that product type. The IfcSensorType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcSensorType are represented by instances of IfcSensor . Refer to the documentation at IfcSensor for supported property sets, materials, composition, and ports. HISTORY New entity in IFC2x2 bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSensorType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSensorType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The distribution control element type IfcActuatorType defines commonly shared information for occurrences of actuators. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a actuator type specification indicating the specific product information that is common to all occurrences of that product type. The IfcActuatorType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcActuatorType are represented by instances of IfcActuator . Refer to the documentation at IfcActuator for supported property sets, materials, composition, and ports. HISTORY New entity in IFC2x2 bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcActuatorType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcActuatorType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The distribution control element type IfcControllerType defines commonly shared information for occurrences of controllers. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a controller type specification indicating the specific product information that is common to all occurrences of that product type. The IfcControllerType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcControllerType are represented by instances of IfcController . Refer to the documentation at IfcController for supported property sets, materials, composition, and ports. HISTORY New entity in IFC2x2 bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcControllerType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcControllerType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The distribution control element type IfcFlowInstrumentType defines commonly shared information for occurrences of flow instruments. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a flow instrument type specification indicating the specific product information that is common to all occurrences of that product type. The IfcFlowInstrumentType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcFlowInstrumentType are represented by instances of IfcFlowInstrument . Refer to the documentation at IfcFlowInstrument for supported property sets, materials, composition, and ports. HISTORY New entity in IFC2x2 bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFlowInstrumentType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFlowInstrumentType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The distribution control element type IfcUnitaryControlElementType defines commonly shared information for occurrences of unitary control elements. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements common ports It is used to define a unitary control element type specification indicating the specific product information that is common to all occurrences of that product type. The IfcUnitaryControlElementType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcUnitaryControlElementType are represented by instances of IfcUnitaryControlElement . Refer to the documentation at IfcUnitaryControlElement for supported property sets, materials, composition, and ports. HISTORY New entity in IFC4 bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcUnitaryControlElementType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcUnitaryControlElementType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The furnishing element type IfcSystemFurnitureElementType defines commonly shared information for occurrences of system furniture elements. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements It is used to define a system furniture element type specification indicating the specific product information that is common to all occurrences of that product type. The IfcSystemFurnitureElementType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcSystemFurnitureElementType are represented by instances of IfcSystemFurnitureElement . Refer to the documentation at IfcSystemFurnitureElement for supported property sets, materials, and composition. HISTORY New entity in IFC2x2 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSystemFurnitureElementType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSystemFurnitureElementType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The furnishing element type IfcFurnitureType defines commonly shared information for occurrences of furnitures. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements It is used to define a furniture type specification indicating the specific product information that is common to all occurrences of that product type. The IfcFurnitureType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcFurnitureType are represented by instances of IfcFurniture . Refer to the documentation at IfcFurniture for supported property sets, materials, and composition. HISTORY New entity in IFC2x2 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFurnitureType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFurnitureType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The element component type IfcVibrationIsolatorType defines commonly shared information for occurrences of vibration isolators. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements It is used to define a vibration isolator type specification indicating the specific product information that is common to all occurrences of that product type. The IfcVibrationIsolatorType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcVibrationIsolatorType are represented by instances of IfcVibrationIsolator . Refer to the documentation at IfcVibrationIsolator for supported property sets, materials, and composition. HISTORY New entity in IFC2x2 bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcVibrationIsolatorType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcVibrationIsolatorType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcVibrationDamperType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcVibrationDamperType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcSignType provides the type information for IfcSign occurrences. A sign is a notice on display that gives information or instructions in a written, symbolic or other form. Signs are passive with the most common form of a pictorial panel.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSignType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSignType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The element component type IfcFastenerType defines commonly shared information for occurrences of fasteners. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements It is used to define a fastener type specification indicating the specific product information that is common to all occurrences of that product type. The IfcFastenerType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcFastenerType are represented by instances of IfcFastener . HISTORY New entity in IFC2x2. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFastenerType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFastenerType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The reinforcing element type IfcTendonType defines commonly shared information for occurrences of tendons. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements It is used to define a tendon type specification indicating the specific product information that is common to all occurrences of that product type. The IfcTendonType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcTendonType are represented by instances of IfcTendon . HISTORY New entity in IFC4. .use head Material Use Definition An associated material denotes the steel grade, preferrably via material classification. A material constituent set or material profile set may be associated if the cable, bonding mortar or corrosion protection, and tendon sheeth are to be described together by the material association. .use head Geometry Use Definition The IfcTendonType may define the shared geometric representation for many tendon occurrences. The RepresentationMaps attribute refers to a list of IfcRepresentationMap s, that allow for multiple geometric representations. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcReinforcingElementType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcReinforcingElementType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The element component type IfcDiscreteAccessoryType defines commonly shared information for occurrences of discrete accessorys. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements It is used to define a discrete accessory type specification indicating the specific product information that is common to all occurrences of that product type. The IfcDiscreteAccessoryType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcDiscreteAccessoryType are represented by instances of IfcDiscreteAccessory . HISTORY New entity in IFC4. .use head Type Use Definition The exact type information of the IfcDiscreteAccessoryType is given in the PredefinedType attribute, possibly in combination with the ElementType attribute inherited from IfcElementType . Standard ElementType designations are provided for guideline below. The list is not exhaustive and the list of definitions may be extended based on local agreements. Corbels as separate components Hidden steel corbel Corbel system made from steel components embedded into the master element. Visible steel corbel Corbel system made from steel components protruding from the master element. Visible concrete corbel Corbel system made as a separate precast concrete component added to the master element. Connecting accessories, for example for sandwich wall panels Diagonal truss connector A fixing device in truss form with diagonal cross bars holding two precast conrete panels together in a sandwich wall panel. Ladder truss connector A fixing device in truss form with straight cross bars in ladder form holding two precast conrete panels together in a sandwich wall panel. Panel suspender A straight fixing device holding two precast conrete panels together in a sandwich wall panel. Electrical accessories for precast concrete elements Protective plug Protective plug used in element for protecting electrical accessories during manufacturing, transportation and assembly. Fixing parts Standard fixing plate Standard fixing plate. Edge fixing plate Fixing plate attached to the edge of an element. Corner fixing plate Fixing plate attached to the corner of an element. Slab fixing plate Fixing plate for slabs. Channel fixing Fixing channels, often realized as cast in channels. Balcony hinge Accessory supporting and fixing balconies. Frame shoe Fixing shoe for frames. Thermo frame Thermo frame. Column shoe Fixing shoe for columns. Wall shoe Fixing shoe for walls. Fixing socket Fixing socket. Joint accessories Neoprene bearing plate Rubber plate used as a bearing in, for example, joints between column corbels and beams. Working joint reinforcement Reinforcement accessory used in working joints. Expansion joint reinforcement Reinforcement accessory used in expansion joints. Ribbed steel bar extension Extension accessory made of a ribbed reinforcement bar used in joints. Steel pin bolt Pin bolt used to join together, for example, columns and beams. Concrete dowel Dowel pin used in joints. Concrete groove A groove made in a joint. Steel plate A steel plate used as an accessory in a joint. Wire loop A joint connector accessory made from a wire loop. Steel loop A joint connector accessory made from a steel bar loop. Sealing strip A strip sealing the joint. Sealing compound Sealing compound protecting and sealing the joint. Lifting accessories Wire lifting hook A lifting aid in the form of a wire loop. Steel lifting hook A lifting aid in the form of a steel bar loop. Lifting socket A lifting aid in the form of a socket. Steel lifting anchor A lifting aid in the form of a steel lifting anchor. Lifting hole A lifting aid in the form of a hole. Accessories mainly used in the building services domain Antivibration An isolating device to prevent other elements to be effected by vibrations. Drop rod A length of material providing a hanging support to a bracket. Note that a drop rod is considered to include nuts and washers required for securing. Duct foot A base support used to receive a vertical pipe . Framing A frame placed around a penetration to prevent scraping against the building surface or structure. Grommet An element placed within a penetration that seals the penetration for a particular reason. Rack A set of shelving for the purposes of storage that may be freestanding or bolted to a structure. Safety part A part, typically installed in vertical shafts at each level, to ensure safety from falling when entering the shaft. Sleeve A thin barrier placed between a penetration and a penetrating element. Support section A section of material that is used as an intermediate support upon which multiple brackets can be mounted. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDiscreteAccessoryType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDiscreteAccessoryType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcImpactProtectionDeviceType provides the type information for IfcImpactProtectionDevice occurrences. A impact protection device is a component used to protect other built elements from kinetic damage.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcImpactProtectionDeviceType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcImpactProtectionDeviceType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The building element part type defines lists of commonly shared property set definitions and representation maps of parts of a building element. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcBuildingElementPartType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcBuildingElementPartType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The element component type IfcMechanicalFastenerType defines commonly shared information for occurrences of mechanical fasteners. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements It is used to define a mechanical fastener type specification indicating the specific product information that is common to all occurrences of that product type. The IfcMechanicalFastenerType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcMechanicalFastenerType are represented by instances of IfcMechanicalFastener. HISTORY New entity in IFC2x2 IFC4 CHANGE Supertype changed from IfcFastenerType to IfcElementComponentType. Attributes PredefinedType , NominalDiameter, NominalLength added. Classification Use Definition Mechanical fasteners, especially bolts, are often standardized. To refer to a formal fastener designation according to a standard a product norm , IfcRelAssociatesClassification together with IfcClassificationReference should be used. IfcClassificationReference.Identification contains a machine readable form of the formal fastener designation from the norm. Example M16X80 10.9 HV for a high strength structural bolting assembly for preloading with hexagon bolt and nut. On the other hand, IfcMechanicalFastenerType.Name contains a displayable name which may not necessarily be the same as the formal designation. IfcClassificationReference.Name carries the short name of the fastener norm. Example EN 14399 4 as the respective European standard for high strength hexagon bolts. Optionally, the norm can be further described by IfcClassificationReference.ReferencedSource , including information like publisher and date of issue of the norm. Furthermore, IfcRelAssociatesLibrary together with IfcLibraryReference may be used to refer to a library which contains fastener definitions. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcMechanicalFastenerType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcMechanicalFastenerType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The reinforcing element type IfcTendonAnchorType defines commonly shared information for occurrences of tendon anchors. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements It is used to define a tendon anchor type specification indicating the specific product information that is common to all occurrences of that product type. The IfcTendonAnchorType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcTendonAnchorType are represented by instances of IfcTendonAnchor . HISTORY New entity in IFC4. .use head Material Use Definition A material or material constituent set may be associated. .use head Geometry Use Definition The IfcTendonAnchorType may define the shared geometric representation for many tendon anchor occurrences. The RepresentationMaps attribute refers to a list of IfcRepresentationMap s, that allow for multiple geometric representations. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcTendonAnchorType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcTendonAnchorType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcTendonConduitType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcTendonConduitType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The reinforcing element type IfcReinforcingBarType defines commonly shared information for occurrences of reinforcing bars. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements It is used to define a reinforcing bar type specification indicating the specific product information that is common to all occurrences of that product type. The IfcReinforcingBarType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcReinforcingBarType are represented by instances of IfcReinforcingBar . HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcReinforcingBarType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcReinforcingBarType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The reinforcing element type IfcReinforcingMeshType defines commonly shared information for occurrences of reinforcing meshs. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements It is used to define a reinforcing mesh type specification indicating the specific product information that is common to all occurrences of that product type. The IfcReinforcingMeshType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcReinforcingMeshType are represented by instances of IfcReinforcingMesh . HISTORY New entity in IFC4. .use head Geometry Use Definition The IfcReinforcingMeshType may define the shared geometric representation for many mesh occurrences. The RepresentationMaps attribute refers to a list of IfcRepresentationMap s, that allow for multiple geometric representations. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcReinforcingMeshType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcReinforcingMeshType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The reinforcing element type IfcTendonType defines commonly shared information for occurrences of tendons. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements It is used to define a tendon type specification indicating the specific product information that is common to all occurrences of that product type. The IfcTendonType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcTendonType are represented by instances of IfcTendon . HISTORY New entity in IFC4. .use head Material Use Definition An associated material denotes the steel grade, preferrably via material classification. A material constituent set or material profile set may be associated if the cable, bonding mortar or corrosion protection, and tendon sheeth are to be described together by the material association. .use head Geometry Use Definition The IfcTendonType may define the shared geometric representation for many tendon occurrences. The RepresentationMaps attribute refers to a list of IfcRepresentationMap s, that allow for multiple geometric representations. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcTendonType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcTendonType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The building element type IfcChimneyType defines commonly shared information for occurrences of chimneys. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements It is used to define a chimney type specification indicating the specific product information that is common to all occurrences of that product type. The IfcChimneyType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcChimneyType are represented by instances of IfcChimney . Refer to the documentation at IfcChimney for supported property sets, materials, and composition. HISTORY New entity in IFC4 bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcChimneyType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcChimneyType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcCourseType provides the type information for IfcCourse occurrences. A course is a built element whose length greatly exceeds its thickness and often also its width, usually of a single material laid on site on top of another horizontal or nearly horizontal built element. A course is distinctive from a earthworks element in that a course is a graded granular which can be bound or unbound material that is generally processed in some fashion, where as earthworks elements are soil earthen based structure that can be formed by removal and transport of general ground material. Structurally a course does not have capacity to carry loads over open span, or to be removed or replaced as a single unit.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCourseType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCourseType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The element type IfcTrackElementType defines commonly shared information for occurrences of track elements. The set of shared information may include common properties within shared property sets common material information common profile definitions common shape representations It is used to define a track element specification the specific product information that is common to all occurrences of that track element type . Track element types may be exchanged without being already assigned to occurrences. Occurrences of the IfcTrackElementType are represented by instances of IfcTrackElement .",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcTrackElementType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcTrackElementType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The building element type IfcRampType defines commonly shared information for occurrences of ramps. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements It is used to define a ramp type specification indicating the specific product information that is common to all occurrences of that product type. The IfcRampType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcRampType are represented by instances of IfcRamp . Refer to the documentation at IfcRamp for supported property sets, materials, and composition. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRampType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRampType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcBuildingElementProxyType defines a list of commonly shared property set definitions of a building element proxy and an optional set of product representations. It is used to define an element specification i.e. the specific product information, that is common to all occurrences of that product type . NOTE The product representations are defined as representation maps at the level of the supertype IfcTypeProduct , which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item 1 being an IfcMappedItem . A building element proxy type is used to define the common properties of a certain type of a building element proxy that may be applied to many instances of that S type to assign a specific style. Building element proxy types S may be exchanged without being already assigned to occurrences. NOTE Although an building element proxy does not have a predefined ontological meaning the provision of a type may be helpful in sharing information among multiple occurrences. Applications that provide type information for element types not yet included in the current IFC specification can use the IfcBuildingElementProxyType to exchange such types. The occurrences of the IfcBuildingElementProxyType are represented by instances of IfcBuildingElementProxy . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcBuildingElementProxyType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcBuildingElementProxyType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The building element type IfcPileType defines commonly shared information for occurrences of piles. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements It is used to define a pile type specification indicating the specific product information that is common to all occurrences of that product type. The IfcPileType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcPileType are represented by instances of IfcPile . Refer to the documentation at IfcPile for supported property sets, materials, and composition. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDeepFoundationType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDeepFoundationType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The building element type IfcStairFlightType defines commonly shared information for occurrences of stair flights. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements It is used to define a stair flight type specification indicating the specific product information that is common to all occurrences of that product type. The IfcStairFlightType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcStairFlightType are represented by instances of IfcStairFlight . Refer to the documentation at IfcStairFlight for supported property sets, materials, and composition. HISTORY New entity in IFC2x2. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStairFlightType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStairFlightType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcNavigationElementType provides the type information for IfcNavigationElement occurrences. A navigation element is an active or passive built element who s primary function is provide navigational instructions and warnings to vessels, this could be in the form of a floating buoy, a fixed beacon or sound signal.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcNavigationElementType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcNavigationElementType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The element type IfcSlabType defines commonly shared information for occurrences of slabs. The set of shared information may include common properties within shared property sets common material information common material layer definitions common shape representations NOTE It is illegal to share shape representations as representation maps for occurrences of IfcSlabStandardCase . It is used to define a slab specification i.e. the specific product information, that is common to all occurrences of that product type . Slab types may be exchanged without being already assigned to occurrences. NOTE The product representations are defined as representation maps at the level of the supertype IfcTypeProduct , which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item 1 being an IfcMappedItem . The occurrences of the IfcSlabType within building models are represented by instances of IfcSlabStandardCase if the IfcSlabType has a single associated IfcMaterialLayerSet otherwise they are represented by instances of IfcSlab , or IfcSlabElementedCase . HISTORY New entity in IFC2x2. .spec head Informal Propositions 1. The material assignment, if provided using the IfcRelAssociatesMaterial relationship, shall not reference the IfcMaterialLayerSetUsage . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSlabType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSlabType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The element type IfcWallType defines commonly shared information for occurrences of walls. The set of shared information may include common properties within shared property sets common material information common material layer definitions common shape representations NOTE It is illegal to share shape representations as representation maps for occurrences of IfcWallStandardcase . It is used to define a wall specification i.e. the specific product information, that is common to all occurrences of that product type . Wall types may be exchanged without being already assigned to occurrences. NOTE The product representations are defined as representation maps at the level of the supertype IfcTypeProduct , which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item 1 being an IfcMappedItem . Occurrences of the IfcWallType within building models are represented by instances of IfcWallStandardCase if the IfcWallType has a single associated IfcMaterialLayerSet otherwise they are represented by instances of IfcWall , or IfcWallElementedCase . Occurrences of the IfcWallType within structural analysis models are represented by instances of IfcStructuralSurfaceMember , or its applicable subtypes. HISTORY New entity in IFC2x2. .spec head Informal Propositions 1. The material assignment, if provided using the IfcRelAssociatesMaterial relationship, shall not reference the IfcMaterialLayerSetUsage . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcWallType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcWallType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcPavementType provides the type information for IfcPavement occurrences. A pavement is a type of built element in a road or other paved area to provide an even surface sustaining loads from vehicles or pedestrians, usually comprising several courses.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcPavementType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcPavementType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The building element type IfcRampFlightType defines commonly shared information for occurrences of ramp flights. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements It is used to define a ramp flight type specification indicating the specific product information that is common to all occurrences of that product type. The IfcRampFlightType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcRampFlightType are represented by instances of IfcRampFlight . Refer to the documentation at IfcRampFlight for supported property sets, materials, and composition. HISTORY New entity in IFC2x2. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRampFlightType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRampFlightType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcBearingType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcBearingType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The element type IfcPlateType defines commonly shared information for occurrences of plates. The set of shared information may include common properties within shared property sets common material information common material layer definitions common shape representations NOTE It is illegal to share shape representations as representation maps for occurrences of IfcPlateStandardCase . It is used to define a plate specification i.e. the specific product information, that is common to all occurrences of that product type . Plate types may be exchanged without being already assigned to occurrences. NOTE The product representations are defined as representation maps at the level of the supertype IfcTypeProduct , which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item 1 being an IfcMappedItem . The occurrences of the IfcPlateType within building models are represented by instances of IfcPlateStandardCase if the IfcPlateType has a single associated IfcMaterialLayerSet otherwise they are represented by instances of IfcPlate . HISTORY New entity in IFC2x2. .spec head Informal Propositions 1. The material assignment, if provided using the IfcRelAssociatesMaterial relationship, shall not reference the IfcMaterialLayerSetUsage . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcPlateType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcPlateType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The element type IfcCoveringType defines commonly shared information for occurrences of coverings. The set of shared information may include common properties within shared property sets common material layer set information common shape representations It is used to define an covering specification or covering style i.e. the specific product information, that is common to all occurrences of that product type . Covering types may be exchanged without being already assigned to occurrences. The occurrences of the IfcCoveringType are represented by instances of IfcCovering HISTORY New entity in IFC2x2. .spec head Informal Propositions 1. The material assignment, if provided using the IfcRelAssociatesMaterial relationship, shall not reference IfcMaterialLayerSetUsage or IfcMaterialProfileSetUsage . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCoveringType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCoveringType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The element type IfcBeamType defines commonly shared information for occurrences of beams. The set of shared information may include common properties within shared property sets common material information common profile definitions common shape representations It is used to define a beam specification, or beam style the specific product information that is common to all occurrences of that beam type . Beam types may be exchanged without being already assigned to occurrences. Occurrences of the IfcBeamType within building models are represented by instances of IfcBeamStandardCase if the IfcBeamType has a single associated IfcMaterialProfileSet otherwise they are represented by instances of IfcBeam . Occurrences of the IfcBeamType within structural analysis models are represented by instances of IfcStructuralCurveMember , or its applicable subtypes. HISTORY New entity in IFC2x2. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcBeamType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcBeamType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The building element type IfcRailingType defines commonly shared information for occurrences of railings. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements It is used to define a railing type specification indicating the specific product information that is common to all occurrences of that product type. The IfcRailingType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcRailingType are represented by instances of IfcRailing . Refer to the documentation at IfcRailing for supported property sets, materials, and composition. HISTORY New entity in IFC2x2. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRailingType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRailingType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The element type IfcWindowType defines commonly shared information for occurrences of windows. The set of shared information may include common properties within shared property sets common material information common partitioning of panels common operation types of panels common shape representations A window type defines the particular parameter of the lining and one or several panels through the IfcWindowLiningProperties and the IfcWindowPanelProperties as predefined property sets applicable to windows only. It is used to define a window specification, or window style the specific product information that is common to all occurrences of that window type . Window types may be exchanged without being already assigned to occurrences. Occurrences of the IfcWindowType within building models are represented by instances of IfcWindow or IfcWindowStandardCase . HISTORY New entity in IFC4. The entity IfcWindowType replaces the previous definition IfcWindowStyle which is deprecated in IFC4 . .use head Partitioning type use definition The IfcWindowTypePartitioningEnum defines the general layout of the window type and its symbolic presentation. Depending on the enumerator, the appropriate instances of IfcWindowLiningProperties and IfcWindowPanelProperties are attached in the list of HasPropertySets . The IfcWindowTypePartitioningEnum mainly determines the way of partitioning the window into individual window panels and thereby number and position of window panels. See geometry use definitions at IfcWindowTypePartitioningEnum for the correct usage of panel partitioning and IfcWindowPanelProperties for the opening symbols for different panel operation types. .use head Material Use Definition The material of the IfcWindowType is defined by the IfcMaterialConstituentSet or as fall back by IfcMaterial and attached by the IfcRelAssociatesMaterial . RelatingMaterial . It is accessible by the inverse HasAssociations relationship. The following keywords for IfcMaterialConstituentSet.MaterialConstituents n .Name shall be used Lining to indicate that the material constituent applies to to the window lining Framing to indicate that the material constituent applies to to the window panels, if not provided, the Lining material information applied to panels as well Glazing to indicate that the material constituent applies to to the glazing part If the fall back single IfcMaterial is referenced, it applies to the lining and framing of the window. .use head Geometry Use Definitions The IfcWindowType may define the common shape of window occurrences. The common shape can be defined by applying shape parameters defined within the associated IfcWindowLiningProperties and IfcWindowPanelProperties applied to the Profile geometric representation. It is only applicable if the IfcWindowType has only occurrences of type IfcWindowStandardCase See geometric use definition of IfcWindowStandardCase for further information . applying the RepresentationMaps attribute to refer to a list of IfcRepresentationMap s, that allow for multiple geometric representations e.g. with IfcShapeRepresentation s having an RepresentationIdentifier Box , Profile , FootPrint , or Body NOTE The product shape representations are defined as RepresentationMaps attribute of the supertype IfcTypeProduct , which get assigned by an element occurrence instance through the IfcShapeRepresentation.Item n being an IfcMappedItem . See IfcTypeProduct for further information. NOTE The values of attributes RepresentationIdentifier and RepresentationType of IfcShapeRepresentation are restricted in the same way as those for IfcWindow and IfcWindowStandardCase bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcWindowType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcWindowType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The building element type IfcStairType defines commonly shared information for occurrences of stairs. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements It is used to define a stair type specification indicating the specific product information that is common to all occurrences of that product type. The IfcStairType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcStairType are represented by instances of IfcStair. Refer to the documentation at IfcStair for supported property sets, materials, and composition. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStairType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStairType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcKerbType provides the type informaton for the IfcKerb element. An IfcKerb is a border of stone, concrete or other rigid material formed at the edge of the carriageway or footway.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcKerbType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcKerbType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The building element type IfcShadingDeviceType defines commonly shared information for occurrences of shading devices. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements It is used to define a shading device type specification indicating the specific product information that is common to all occurrences of that product type. The IfcShadingDeviceType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcShadingDeviceType are represented by instances of IfcShadingDevice . Refer to the documentation at IfcShadingDevice for supported property sets, materials, and composition. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcShadingDeviceType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcShadingDeviceType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The element type IfcColumnType defines commonly shared information for occurrences of columns. The set of shared information may include common properties within shared property sets common material information common profile definitions common shape representations It is used to define a column specification, or column style i.e. the specific product information that is common to all occurrences of that column type . Column types may be exchanged without being already assigned to occurrences. Occurrences of the IfcColumnType within building models are represented by instances of IfcColumnStandardCase if the IfcColumnType has a single associated IfcMaterialProfileSet otherwise they are represented by instances of IfcColumn . Occurrences of the IfcColumnType within structural analysis models are represented by instances of IfcStructuralCurveMember , or its applicable subtypes. HISTORY New entity in IFC2x2. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcColumnType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcColumnType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The building element type IfcCurtainWallType defines commonly shared information for occurrences of curtain walls. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements It is used to define a curtain wall type specification indicating the specific product information that is common to all occurrences of that product type. The IfcCurtainWallType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcCurtainWallType are represented by instances of IfcCurtainWall . Refer to the documentation at IfcCurtainWall for supported property sets, materials, and composition. HISTORY New entity in IFC2x3. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCurtainWallType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCurtainWallType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcMooringDeviceType provides the type information for IfcMooringDevice occurrences. A mooring device is an active or passive built element who s primary function is to participate in the mooring of a vessel, this could be in the form of a bollard used as an attachment point for lines or active equipment such as quick release hooks.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcMooringDeviceType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcMooringDeviceType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The element type IfcMemberType defines commonly shared information for occurrences of members. Members are predominately linear building elements, often forming part of a structural system. The orientation of the member being horizontal, vertical or sloped is not relevant to its definition in contrary to beam and column . The set of shared information may include common properties within shared property sets common material information common profile definitions common shape representations It is used to define a member specification, or member style the specific product information that is common to all occurrences of that member type . Member types may be exchanged without being already assigned to occurrences. Occurrences of the IfcMemberType within building models are represented by instances of IfcMemberStandardCase if the IfcMemberType has a single associated IfcMaterialProfileSet otherwise they are represented by instances of IfcMember . Occurrences of the IfcMemberType within structural analysis models are represented by instances of IfcStructuralCurveMember , or its applicable subtypes. HISTORY New entity in IFC2x2 Addendum 1. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcMemberType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcMemberType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The building element type IfcRoofType defines commonly shared information for occurrences of roofs. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements It is used to define a roof type specification indicating the specific product information that is common to all occurrences of that product type. The IfcRoofType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcRoofType are represented by instances of IfcRoof . Refer to the documentation at IfcRoof for supported property sets, materials, and composition. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRoofType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRoofType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The building element type IfcFootingType defines commonly shared information for occurrences of footings. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements It is used to define a footing type specification indicating the specific product information that is common to all occurrences of that product type. The IfcFootingType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcFootingType are represented by instances of IfcFooting . Refer to the documentation at IfcFooting for supported property sets, materials, and composition. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFootingType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFootingType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The element type IfcDoorType defines commonly shared information for occurrences of doors. The set of shared information may include common properties within shared property sets common material information common operation type definitions common shape representations A door type defines the particular parameter of the lining and one or several panels through the IfcDoorLiningProperties and the IfcDoorPanelProperties as predefined property sets applicable to doors only. It is used to define a door specification, or door style i.e. the specific product information that is common to all occurrences of that door type . Door types may be exchanged without being already assigned to occurrences. NOTE The product representations are defined as representation maps at the level of the supertype IfcTypeProduct , which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item 1 being an IfcMappedItem . Occurrences of the IfcDoorType within building models are represented by instances of IfcDoor or IfcDoorStandardCase . Operation type use definition The IfcDoorTypeOperationEnum defines the general layout of the door type and its symbolic presentation. Depending on the enumerator, the appropriate instances of IfcDoorLiningProperties and IfcDoorPanelProperties are attached in the list of HasPropertySets . The IfcDoorTypeOperationEnum mainly determines the hinge side left hung, or right hung , the operation swinging, sliding, folding, etc. and the number of panels. NOTE There are different definitions in various countries on what a left opening or left hung or left swing door is same for right . Therefore the IFC definition may derivate from the local standard and may need to be mapped appropriately. See geometry use definitions at IfcDoorTypeOperationEnum for the correct usage of opening symbols for different operation types. Material Use Definition The material of the IfcDoorType is defined by the IfcMaterialConstituentSet or as fall back by IfcMaterial and attached by the IfcRelAssociatesMaterial . RelatingMaterial . It is accessible by the inverse HasAssociations relationship. The following keywords for IfcMaterialConstituentSet.MaterialConstituents n .Name shall be used Lining to indicate that the material constituent applies to to the door lining Framing to indicate that the material constituent applies to to the door framing, if not provided, the Lining material information applied to frams as well Glazing to indicate that the material constituent applies to to the glazing as well If the fall back single IfcMaterial is referenced, it applies to the lining and framing of the door. Geometry Use Definitions The IfcDoorType may define the common shape of door occurrences. The common shape can be defined by applying shape parameters defined within the associated IfcDoorLiningProperties and IfcDoorPanelProperties applied to the Profile geometric representation. It is only applicable if the IfcDoorType has only occurrences of type IfcDoorStandardCase See geometric use definition of IfcDoorStandardCase for further information . applying the RepresentationMaps attribute to refer to a list of IfcRepresentationMap s, that allow for multiple geometric representations e.g. with IfcShapeRepresentation s having an RepresentationIdentifier Box , Profile , FootPrint , or Body NOTE The product shape representations are defined as RepresentationMaps attribute of the supertype IfcTypeProduct , which get assigned by an element occurrence instance through the IfcShapeRepresentation.Item n being an IfcMappedItem . See IfcTypeProduct for further information. NOTE The values of attributes RepresentationIdentifier and RepresentationType of IfcShapeRepresentation are restricted in the same way as those for IfcDoor and IfcDoorStandardCase bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDoorType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDoorType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The element type IfcRailType defines commonly shared information for occurrences of rails. The set of shared information may include common properties within shared property sets common material information common profile definitions common shape representations It is used to define a rail specification, or rail style the specific product information that is common to all occurrences of that rail type . Rail types may be exchanged without being already assigned to occurrences. Occurrences of the IfcRailType are represented by instances of IfcRail .",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRailType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRailType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCaissonFoundationType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCaissonFoundationType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The building element type IfcPileType defines commonly shared information for occurrences of piles. The set of shared information may include common properties with shared property sets common representations common materials common composition of elements It is used to define a pile type specification indicating the specific product information that is common to all occurrences of that product type. The IfcPileType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcPileType are represented by instances of IfcPile . Refer to the documentation at IfcPile for supported property sets, materials, and composition. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcPileType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcPileType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A space represents an area or volume bounded actually or theoretically. Spaces are areas or volumes that provide for certain functions within a building. The IfcSpaceType defines a list of commonly shared defines commonly shared information for occurrences of spaces. The set of shared information may include common properties within shared property sets common shape representations It is used to define an space specification i.e. the specific space information, that is common to all occurrences of that space type. Space types may be exchanged without being already assigned to occurrences. NOTE The space types are often used to represent space catalogues, less so for sharing a common representation map. Space types in a space catalogue share same space classification and a common set of space requirement properties. The occurrences of IfcSpaceType are represented by instances of IfcSpace . HISTORY New entity in IFC2x3. .change ifc2x4 IFC4 CHANGE The attribute LongName has been added to the end of the entity definition. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSpatialStructureElementType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSpatialStructureElementType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcSpatialZoneType defines a list of commonly shared property set definitions of a space and an optional set of product representations. It is used to define a space specification i.e. the specific space information, that is common to all occurrences of that space type . NOTE The product representations are defined as representation maps at the level of the supertype IfcTypeProduct, which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item 1 being an IfcMappedItem. A spatial zone type is used to define the common properties of a certain type of space that may be applied to many instances of that type to assign a specific style. Space types may be exchanged without being already assigned to occurrences. NOTE The spatial zone types are often used to represent space catalogues, less so for sharing a common representation map. Spatial zone types in a space catalogue share same space classification and a common set of space requirement properties. The occurrences of IfcSpatialZoneType are represented by instances of IfcSpatialZone. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSpatialZoneType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSpatialZoneType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A space represents an area or volume bounded actually or theoretically. Spaces are areas or volumes that provide for certain functions within a building. The IfcSpaceType defines a list of commonly shared defines commonly shared information for occurrences of spaces. The set of shared information may include common properties within shared property sets common shape representations It is used to define an space specification i.e. the specific space information, that is common to all occurrences of that space type. Space types may be exchanged without being already assigned to occurrences. NOTE The space types are often used to represent space catalogues, less so for sharing a common representation map. Space types in a space catalogue share same space classification and a common set of space requirement properties. The occurrences of IfcSpaceType are represented by instances of IfcSpace . HISTORY New entity in IFC2x3. .change ifc2x4 IFC4 CHANGE The attribute LongName has been added to the end of the entity definition. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSpaceType"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSpaceType"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Instances of the entity IfcStructuralResultGroup are used to group results of structural analysis calculations and to capture the connection to the underlying basic load group. The basic functionality for grouping inherited from IfcGroup is used to collect instances from IfcStructuralReaction or its respective subclasses. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE WHERE rule added. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcGroup"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcGroup"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An IfcTask is an identifiable unit of work to be carried out in a construction project. A task is typically used to describe an activity for the construction or installation of products, but is not limited to these types. For example it might be used to describe design processes, move operations and other design, construction and operation related activities as well. Quantities of resources consumed by the task are dealt with by defining the IfcElementQuantity for the resource and not at the instance of IfcTask . HISTORY New entity in IFC1.0. Renamed from IfcWorkTask in IFC2x. .change ifc2x4 IFC4 CHANGE Attributes TaskTime and PredefinedType added. IfcMove and IfcOrderRequest has been removed in IFC4 and are now represented by IfcTask . IfcRelAssignsTasks relationship has been removed as well. .use head Attribute use definition Each occurrence of IfcTask is given a name that is indicative of its content IfcRoot.Name . A textual description of the task may be provided and this may be further elaborated by a narrative long description IfcProcess.LongDescription . A work method may be declared for the method of work used in carrying out a task. A task is identified as being either a milestone task or not. A milestone task is defined by the marker IsMilestone . and has no duration. A status and priority for each task may also be set. .use head Time and duration use definition Compared to previous IFC releases, basic task time information scheduled start time, scheduled finish time, duration is now directly attached to IfcTask through the TaskTime attribute. Regular tasks are defined through IfcTaskTime . Recurring tasks are defined through IfcTaskTimeRecurring . In case a regular task is derived from a recurring task both tasks should be linked together through a IfcRelNests relationship, where IfcRelNests.IsNestedBy points to the recurring task and IfcRelNests.Nests points to all regular tasks that have been derived from the recurring task. .use head Representation of other activities The use definitions for IfcTask have been generalised to represent other activities as well, including activities that had been defined by own entities in previous IFC releases. This includes Order actions Move operations IfcTask represents an order that might be carried out by a Helpdesk acting the role of interface for the organization between the facility user and the functional requirement of fulfilling their needs. The actual task represented by the IfcTask entity is turning a request into an order and initiating the action that will enable the order to be completed. The IfcProjectOrder or one of its subtypes including maintenance work order, is related to the IfcTask using IfcRelAssignsToControl . IfcTask can also be used to describe an activity that moves people, groups within an organization or complete organizations together with their associated furniture and equipment from one place to another. It thus replaces the previous IFC entity IfcMove. The functionality is represented in IfcTask as follows Move from The place from which actors and their associated equipment are moving. Use IfcRelAssignsToProcess where RelatingProcess points to the task and RelatedObjects holds the location s from which to move. Move to The place to which actors and their associated equipment are moving. Use IfcRelAssignsToProduct where RelatedObjects points to the task s and RelatingProduct points to the location to which to move. Punch list A list of points concerning a move that require attention. Use LongDescription or else identify sub tasks to track punch list items individually via IfcRelNests . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcProcess"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcProcess"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The abstract entity IfcStructuralItem is the generalization of structural members and structural connections, that is, analysis idealizations of elements in the building model. It defines the relation between structural members and connections with structural activities actions and reactions . Relationships between elements in the building model and structural items as their idealizations can be expressed by instances of IfcRelAssignsToProduct . HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE Use definitions and informal proposition added. Coordinate Systems The following coordinate systems are distinguished The so called global coordinate system is the coordinate system shared by all items and activities which are grouped in a common IfcStructuralAnalysisModel . This coordinate system is established by SELF IfcProduct.ObjectPlacement . This coordinate system is not necessarily the same as the IfcProject s world coordinate system. The so called local coordinate system is a coordinate system local to a structural item connection or member . This coordinate system is established by a Representation attribute inherited from IfcProduct in conjunction with further use definitions and attributes of subtypes of IfcStructuralItem . Representation items in topology representations are always given within the ObjectPlacement , i.e. in so called global coordinates global with respect to the IfcStructuralAnalysisModel to which this item belongs . The usage of local coordinate systems is further defined in subtypes. Topology Use Definitions Instances of IfcStructuralItem shall have a topology representation. It includes a placement and a product representation. The IfcProductRepresentation shall be given by an item in a Representation of type IfcTopologyRepresentation . Local Placement The local placement for IfcStructuralItem is defined in its supertype IfcProduct . It is defined by the IfcLocalPlacement , which establishes a global coordinate system which shall be common to all items and activities in an IfcStructuralAnalysisModel . Topology Representation Instances of IfcStructuralItem shall have a topology representation given by an instance of a subtype of IfcTopologicalRepresentationItem , which should be the single item of IfcTopologyRepresentation.Items . Depending on the dimensionality of the structural item, one of the following types of toplogical representation items shall be used Point connections shall be represented by an IfcVertexPoint with an underlying IfcCartesianPoint . The Cartesian point is the reference point of the connection in the so called global coordinate system. The following labels are used in the IfcTopologyRepresentation RepresentationIdentifier Reference RepresentationType Vertex Curve members and curve connections shall either be represented by an IfcOrientedEdge , IfcEdgeCurve , or IfcEdge . The curve to which the IfcEdgeCurve or an IfcOrientedEdge s underlying IfcEdgeCurve refers to is the reference curve of the structural item in the global coordinate system. Start and end vertex of the edge shall be IfcVertexPoint s with underlying IfcCartesianPoint s. The following labels are used in the IfcTopologyRepresentation RepresentationIdentifier Reference RepresentationType Edge NOTE While an IfcEdge or IfcOrientedEdge with underlying IfcEdge does not provide an explicit underlying curve geometry, it may be used to imply an underlying straight line as reference curve with the origin of the curve parameter at the start vertex point. Surface members and surface connections shall be represented by an IfcFaceSurface . The underlying surface defines the reference surface of the structural surface item in the global coordiante system. All edges in the bounds of the face shall conform to the rules for edge representations of structural curve item. The following labels are used in the IfcTopologyRepresentation RepresentationIdentifier Reference RepresentationType Face The reference point, reference curve, or reference surface partially or completely defines the local coordinate system of the represented structural item according to the following rules. In all cases, The local x,y,z directions form a right handed Cartesian coordinate system. Structural point items The reference point in the representation is the origin of the local coordinate system of the structural item. The axes of the local coordiante system are either parallel with and directed like the so called global coordinate axes, or are oriented according to definitions at the respective subtype of IfcStructuralItem . Structural curve items The u parameter origin of the reference curve in the representation is the origin of the local coordinate system of the structural item. The local x axis is parallel with the tangent on the curve and directed like the u parameter direction. The local y and z axes are oriented according to definitions at the respective subtypes of IfcStructuralItem . Structural surface items The u,v parameter origin of the reference surface in the representation is the origin of the local coordinate system of the structural item. The local x and y directions follow the tangents on the surface and are in parallel with and directed like u and v respectively. The local z direction is in parallel with and directed like the surface normal. .spec head Informal Propositions 1. The ObjectPlacement s of all structural items which are grouped into the same instance of IfcStructuralAnalysisModel shall refer to the same instance of IfcObjectPlacement . NOTE This rule is necessary to achieve consistent topology representations. The topology representations of structural items in an analysis model are meant to share vertices and edges und must therefore have the same object placement. NOTE A structural item may be grouped into more than one analysis model. In this case, all these models must use the same instance of IfcObjectPlacement . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcProduct"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcProduct"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcConstructionResource is an abstract generalization of the different resources used in construction projects, mainly labour, material, equipment and product resources, plus subcontracted resources and aggregations such as a crew resource. A resource represents use of something and does not necessarily correspond to a single item such as a person or vehicle, but represents a pool of items having limited availability such as general labor or an equipment fleet. A resource can represent either a generic resource pool not having any task assignment or a task specific resource allocation having an IfcTask assignment . HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE Modified in to promote ResourceIdentifer and ResourceGroup renamed to LongDescription to supertype IfcResource and add attributes as described. .use head Declaration use definition A root level resource specifically IfcCrewResource or IfcSubContractResource is declared within the project by IfcRelDeclares where RelatingContext refers to the single IfcProject and RelatedObjects refers to one or more IfcConstructionResource , and other root level objects within the project. .use head Assignment use definition A resource may be assigned to an actor by IfcRelAssignsToActor where RelatingActor refers to an IfcActor and RelatedObjects refers to one or more IfcConstructionResource or other objects. Such relationship indicates the actor responsible for allocating the resource such as partitioning into task specific allocations, delegating to other actors, and or scheduling over time. Note that this assignment does not indicate the person or organization performing the work that is indicated by IfcRelAssignsToResource . The actor responsible for the resource may or may not be the same as any actor s performing work. A resource may be assigned to a control by IfcRelAssignsToControl where RelatingProduct refers to an IfcControl and RelatedObjects refers to one or more IfcConstructionResource or other objects. Most commonly an IfcWorkCalendar is assigned indicating availability of the resource, where such calendar is nested within a base calendar or an IfcWorkPlan which in turn is assigned to the IfcProject . A resource may be assigned to a group by IfcRelAssignsToGroup where RelatingGroup refers to an IfcGroup and RelatedObjects refers to one or more IfcConstructionResource or other objects. Most commonly an IfcAsset is assigned indicating the asset to be tracked, where such asset is nested within an IfcInventory which in turn is assigned to the IfcProject . A resource may be assigned to a product by IfcRelAssignsToProduct where RelatingProduct refers to an IfcProduct and RelatedObjects refers to one or more IfcConstructionResource or other objects. Most commonly an IfcElement subtype is assigned indicating the product to be constructed, where such product is connected to a spatial structure which in turn is aggregated within the IfcProject . A resource may be assigned to a process by IfcRelAssignsToProcess where RelatingProcess refers to an IfcProcess and RelatedObjects refers to one or more IfcConstructionResource or other objects. Most commonly an IfcTask is assigned indicating the task to be performed by the resource, where such task is nested within a summary task which in turn is assigned to the IfcProject . A resource may have assignments of other objects using IfcRelAssignsToResource where RelatingResource refers to the IfcConstructionResource and RelatedObjects refers to one or more objects such as IfcActor or IfcProduct subtypes. This relationship indicates specific objects assigned to fulfill resource usage. Figure 1 illustrates resource assignment. Assignment Use Definition .. .. .. .. .. .. figures ifcconstructionresource assignment.png Figure 1 Construction resource assignment use .use head Baseline use definition A resource may have any number of baselines defined using the relationship IfcRelDefinesByObject where RelatingObject is the current resource and RelatedObjects consists of multiple baseline resources, each representing a copy of the resource as it existed at an earlier point in time as shown in Figure 185. Each baseline IfcConstructionResource is identified by its nested IfcRelAssignsToControl relationship to an IfcWorkSchedule having PredefinedType BASELINE , IfcWorkSchedule.CreationDate indicating the date of the baseline, and IfcWorkSchedule.Name indicating the name of the baseline. Baseline Use Definition .. .. .. .. .. .. figures ifcconstructionresource baseline.png Figure 2 Construction resource baseline use bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcResource"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcResource"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An occupant is a type of actor that defines the form of occupancy of a property. The principal purpose of IfcOccupant is to determine the nature of occupancy of a property for a particular actor. All characteristics relating to the actor name and organization details are inherited from the IfcActor entity. HISTORY New entity in IFC2x bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcActor"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcActor"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A permit is a permission to perform work in places and on artifacts where regulatory, security or other access restrictions apply. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE Attribute PermitID renamed to Identification and promoted to supertype IfcControl , attributes PredefinedType , Status , and LongDescription added. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcControl"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcControl"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An asset is a uniquely identifiable grouping of elements acting as a single entity that has a financial value or that can be operated on as a single unit. An asset is generally the level of granularity at which maintenance operations are undertaken. An asset is a group that can contain one or more elements. Whilst the financial value of a component or element can be defined, financial value is also defined for accounting purposes at the level of the asset. There are a number of actors that can be associated with an asset, each actor having a role. Actors within the scope of the project are indicated using the IfcRelAssignsToActor .. .. ifckernel lexical ifcrelassignstoactor.htm relationship in which case roles should be defined through the IfcActorRole .. .. ifcactorresource lexical ifcactorrole.htm class otherwise principal actors are identified as attributes of the class. In the existence of both, direct attributes take precedence. There are a number of costs that can be associated with an asset, each cost having a role. These are specified through the OriginalValue , CurrentValue , TotalReplacementCost and DepreciatedValue attributes. HISTORY New entity in IFC2x. .change ifc2x4 IFC4 CHANGE All attributes made optional and date values changed to use IfcDate . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcAsset"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcAsset"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A building system is a group by which building elements are grouped according to a common function within the facility. The group IfcBuildingSystem defines the occurrence of a specialized system for use within the context of a building and finishing fabric. Important functionalities for the description of a building system are derived from supertypes From IfcSystem it inherits the ability to couple the building system via IfcRelServicesBuildings to one or more IfcSpatialElement subtypes as necessary. From IfcGroup it inherits the inverse attribute IsGroupedBy , pointing to the relationship class IfcRelAssignsToGroup . This allows to group building elements instances of IfcBuildingElement subtypes, IfcFurnishingElement subtype, IfcElementAssembly and IfcTransportElement . From IfcObjectDefinition it inherits the inverse attribute IsDecomposedBy pointing to the relationship class IfcRelAggregates . It provides the hierarchy between the separate partial building systems. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSystem"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSystem"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An inventory is a list of items within an enterprise. Various types of inventory can be included. These are identified by the range of values within the inventory type enumeration which includes space, asset, and furniture. User defined inventories can also be defined for lists of particular types of element such as may be required in operating and maintenance instructions. Such inventories should be constrained to contain a list of elements of a restricted type. There are a number of actors that can be associated with an inventory, each actor having a role. Actors within the scope of the project are indicated using the IfcRelAssignsToActor .. .. ifckernel lexical ifcrelassignstoactor.htm relationship in which case roles should be defined through the IfcActorRole .. .. ifcactorresource lexical ifcactorrole.htm class otherwise principal actors are identified as attributes of the class. In the existence of both, direct attributes take precedence. There are a number of costs that can be associated with an inventory, each cost having a role. These are specified through the CurrentValue and OriginalValue attributes. HISTORY New entity in IFC2.0. .change ifc2x4 IFC4 CHANGE All attributes optional, Where Rule removed. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcInventory"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcInventory"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A load case is a load group, commonly used to group loads from the same action source. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStructuralLoadGroup"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStructuralLoadGroup"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Instances of the entity IfcStructuralResultGroup are used to group results of structural analysis calculations and to capture the connection to the underlying basic load group. The basic functionality for grouping inherited from IfcGroup is used to collect instances from IfcStructuralReaction or its respective subclasses. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE WHERE rule added. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStructuralResultGroup"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStructuralResultGroup"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcStructuralAnalysisModel is used to assemble all information needed to represent a structural analysis model. It encompasses certain general properties such as analysis type , references to all contained structural members, structural supports or connections, as well as loads and the respective load results. Important functionalities for the description of an analysis model are derived from existing IFC entities From IfcSystem it inherits the ability to couple the built system via IfcRelReferencedInSpatialStructure to one or more IfcSpatialElement subtypes as necessary. From IfcGroup it inherits the inverse attribute IsGroupedBy, pointing to the relationship class IfcRelAssignsToGroup . This allows the grouping of structural members instances of IfcStructuralMember , and supports instances of IfcStructuralConnection which belong to a specific analysis model. NOTE Loads as instances of IfcStructuralAction are not included through IsGroupedBy. Loads are assigned through the LoadedBy attribute relationship, using load groups as a grouping mechanism. Only top level load groups should be referenced via LoadedBy, i.e. load combinations if any load combinations exist, or load cases if no load combinations exist in this analysis model. NOTE Results as instances of IfcStructuralReaction are not included through IsGroupedBy. Results are assigned through the HasResults attribute relationship, using result groups as a grouping mechanism. From IfcObjectDefinition it inherits the inverse attribute IsDecomposedBy pointing to the relationship class IfcRelAggregates. It provides the hierarchy between the separate partial analysis models. HISTORY New entity in IFC2x2. Informal Propositions If one or more structural item instance of a subtype of IfcStructuralItem is grouped into an IfcStructuralAnalysisModel, the attribute SharedPlacement shall be provided with a value. The ObjectPlacement of all structural items which are grouped into the same instance of IfcStructuralAnalysisModel shall refer to the same instance of IfcObjectPlacement as IfcStructuralAnalysisModel.SharedPlacement. NOTE This rule is necessary to achieve consistent topology representations. The topology representations of structural items in an analysis model are meant to share vertices and edges und must therefore have the same object placement. NOTE A structural item may be grouped into more than one analysis model. In this case, all these models must use the same instance of IfcObjectPlacement. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStructuralAnalysisModel"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStructuralAnalysisModel"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A built system is a group by which built elements are grouped according to a common function within the facility. The group IfcBuiltSystem defines the occurrence of a specialized system for use within the context of a facilities physical or finishing fabric. Important functionalities for the description of a built system are derived from supertypes From IfcSystem it inherits the ability to couple the built system via IfcRelReferencedInSpatialStructure to one or more IfcSpatialElement subtypes as necessary. From IfcGroup it inherits the inverse attribute IsGroupedBy, pointing to the relationship class IfcRelAssignsToGroup . This allows the grouping of built elements instances of IfcBuiltElement subtypes, IfcFurnishingElement subtypes, IfcElementAssembly and IfcTransportElement . From IfcObjectDefinition it inherits the inverse attribute IsDecomposedBy pointing to the relationship class IfcRelAggregates. It provides the hierarchy between the separate partial building systems.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcBuiltSystem"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcBuiltSystem"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A distribution circuit is a partition of a distribution system that is conditionally switched such as an electrical circuit. HISTORY New entity in IFC4. .change ifc2x4 IFC4 CHANGE For electrical power systems, IfcElectricalCircuit has been used for low voltage 12 1000 V power circuits and has been replaced by IfcDistributionCircuit in IFC4 IfcDistributionSystem with PredefinedType ELECTRICAL should be used for overall power systems, and IfcDistributionCircuit with PredefinedType ELECTRICAL should be used for each switched circuit. Composition Use Definition An IfcDistributionCircuit may aggregate an IfcDistributionSystem using the IfcRelAggregates relationship where RelatingObject refers to the IfcDistributionSystem and RelatedObjects includes one or more IfcDistributionCircuit groups. An IfcDistributionCircuit may be aggregated into sub circuits using the IfcRelAggregates relationship where RelatingObject refers to the parent IfcDistributionCircuit and RelatedObjects refers to one or more IfcDistributionCircuit sub circuits. Assignment Use Definition An IfcDistributionCircuit should be assigned to an IfcDistributionPort on an IfcFlowController element indicating the host or origination of the system using the IfcRelAssignsToProduct relationship. Each device whose operation is conditional based upon the state of the circuit is assigned to the IfcDistributionCircuit via the IfcRelAssignsToGroup relationship. An IfcDistributionElement may belong to multiple systems or circuits, however only one IfcDistributionSystem or IfcDistributionCircuit of a particular PredefinedType . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDistributionSystem"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDistributionSystem"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A zone is S a group of spaces, partial spaces or other zones. Zone structures may not be hierarchical in contrary to the spatial structure of a project see IfcSpatialStructureElement , i.e. one individual IfcSpace may be associated with zero, one, or several IfcZone s. IfcSpace s are grouped into an IfcZone by using the objectified relationship IfcRelAssignsToGroup as specified at the supertype IfcGroup . NOTE S Certain use cases may restrict the freedom of non hierarchical relationships. In some building service use cases the zone denotes a S view based delimited volume for the purpose of analysis and calculation. This type of zone cannot overlap with respect to that analysis, but may overlap otherwise. HISTORY New entity in IFC1.0 .change ifc2x4 IFC4 CHANGE The entity is now subtyped from IfcSystem not its supertype IfcGroup with upward compatibility for file based exchange. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcZone"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcZone"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A building system is a group by which building elements are grouped according to a common function within the facility. The group IfcBuildingSystem defines the occurrence of a specialized system for use within the context of a building and finishing fabric. Important functionalities for the description of a building system are derived from supertypes From IfcSystem it inherits the ability to couple the building system via IfcRelServicesBuildings to one or more IfcSpatialElement subtypes as necessary. From IfcGroup it inherits the inverse attribute IsGroupedBy , pointing to the relationship class IfcRelAssignsToGroup . This allows to group building elements instances of IfcBuildingElement subtypes, IfcFurnishingElement subtype, IfcElementAssembly and IfcTransportElement . From IfcObjectDefinition it inherits the inverse attribute IsDecomposedBy pointing to the relationship class IfcRelAggregates . It provides the hierarchy between the separate partial building systems. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcBuildingSystem"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcBuildingSystem"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A distribution circuit is a partition of a distribution system that is conditionally switched such as an electrical circuit. HISTORY New entity in IFC4. .change ifc2x4 IFC4 CHANGE For electrical power systems, IfcElectricalCircuit has been used for low voltage 12 1000 V power circuits and has been replaced by IfcDistributionCircuit in IFC4 IfcDistributionSystem with PredefinedType ELECTRICAL should be used for overall power systems, and IfcDistributionCircuit with PredefinedType ELECTRICAL should be used for each switched circuit. Composition Use Definition An IfcDistributionCircuit may aggregate an IfcDistributionSystem using the IfcRelAggregates relationship where RelatingObject refers to the IfcDistributionSystem and RelatedObjects includes one or more IfcDistributionCircuit groups. An IfcDistributionCircuit may be aggregated into sub circuits using the IfcRelAggregates relationship where RelatingObject refers to the parent IfcDistributionCircuit and RelatedObjects refers to one or more IfcDistributionCircuit sub circuits. Assignment Use Definition An IfcDistributionCircuit should be assigned to an IfcDistributionPort on an IfcFlowController element indicating the host or origination of the system using the IfcRelAssignsToProduct relationship. Each device whose operation is conditional based upon the state of the circuit is assigned to the IfcDistributionCircuit via the IfcRelAssignsToGroup relationship. An IfcDistributionElement may belong to multiple systems or circuits, however only one IfcDistributionSystem or IfcDistributionCircuit of a particular PredefinedType . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDistributionCircuit"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDistributionCircuit"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A load case is a load group, commonly used to group loads from the same action source. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStructuralLoadCase"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStructuralLoadCase"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An IfcEvent is something that happens that triggers an action or response. HISTORY New entity in IFC4 .use head Use definitions IfcEvent is used to capture information about particular things that happen or that may happen. Particularly used in work plans or process maps they identify e.g. a point at which a message containing information may be issued or at which a rule or constraint is invoked. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcEvent"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcEvent"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An IfcProcedure is a logical set of actions to be taken in response to an event or to cause an event to occur. HISTORY New entity in IFC2x2 .change ifc2x4 IFC4 CHANGE ProcedureType renamed to PredefinedType and made optional upward compatible . Where rules WR1 and WR2 have been removed. .use head Use definitions IfcProcedure is used to capture information about stepped processes such as calibration, start stop procedures for equipment items, designated actions to take in the event of an emergency etc. A procedure is not a task, but may describe a set of tasks and their order of occurrence in response to or to cause an event. As shown in Figure 11, IfcProcedure does not restrict anything but describes specific steps of how something should happen. While a procedure does control restrict in the sense of indicating this is how the task should be performed by nature of describing inner detail, this is not different than parts of a product indicating this is how the parts should be assembled . Consequently, it doesn t restrict the outer item as a whole but provides inner detail of the item. procedure example .. .. .. .. .. .. figures ifcprocedure example.png Figure 1 Procedure relationships bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcProcedure"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcProcedure"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An IfcTask is an identifiable unit of work to be carried out in a construction project. A task is typically used to describe an activity for the construction or installation of products, but is not limited to these types. For example it might be used to describe design processes, move operations and other design, construction and operation related activities as well. Quantities of resources consumed by the task are dealt with by defining the IfcElementQuantity for the resource and not at the instance of IfcTask . HISTORY New entity in IFC1.0. Renamed from IfcWorkTask in IFC2x. .change ifc2x4 IFC4 CHANGE Attributes TaskTime and PredefinedType added. IfcMove and IfcOrderRequest has been removed in IFC4 and are now represented by IfcTask . IfcRelAssignsTasks relationship has been removed as well. .use head Attribute use definition Each occurrence of IfcTask is given a name that is indicative of its content IfcRoot.Name . A textual description of the task may be provided and this may be further elaborated by a narrative long description IfcProcess.LongDescription . A work method may be declared for the method of work used in carrying out a task. A task is identified as being either a milestone task or not. A milestone task is defined by the marker IsMilestone . and has no duration. A status and priority for each task may also be set. .use head Time and duration use definition Compared to previous IFC releases, basic task time information scheduled start time, scheduled finish time, duration is now directly attached to IfcTask through the TaskTime attribute. Regular tasks are defined through IfcTaskTime . Recurring tasks are defined through IfcTaskTimeRecurring . In case a regular task is derived from a recurring task both tasks should be linked together through a IfcRelNests relationship, where IfcRelNests.IsNestedBy points to the recurring task and IfcRelNests.Nests points to all regular tasks that have been derived from the recurring task. .use head Representation of other activities The use definitions for IfcTask have been generalised to represent other activities as well, including activities that had been defined by own entities in previous IFC releases. This includes Order actions Move operations IfcTask represents an order that might be carried out by a Helpdesk acting the role of interface for the organization between the facility user and the functional requirement of fulfilling their needs. The actual task represented by the IfcTask entity is turning a request into an order and initiating the action that will enable the order to be completed. The IfcProjectOrder or one of its subtypes including maintenance work order, is related to the IfcTask using IfcRelAssignsToControl . IfcTask can also be used to describe an activity that moves people, groups within an organization or complete organizations together with their associated furniture and equipment from one place to another. It thus replaces the previous IFC entity IfcMove. The functionality is represented in IfcTask as follows Move from The place from which actors and their associated equipment are moving. Use IfcRelAssignsToProcess where RelatingProcess points to the task and RelatedObjects holds the location s from which to move. Move to The place to which actors and their associated equipment are moving. Use IfcRelAssignsToProduct where RelatedObjects points to the task s and RelatingProduct points to the location to which to move. Punch list A list of points concerning a move that require attention. Use LongDescription or else identify sub tasks to track punch list items individually via IfcRelNests . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcTask"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcTask"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The external spatial structure element is an abstract entity provided for different kind of external spaces, regions, and volumes. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSpatialElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSpatialElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcProxy is intended to be a kind of a container for wrapping objects which are defined by associated properties, which may or may not have a geometric representation and placement in space. A proxy may have a semantic meaning, defined by the Name attribute, and property definitions, attached through the property assignment relationship, which definition may be outside of the definitions given by the current release of IFC. The ProxyType may give an indication to which high level semantic breakdown of object the semantic definition of the proxy relates to. the Tag attribute may be used to assign a human or system interpretable identifier such as a serial number or bar code . NOTE Given that only a limited number of semantic constructs can be formally defined within IFC and it will never be possible to define all , there has to be a mechanism for capturing those constructs that are not yet defined by IFC. NOTE Product proxies are a mechanism that allows to exchange data that is part of the project but not necessarily part of the IFC model. Those proxies may have geometric representations assigned. HISTORY New entity in IFC1.5. .deprecated DEPRECATION The entity is deprecated and shall not be used. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcProxy"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcProxy"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "This IfcDistributionElement is a generalization of all elements that participate in a distribution system. Typical examples of IfcDistributionElement s are among others building service elements within a heating systems building service elements within a cooling system building service elements within a ventilation system building service elements within a plumbing system building service elements within a drainage system electrical elements elements within a communication network within a sensor monitoring network The IfcDistributionElement is further specialized in the IFC specification. Direct instantiation of IfcDistributionElement without an assigned subtype of IfcDistributionElementType provides the meaning of an distribution element proxy. HISTORY New entity in IFC1.5. .change ifc2x4 IFC4 CHANGE The entity is marked as deprecated for instantiation will be made ABSTRACT in future releases. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcReferent defines a position at a particular offset along an alignment curve. Referents may be used for several scenarios positioning physical elements at common locations along an alignment curve e.g. bridge piers indicating transitions for cross sections e.g. beginning of curvature where road is relatively flat, maximum curvature having super elevated cross slope to accomodate design speed indicating broken chainage where distance measurements reset or reverse directions indicating domain specific design parameters via property sets at locations along an alignment curve bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcPositioningElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcPositioningElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A distribution port is an inlet or outlet of a product through which a particular substance may flow. Distribution ports are used for passage of solid, liquid, or gas substances, as well as electricity for power or communications. Flow segments pipes, ducts, cables may be used to connect ports across products. Distribution ports are defined by system type and flow direction such that for two ports to be connected, they must share the same system type and have opposite flow directions one side being a SOURCE and the other being a SINK . Ports are similar to openings in that they do not have any visible geometry such geometry is captured at the shape representation of the enclosing element or element type. Ports may have placement that indicates the position and orientation of the connection. Ports are assigned the distribution systems in order to indicate its role in a particular system, e.g. cold water inlet. HISTORY New entity in IFC2x2 .change ifc2x4 IFC4 CHANGE Ports are now related to products and product types using the IfcRelNests relationship use of IfcRelConnectsPortToElement is now reserved for dynamically attached ports such as drilling a hole in a tank . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcPort"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcPort"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An annotation is an information element within the geometric and spatial context of a project, that adds a note or meaning to the objects which constitutes the project model. Annotations include additional points, curves, text, dimensioning, hatching and other forms of graphical notes. It also includes virtual or symbolic representations of additional model components, not representing products or spatial structures, such as event elements, survey points, contour lines or similar. NOTE Additional presentation information often 2D such as tag number or hatching, that is directly related to a particular product representation is included within the IfcProductDefinitionShape having various IfcShapeRepresentation s of the IfcElement and its subtypes . Only those presentation information, that cannot be directly related to a single product, have to be wrapped within the IfcAnnotation. If available, the annotation should be related to the spatial context of the project, by containing the annotation within the appropriate level of the building structure site, facility, facility part or building, storey, or space . This is handled by the IfcRelContainedInSpatialStructure relationship. The IfcAnnotation can provide specific 0D, 1D, and 2D geometric items as representation of the annotation, offering annotation point, curves, and surfaces. In addition to the predefined type values in IfcAnnotationTypeEnum, the following values can be used for the ObjectType with PredefinedType attribute value USERDEFINED . Annotation point is an annotation provided by a point that has additional semantic. The inherited attribute ObjectType should be used to capture the type of point annotation, some suggested values are SurveyPoint A single survey point represented by a Cartesian point. A property set may add the conditions method, accuracy, etc. to the survey point . SurveyArea A set of survey points represented by Cartesian point. These coordinates are determined relative to the coordinates of a reference point, which acts as the datum for the survey. Properties attached apply equally to all points. The difference in elevation of the survey points enables terrain to be determined. Annotation curve is an annotation provided by a curve that has additional semantic. The inherited attribute ObjectType should be used to capture the type of curve annotation, some suggested values are ContourLine A line of constant elevation typically used on geographic maps where the spacing of lines at constant intervals of elevation may be used as an indication of slope. IsoBar A line of constant pressure typically used on weather maps or to show pressure gradient in spaces, chambers or externally. IsoLux A line of constant illumination typically used to show the distribution of illumination levels and or day lighting in a space or externally. IsoTherm A line of constant temperature typically used to show the distribution and effect of heating or cooling within a space or to show temperature distribution on a geographic map. Annotation surface is an annotation provided by a surface that has additional semantic. The inherited attribute ObjectType should be used to capture the type of surface annotation, some suggested values are SurveyArea A surface patch based on survey points. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcAnnotation"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcAnnotation"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A structural action is a structural activity that acts upon a structural item or building element. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE Attribute DestabilizingLoad made optional. Attribute CausedBy deleted use IfcRelAssignsToProduct via ReferencedBy instead. .use head Relationship use definition Structural actions are grouped into either an IfcStructuralLoadGroup of predefined type LOAD GROUP or, more often, an IfcStructuralLoadCase . This is accomplished via the inverse relationship HasAssignments and an IfcRelAssignsToGroup relationship object. IfcStructuralLoadGroup.LoadGroupFor or IfcStructuralLoadCase.LoadGroupFor respectively refers to the structural analysis model s in which the loads are used. It is furthermore possible to establish relationships between actions in one analysis model and reactions in another analysis model which cause the actions. For example, a support reaction from one structural system may be taken over as a load onto another supporting structural system. This is expressed by means of the inverse relationship ReferencedBy of the action and an IfcRelAssignsToProduct relationship object. IfcRelAssignsToProduct.Name is set to Causes and IfcRelAssignsToProduct.RelatedObjects refers to an instance of a subtype of IfcStructuralReaction . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStructuralActivity"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStructuralActivity"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The abstract entity IfcStructuralMember is the superclass of all structural items which represent the idealized structural behavior of building elements. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE Use definitions moved to supertype and subtypes. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStructuralItem"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStructuralItem"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The building storey has an elevation and typically represents a nearly horizontal aggregation of spaces that are vertically bound. A storey is if specified associated to a building. A storey may span over several connected storeys. Therefore storey complex provides for a collection of storeys included in a building. A storey can also be decomposed in horizontical parts, where each part defines a partial storey. This is defined by the composition type attribute of the supertype IfcSpatialStructureElements which is interpreted as follow COMPLEX building storey complex ELEMENT building storey PARTIAL partial building storey EXAMPLE In split level houses, a storey is split into two or more partial storeys, each with a different elevation. It can be handled by defining a storey, which includes two or more partial storeys with the individual elevations. The IfcBuildingStorey is used to build the spatial structure of a building that serves as the primary project breakdown and is required to be hierarchical . The spatial structure elements are linked together by using the objectified relationship IfcRelAggregates . Figure 1 shows the IfcBuildingStorey as part of the s patial structure. It also serves as the spatial container for building and other elements. NOTE Detailed requirements on mandatory element containment and placement structure relationships are given in view definitions and implementer agreements. IfcBuildingStorey as part of a spatial structure .. .. .. .. .. .. figures ifcbuildingstorey spatialstructure.png Figure 1 Building storey composition Figure 2 describes the heights and elevations of the IfcBuildingStorey . elevation of storey provided by IfcBuildingStorey.Elevation as a local height value relative to IfcBuilding.ElevationOfRefHeight , it is usually the top of construction slab net height of storey, also referred to as total height or system height top of construction slab to top of construction slab above provided by BaseQuantity with Name GrossHeight net height of storey top of construction slab to bottom of construction slab above provided by BaseQuantity with Name NetHeight space heights .. .. .. .. .. .. figures ifcbuildingstorey heights.png Figure 2 Building storey elevations HISTORY New entity in IFC1.0 bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSpatialStructureElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSpatialStructureElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A spatial zone is a non hierarchical and potentially overlapping decomposition of the project under some functional consideration. A spatial zone might be used to represent a thermal zone, a construction zone, a lighting zone, a usable area zone. A spatial zone might have its independent placement and shape representation. The IfcSpatialZone inherits and declares these attributes that shall have the following meaning Name A number or designator provided by the user or system for the spatial element, e.g. a space number 1 003 , could also be a running number provided by default by the application LongName Name of the spatial element provided by the user, e.g. a space name Office . Description Any additional description provided by the user, e.g. a space description Corner office with habour view . ObjectType reserved for typing of spatial elements in case of PredefinedType .USERDEFINED., restrictions on applicable values might be published in view definitions or implementer agreements. Physical elements that are referenced by this spatial zone are related using the IfcRelReferencedInSpatialStructure relationship as it is a non hierarchical assignment in addition to the hierarchical spatial containment within a subtype of IfcSpatialStructureElement. Also spaces, that referenced by this spatial zone are related using the IfcRelReferencedInSpatialStructure relationship. The IfcSpatialZone itself can also be referenced by another spatial element using IfcRelReferencedInSpatialStructure . NOTE The IfcSpatialZone is different to the IfcZone entity by allowing an own placement and shape representation, whereas IfcZone is only a grouping of IfcSpace s. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSpatialZone"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSpatialZone"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The external spatial element defines external regions at the building site. Those regions can be defined logically for example, an instance of IfcExternalSpatialElement could represent the air space around the building without having an own shape representation, or physically for example, an instance of IfcExternalSpatialElement could represent the sloping ground around the building to identify the part of the external building envelop that is below ground. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcExternalSpatialStructureElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcExternalSpatialStructureElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A space represents an area or volume bounded actually or theoretically. Spaces are areas or volumes that provide for certain functions within a building. A space is associated to a building storey or in case of exterior spaces to a site . A space may span over several connected spaces. Therefore a space group provides for a collection of spaces included in a storey. A space can also be decomposed in parts, where each part defines a partial space. This is defined by the CompositionType attribute of the supertype IfcSpatialStructureElement which is interpreted as follow COMPLEX space group ELEMENT space PARTIAL partial space NOTE View definitions and implementation agreements may restrict spaces with CompositionType ELEMENT to be non overlapping. The IfcSpace is used to build the spatial structure of a building that serves as the primary project breakdown and is required to be hierarchical . The spatial structure elements are linked together by using the objectified relationship IfcRelAggregates. Figure 187 shows the IfcSpace as part of the spatial structure. It also serves as the spatial container for space related elements. NOTE Detailed requirements on mandatory element containment and placement structure relationships are given in view definitions and implementer agreements. space composition Figure 187 Space composition The following guidelines should apply for using the Name, Description, LongName and ObjectType attributes. Name holds the unique name or space number from the plan. Description holds any additional information field the user may have specified, there are no further recommendations. LongName holds the full name of the space, it is often used in addition to the Name , if a number is assigned to the room, then the descriptive name is exchanged as LongName. ObjectType holds the space type, i.e. usually the functional category of the space . NOTE In cases of inconsistency between the geometric representation of the IfcSpace and the combined geometric representations of the surrounding IfcRelSpaceBoundary , the geometric representation of the space should take priority over the geometric representation of the surrounding space boundaries. Figure 188 describes the heights and elevations of the IfcSpace. elevation of the space top of construction slab equals elevation of storey provided by IfcBuildingStorey.Elevation relative to IfcBuilding.ElevationOfRefHeight elevation of the space flooring top of flooring on top of slab provided by IfcSpace.ElevationWithFlooring relative to IfcBuilding.ElevationOfRefHeight height of space top of slab below to bottom of slab above provided by BaseQuantity with Name Height floor height of space top of slab below to top of flooring provided by BaseQuantity with Name FinishFloorHeight net height of space top of flooring to bottom of suspended ceiling provided by BaseQuantity with Name FinishCeilingHeight Space elevations Figure 188 Space elevations HISTORY New entity in IFC1.0 bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSpace"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSpace"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A Bridge is civil engineering works that affords passage to pedestrians, animals, vehicles, and services above obstacles or between two points at a height above ground. NOTE Definition from ISO 6707 1 2014 Civil engineering works that affords passage to pedestrians, animals, vehicles, and services above obstacles or between two points at a height above ground. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFacility"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFacility"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A site is a defined area of land, possibly covered with water, on which the project construction is to be completed. A site may be used to erect, retrofit or turn down building s , or for other construction related developments. NOTE Term according to ISO6707 1 vocabulary area of land or water where construction work or other development is undertaken . A site may include a definition of the single geographic reference point for this site global position using WGS84 with Longitude, Latitude and Elevation . The precision is provided up to millionth of a second and it provides an absolute placement in relation to the real world as used in exchange with geospatial information systems. If asserted, the Longitude, Latitude and Elevation establish the point in WGS84 where the point 0.,0.,0. of the LocalPlacement of IfcSite is situated. The geometrical placement of the site, defined by the IfcLocalPlacement, shall be always relative to the spatial structure element, in which this site is included, or absolute, i.e. to the world coordinate system, as established by the geometric representation context of the project. The world coordinate system, established at the IfcProject.RepresentationContexts, may include a definition of the true north within the XY plane of the world coordinate system, if provided, it can be obtained at IfcGeometricRepresentationContext.TrueNorth. A project may span over several connected or disconnected sites. Therefore site complex provides for a collection of sites included in a project. A site can also be decomposed in parts, where each part defines a site section. This is defined by the composition type attribute of the supertype IfcSpatialStructureElements which is interpreted as follow COMPLEX site complex ELEMENT site PARTIAL site section The IfcSite is used to build the spatial structure of a building that serves as the primary project breakdown and is required to be hierarchical . Figure 181 shows the IfcSite as part of the spatial structure. In addition to the logical spatial structure, also the placement hierarchy is shown. In this example the spatial structure hierarchy and the placement hierarchy are identical. NOTE Detailed requirements on mandatory element containment and placement structure relationships are given in view definitions and implementer agreements. site composition Figure 181 Site composition Figure 182 describes the heights and elevations of the IfcSite. It is used to provide the geographic longitude, latitude, and height above sea level for the origin of the site. The origin of the site is the local placement. The provision of longitude, latitude, height at the IfcSite for georeferencing is provided for upward compatibility reasons. It requires a single instance of IfcSite and WGS84 as coordinate reference system. For exact georeferencing or referencing to any other geographic coordinate system other than WSG84 the entities IfcCoordinateReferenceSystem and IfcMapConversion have to be used to define an exact mapping of the project engineering coordinate system to the geographic or map coordinate system. reference height of site is provided by IfcSite.RefElevation, it is given according to the height datum used at this location. the reference height of each building situated at the site is given against the same height datum used at this location. the elevations of each storey belonging to each building are given as local height relative to the reference height of the building. Site elevations Figure 182 Site elevations HISTORY New entity in IFC1.0. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSite"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSite"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "In a bridge, BridgePart as subtype of FacilityPart represents the parts in breakdown structure according to local practices e.g. Superstructure, Substructure, Foundation , and these can also be broken down further e.g. Substructure as whole can be COMPLEX, while each abutment and pier would be ELEMENT, and a pier can be composed of separate towers PARTIAL . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFacilityPart"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFacilityPart"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The building storey has an elevation and typically represents a nearly horizontal aggregation of spaces that are vertically bound. A storey is if specified associated to a building. A storey may span over several connected storeys. Therefore storey complex provides for a collection of storeys included in a building. A storey can also be decomposed in horizontical parts, where each part defines a partial storey. This is defined by the composition type attribute of the supertype IfcSpatialStructureElements which is interpreted as follow COMPLEX building storey complex ELEMENT building storey PARTIAL partial building storey EXAMPLE In split level houses, a storey is split into two or more partial storeys, each with a different elevation. It can be handled by defining a storey, which includes two or more partial storeys with the individual elevations. The IfcBuildingStorey is used to build the spatial structure of a building that serves as the primary project breakdown and is required to be hierarchical . The spatial structure elements are linked together by using the objectified relationship IfcRelAggregates . Figure 1 shows the IfcBuildingStorey as part of the s patial structure. It also serves as the spatial container for building and other elements. NOTE Detailed requirements on mandatory element containment and placement structure relationships are given in view definitions and implementer agreements. IfcBuildingStorey as part of a spatial structure .. .. .. .. .. .. figures ifcbuildingstorey spatialstructure.png Figure 1 Building storey composition Figure 2 describes the heights and elevations of the IfcBuildingStorey . elevation of storey provided by IfcBuildingStorey.Elevation as a local height value relative to IfcBuilding.ElevationOfRefHeight , it is usually the top of construction slab net height of storey, also referred to as total height or system height top of construction slab to top of construction slab above provided by BaseQuantity with Name GrossHeight net height of storey top of construction slab to bottom of construction slab above provided by BaseQuantity with Name NetHeight space heights .. .. .. .. .. .. figures ifcbuildingstorey heights.png Figure 2 Building storey elevations HISTORY New entity in IFC1.0 bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcBuildingStorey"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcBuildingStorey"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An IfcRailway is a spatial structure element as a route from one location to another for guided passage of wheeled vehicles on rails. An IfcRailway acts as a basic spatial structure element that supports to break down a railway project into manageable parts. Note Definition according to ISO 6706 2017 national or regional transport system for guided passage of wheeled vehicles on rails.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRailway"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRailway"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A marine facility represents any major structure or entity that is specific to the ports and waterways domain. examples of this include quays, jetties, shipyards, breakwaters etc.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcMarineFacility"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcMarineFacility"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A building represents a structure that provides shelter for its occupants or contents and stands in one place. The building is also used to provide a basic element within the spatial structure hierarchy for the components of a building project together with site, storey, and space . NOTE Definition from ISO 6707 1 Construction work that has the provision of shelter for its occupants or contents as one of its main purpose and is normally designed to stand permanently in one place. A building is if specified associated to a site. A building may span over several connected or disconnected buildings. Therefore building complex provides for a collection of buildings included in a site. A building can also be decomposed in vertical parts, where each part defines a building section. This is defined by the composition type attribute of the supertype IfcSpatialStructureElements which is interpreted as follow COMPLEX building complex ELEMENT building PARTIAL building section The IfcBuilding is used to build the spatial structure of a building that serves as the primary project breakdown and is required to be hierarchical . The spatial structure elements are linked together by using the objectified relationship IfcRelAggregates. Figure 150 shows the IfcBuilding as part of the spatial structure. It also serves as the spatial container for building and other elements. NOTE Detailed requirements on mandatory element containment and placement structure relationships are given in view definitions and implementer agreements. Building composition Figure 150 Building composition Systems, such as building service or electrical distribution systems, zonal systems, or structural analysis systems, relate to IfcBuilding by using the objectified relationship IfcRelReferencedInSpatialStructure. Figure 151 describes the heights and elevations of the IfcBuilding . It is used to provide the height above sea level of the project height datum for this building, that is, the internal height 0.00. The height 0.00 is often used as a building internal reference height and equal to the floor finish level of the ground floor. base elevation of building provided by IfcBuilding.ElevationOfRefHeight, it is usually the top of construction slab. base elevation of terrain at the perimeter of the building provided by IfcBuilding.ElevationOfTerrain, it is usually the minimum elevation is sloped terrain total height of building, also referred to as ridge height top of roof structure, e.g the ridge against terrain provided by BaseQuantity with Name TotalHeight eaves height of building base of roof structure, e.g the eaves against terrain provided by BaseQuantity with Name EavesHeight building elevations Figure 2 Building elevations HISTORY New entity in IFC1.0. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcBuilding"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcBuilding"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A route built on land to allow travel from one location to another, including highways, streets, cycle and foot paths, but excluding railways. As a type of Facility, Road provides the basic element in the project structure hierarchy for the components of a road project i.e. any undertaking such as design, construction or maintenance . NOTE Definition from ISO 6707 1 Way mainly for vehicles. NOTE Definition from PIARC Line of communication travelled way using a stabilized base other than rails or air strips, primarily for the use of road motor vehicles running on their own wheel.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRoad"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRoad"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A Bridge is civil engineering works that affords passage to pedestrians, animals, vehicles, and services above obstacles or between two points at a height above ground. NOTE Definition from ISO 6707 1 2014 Civil engineering works that affords passage to pedestrians, animals, vehicles, and services above obstacles or between two points at a height above ground. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcBridge"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcBridge"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "In a bridge, BridgePart as subtype of FacilityPart represents the parts in breakdown structure according to local practices e.g. Superstructure, Substructure, Foundation , and these can also be broken down further e.g. Substructure as whole can be COMPLEX, while each abutment and pier would be ELEMENT, and a pier can be composed of separate towers PARTIAL . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcBridgePart"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcBridgePart"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The external spatial element defines external regions at the building site. Those regions can be defined logically for example, an instance of IfcExternalSpatialElement could represent the air space around the building without having an own shape representation, or physically for example, an instance of IfcExternalSpatialElement could represent the sloping ground around the building to identify the part of the external building envelop that is below ground. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcExternalSpatialElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcExternalSpatialElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A built element whose length greatly exceeds its thickness and often also its width, usually of a single material laid on site on top of another horizontal or nearly horizontal built element. A course is distinctive from a earthworks element in that a course is a graded granular which can be bound or unbound material that is generally processed in some fashion, where as earthworks elements are soil earthen based structure that can be formed by removal and transport of general ground material. Structurally a course does not have capacity to carry loads over open span, or to be removed or replaced as a single unit. examples of courses include Graded aggregate layers Graded sand layers Cement bounded material CBM Asphalt layers",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcBuiltElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcBuiltElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A impact protection device is a component used to protect other built elements from kinetic damage. impact protection devices currently come in 3 different varieties A vibration damper used to minimize the effects of vibration in a structure by dissipating kinetic energy. The damper may be passive elastic, frictional, inertia or active in a system using sensors and actuators . A vibration isolator is a device used to minimize the effects of vibration transmissibility in a structure. Impact devices that dissipate kinetic energy from impacting elements such as vehicles by deformation or elastic mechanics.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcElementComponent"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcElementComponent"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcFeatureElementSubtraction is specialization of the general feature element, that represents an existence dependent elements which modifies the shape and appearance of the associated master element. The IfcFeatureElementSubtraction offers the ability to handle shape modifiers as semantic objects within the IFC object model that subtract from the shape of the master element. NOTE A single subtraction feature such as the subtype IfcOpeningElement is assigned by a single subtraction relationship IfcRelVoidsElement to one occurrences of IfcElement . It establishes a 1 1 relationship between the opening and the element. An element may have several IfcRelVoidsElement relationships, enabling several voids. The voiding relationship between a master element and a subtraction feature is geometrically resolved by a Boolean difference operation. The local placement for IfcFeatureElementSubtraction is defined in its supertype IfcProduct . It is defined by the IfcLocalPlacement , which defines the local coordinate system that is referenced by all geometric representations. The local placement is always defined in relation to the local placement of the building element from which the feature element substration is substracted The PlacementRelTo relationship of IfcLocalPlacement shall point if given to the local placement of the same IfcElement , which is used in the VoidsElements.RelatingElement inverse attribute. HISTORY New entity in IFC2x2. .change ifc2x2 IFC2x2 CHANGE The entity is introduced as an upward compatible extension of the IFC2x platform. It is an intermediate abstract supertype without defining its own explicit attributes. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFeatureElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFeatureElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A virtual element is a special element used to provide imaginary boundaries, such as between two adjacent, but not separated, spaces. Virtual elements are usually not displayed and does not have quantities and other measures. Therefore IfcVirtualElement does not have material information and quantities attached. NOTE The main purpose of IfcVirtualElement is the provision of a virtual space boundary. The IfcVirtualElement may provide the 2D curve or 3D surface representation of the virtual space connection and is referenced by two instances of IfcRelSpaceBoundary , each pointing to one of the two adjacent IfcSpaces . The IfcVirtualElement is mainly used to define a virtual boundary between two spaces. Figure 1 describes how to use IfcRelSpaceBoundary in conjunction with IfcVirtualElement to define space boundaries. space boundary .. .. .. .. .. .. figures ifcvirtualelement spaceboundaries.png Figure 1 Virtual element space boundaries HISTORY New entity in IFC2x2 Addendum. .change ifc2x3 IFC2x2 CHANGE The entity IfcVirtualElement has been added. Upward compatibility for file based exchange is guaranteed. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcVirtualElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcVirtualElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcElementAssembly represents complex element assemblies aggregated from several elements, such as discrete elements, building elements, or other elements. EXAMPLE Steel construction assemblies, such as trusses and different kinds of frames, can be represented by the IfcElementAssembly entity. Other examples include slab fields aggregated from a number of precast concrete slabs or reinforcement units made from several reinforcement bars. Also bathroom units, staircase sections and other premanufactured or precast elements are examples of the general IfcElementAssembly entity NOTE The IfcElementAssembly is a general purpose entity that is required to be decomposed. Also other subtypes of IfcElement can be decomposed. REMOVE with some dedicated entities such as IfcWallElementedCase and IfcSlabElementedCase . The assembly structure can be nested, i.e. an IfcElementAssembly could be an aggregated part within another IfcElementAssembly. NOTE View definitions and or implementer agreements may restrict the number of allowed levels of nesting. The geometry of an IfcElementAssembly is generally formed from its components, in which case it does not need to have an explicit geometric representation. In some cases it may be useful to also expose an own explicit representation of the aggregate. NOTE View definitions or implementer agreements may further constrain the applicability of certain shape representations at the IfcElementAssembly in respect of the shape representations of its parts. HISTORY New entity in IFC2x2. Informal Propositions The IfcElementAssembly shall have an aggregation relationship to the contained parts, i.e. the INV IsDecomposedBy relationship shall be utilized. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcElementAssembly"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcElementAssembly"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Trees, shrubs, herbs, grasses, ferns, and mosses. NOTE It is proposed to deprecate the PredefinedType attribute for existing IFC class IfcGeographicElement.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcGeographicElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcGeographicElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Representation of the concept of an identified discrete almost homogenous geological feature with either an irregular solid or Yabuki top surface shape or a regular voxel cubic shape. A stratum is represented as a discrete entity, specialised sub typed from IfcElement. A stratum may be broken down into smaller entities if properties vary across the stratum or alternatively properties may be described with bounded numeric ranges. A stratum may carry information about the physical form and its interpretation as a Geological Item GML . The shape representations used should correspond to the sub type of IfcGeotechnicalAssembly in which it occurs",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcGeotechnicalElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcGeotechnicalElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A system furniture element defines components of modular furniture which are not directly placed in a building structure but aggregated inside furniture. HISTORY New entity in IFC2x2. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFurnishingElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFurnishingElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A transport element is a generalization of all transport related objects that move people, animals or goods within a REMOVE building or building complex Facility. The IfcTransportElement defines the occurrence of a transport element, that if given , is expressed by the IfcTransportElementType . EXAMPLE Transportation elements include elevator lift , escalator, moving walkway, etc. NOTE More detailed equipment that may be a part of a transportation device, like a lifting hook, is defined as IfcDiscreteAccessory . It maybe included as a part of the IfcTransportElement by virtue of the objectified relationship IfcRelAggregates . Transport element can describe fixed or non fixed elements, which can either be identified as specified operational assets within a facility or vehicles that interact with the facility as a user or customer. In the case of operational assets, instances of IfcTransportElements can represent individual identifiable vehicles or structures with properties such as serial numbers, registration numbers etc. and be typed accordingly by instances of IfcTransportElementType. In the case transport elements that interact as users or customers, such as cars on a road or vessels at a port, IfcTransportElementType is used to define element specifications which are used to design, analyse and provide operational constraints to the facility. Depending on local classification systems transport elements and transportation systems in buildings are either considered as part of a built system, or as part of a built service system. Within IFC they are considered as part of a built system and may have to be mapped appropriately. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcTransportElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcTransportElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An IfcCivilElement is a generalization of all elements within a civil engineering works that cannot be represented as BuildingElements, DistributionElements or GeographicElements. Depending on the context of the construction project, included building work, such as buildings or factories, are represented as a collection of IfcBuiltElement s, distribution systems, such as piping or drainage, are represented as a collection of IfcDistributionElement s, and other geographic elements, such as trees, light posts, traffic signs etc. are represented as IfcGeographicElement s. NOTE The IfcCivilElement has been introduced as a stub for future extensions of this specification to include an object model for civil engineering works. Civil elements are typically horizontally organized using a spatial structure expressed by spatial zones, therefore IfcCivilElement is spatially contained by default within an IfcSpatialZone. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCivilElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCivilElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The distribution element IfcDistributionFlowElement defines occurrence elements of a distribution system that facilitate the distribution of energy or matter, such as air, water or power. EXAMPLE Examples of distribution flow elements are ducts, pipes, wires, fittings, and equipment. HISTORY New entity in IFC2.0. IFC4 CHANGE Ports are now primarily defined using IfcRelNests to enable definition of ports at type definitions both forward and backward compatible , provide a logical order, and reduce the number of relationship objects needed. The relationship IfcRelConnectsPortToElement is still supported, however is now specific to dynamically connected ports. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDistributionElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDistributionElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "CaissonFoundation essentially is a hollow box that can be either open or closed. NOTE corresponding predefined type is deprecated from IfcFootingTypeEnum . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDeepFoundation"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDeepFoundation"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The standard door, IfcDoorStandardCase , defines a door with certain constraints for the provision of operation types, opening directions, frame and lining parameters, and with certain constraints for the geometric representation. The IfcDoorStandardCase handles all cases of doors, that are inserted into an opening, represented by IfcOpeningElement , using the IfcRelFillsElement relationship have a local placement relative to this opening, and with the y axis of the placement pointing into the opening direction have a profile geometry, represented by IfcShapeRepresentation.RepresentationIdentifier Profile as a closed curve to which the door parameters apply have a reference to an IfcDoorType to define the opening direction and the operation type swinging, sliding, folding, etc. of the door. The attribute OperationType shall be provided and not being UNDEFINED, and the attribute ParameterTakesPrecedence shall be TRUE have an IfcDoorLiningProperties and IfcDoorPanelProperties instances included in the set of HasPropertySets at IfcDoorType . HISTORY New entity in IFC4. Geometric Representations The geometric representation of IfcDoorStandardCase is defined using the following multiple shape representations for its definition Profile a three dimensional closed curve within a particular shape representation. The profile is used to apply the parameter of the parametric door representation. The profile around the edges of the opening is used to apply the door lining and door panel shape parameter. MappedRepresentation A SweptSolid, SurfaceModel, Brep or a CSG representation additionally defining the 3D shape of the standard door in addition to the parametric representation by applying the IfcDoorLiningProperties and an the IfcDoorPanelProperties to the Profile representation. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDoor"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDoor"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The standard column, IfcColumnStandardCase , defines a column with certain constraints for the provision of material usage, parameters and with certain constraints for the geometric representation. The IfcColumnStandardCase handles all cases of columns, that have a reference to the IfcMaterialProfileSetUsage defining the material profile association of the column with the cardinal point of its insertion relative to the local placement. are based on a sweep of a planar profile, or set of profiles, as defined by the IfcMaterialProfileSet have an Axis shape representation with constraints provided below in the geometry use definition have a Body shape representation with constraints provided below in the geometry use definition have a start profile, or set of profiles, that is swept along the directrix and might be changed uniformly by a taper definition are consistent in using the correct cardinal point offset of the profile as compared to the Axis and Body shape representation are extruded perpendicular to the profile definition plane NOTE View definitions and implementer agreements may further constrain the applicable geometry types, e.g. by excluding tapering from an IfcBeamStandardCase implementation. HISTORY New entity in IFC4. Geometric Representations The geometric representation of IfcColumnStandardCase is defined using the following multiple shape representations for its definition Axis A three dimensional open curve subtype of IfcBoundedCurve defining the axis for the standard column. The cardinal point is determined by the column axis. Body A Swept Solid Representation or a CSG representation defining the 3D shape of the standard column. NOTE It is invalid to exchange a SurfaceModel , Brep , or MappedRepresentation representation for the Body shape representation of an IfcColumnStandardCase . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcColumn"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcColumn"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Shading devices are purpose built devices to protect from the sunlight, from natural light, or screening them from view. Shading devices can form part of the facade or can be mounted inside the building, they can be fixed or operable. NOTE Also other building elements such as protruding slabs or balconies can act as shading devices. Those elements however have another primary purpose and are defined as IfcSlab or by other subtypes of IfcBuildingElement . HISTORY New entity in IFC4 bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcShadingDevice"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcShadingDevice"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The standard window, IfcWindowStandardCase , defines a window with certain constraints for the provision of operation types, opening directions, frame and lining parameters, construction types and with certain constraints for the geometric representation. The IfcWindowStandardCase handles all cases of windows, that are inserted into an opening, represented by IfcOpeningElement , using the IfcRelFillsElement relationship have a local placement relative to this opening, and with the y axis of the placement pointing into the opening direction have a profile geometry, represented by IfcShapeRepresentation.RepresentationIdentifier Profile as a closed curve to which the window parameter apply. The profile represents a rectangle within the xz plane of the local placement have a reference to an IfcWindowType to define the opening direction and the operation type swinging, sliding, folding, etc. of the window. The attribute OperationType shall be provided and not being UNDEFINED, and the attribute ParameterTakesPrecedence shall be TRUE . have a single IfcWindowLiningProperties and a set of IfcWindowPanelProperties instances included in the set of HasPropertySets at IfcWindowType HISTORY New entity in IFC4. The geometric representation of IfcWindowStandardCase is defined using the following multiple shape representations for its definition Profile a three dimensional closed curve within a particular shape representation. The profile is used to apply the parameter of the parametric window representation. The profile around the edges of the opening is used to apply the window lining and window panel shape parameter. Body A SweptSolid, SurfaceModel, or Brep Representation or a CSG additionally defining the 3D shape of the standard window in addition to the parametric representation by applying the IfcWindowLiningProperties and an the IfcWindowPanelProperties to the Profile representation. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcWindow"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcWindow"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Type of built element in a road or other paved area to provide an even surface sustaining loads from vehicles or pedestrians, usually comprising several courses. NOTE Definition from ISO 6707 1 road, runway, or similar construction above the subgrade.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcPavement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcPavement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A mooring device is an active or passive built element who s primary function is to participate in the mooring of a vessel, this could be in the form of a bollard used as am attachment point for lines or active equipment such as quick release hooks.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcMooringDevice"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcMooringDevice"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The standard plate, IfcPlateStandardCase , defines a plate with certain constraints for the provision of material usage, parameters and with certain constraints for the geometric representation. The IfcPlateStandardCase handles all cases of plates, that have a reference to the IfcMaterialLayerSetUsage defining the material layers of the plate with thicknesses are based on an extrusion of a planar surface as defined by the plate profile have a constant thickness along the extrusion direction are consistent in using the correct material layer set offset to the base planar surface in regard to the shape representation are extruded perpendicular to the plane surface The definitions of plate openings and niches are the same as given at the supertype IfcPlate . The same agreements to the special types of plates, as defined in the PredefinedType attribute apply as well. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcPlate"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcPlate"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcBuildingElementProxy is a proxy definition that provides the same functionality as subtypes of IfcBuildingElement , but without having a predefined meaning of the special type of building element, it represents. Proxies can also be used as spatial place holders or provisions, that are later replaced by special types of elements. One use of the proxy object is a provision for voids, i.e. where a particular volume of space is requested by an engineering function that might later be accepted or rejected. If accepted it is transformed into a void within a building element, like a wall opening, or a slab opening. The provision for voids is exchanged as an IfcBuildingElementProxy with the PredefinedType ProvisionForVoid. Such proxy shall have a swept solid geometry, where the profile of the swept solid lies on near the surface of the referred building element and the extrusion depths is equal to or bigger then in case of round or otherwise irregular element shape the thickness of the building element. The appropriate property set should be attached. In addition to the provision for voids, the building element proxy can also represent a provision for space, often the necessary space allocation for mechanical equipment that will be determined in a later design phase. The provision for space is exchanged as an IfcBuildingElementProxy with the PredefinedType ProvisionForSpace. Other usages of IfcBuildingElementProxy include The IfcBuildingElementProxy can be used to exchange special types of building elements for which the current specification does not yet provide a semantic definition. The IfcBuildingElementProxy can also be used to represent building elements for which the participating applications can not provide a semantic definition. HISTORY New entity in IFC2x. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcBuildingElementProxy"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcBuildingElementProxy"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The standard member, IfcMemberStandardCase , defines a member with certain constraints for the provision of material usage, parameters and with certain constraints for the geometric representation. The IfcMemberStandardCase handles all cases of members, that have a reference to the IfcMaterialProfileSetUsage defining the material profile association of the member with the cardinal point of its insertion relative to the local placement. are based on a sweep of a planar profile, or set of profiles, as defined by the IfcMaterialProfileSet have an Axis shape representation with constraints provided below in the geometry use definition have a Body shape representation with constraints provided below in the geometry use definition have a start profile, or set of profiles, that is swept along the directrix and might be changed uniformly by a taper definition are consistent in using the correct cardinal point offset of the profile as compared to the Axis and Body shape representation are extruded perpendicular to the profile definition plane NOTE View definitions and implementer agreements may further constrain the applicable geometry types, such as by excluding tapering from an IfcMemberStandardCase implementation. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcMember"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcMember"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A curtain wall is an exterior wall of a building which is an assembly of components, hung from the edge of the floor roof structure rather than bearing on a floor. Curtain wall is represented as a building element assembly and implemented as a subtype of IfcBuildingElement that uses an IfcRelAggregates relationship. .extDef NOTE Definition according to ISO 6707 1 non load bearing wall positioned on the outside of a building and enclosing it. HISTORY New entity in IFC2.0 The geometric representation of IfcCurtainWall is given by the IfcProductDefinitionShape , allowing multiple geometric representations. Independent Body geometric representation, as described below, should only be used when the IfcCurtainWall is not defined as an aggregate. If defined as an aggregate, the geometric representation is the sum of the representations of the components within the aggregate. The geometric representation of IfcCurtainWall is defined using the following multiple shape representations for its definition Axis A two dimensional open curve for restrictions see below defining the axis for the curtain wall. This is an optional representation for curtain walls. Body A surface model or boundary representation model representation defining the 3D shape of the curtain wall. If the IfcCurtainWall has components referenced by SELF IfcObject.IsDecomposedBy then no independent shape representation with RepresentationType Body shall be defined. The body of IfcCurtainWall is then geometrically represented by the shape representation of its components. The components are accessed via SELF IfcObject.IsDecomposedBy 1 .RelatedObjects . If the IfcCurtainWall has no components defined empty set of SELF IfcObject.IsDecomposedBy then the IfcCurtainWall may be represented by an shape representation with the RepresentationIdentifier Body . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCurtainWall"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCurtainWall"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A footing is a part of the foundation of a structure that spreads and transmits the load to the soil. A footing is also characterized as shallow foundation, where the loads are transfered to the ground near the surface. .extDef NOTE Definition according to ISO 6707 1 stepped construction that spreads the load at the foot of a wall or column. HISTORY New entity in IFC2x2. NOTE Slab foundations, also called slab on grade, are not instantiated as IfcFooting but as IfcSlab or as its subtype IfcSlabStandardCase , IfcSlabElementedCase with a predefined type of IfcSlabTypeEnum .BASESLAB. Deep foundations, which transfer the loads to subsurface layers, are represented by IfcDeepFoundation and its subtypes IfcCaissonFoundation and IfcPile . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFooting"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFooting"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcWallElementedCase defines a wall with certain constraints for the provision of its components. The IfcWallElementedCase handles all cases of walls, that are decomposed into parts having components being assigned to the IfcWallElementedCase using the IfcRelAggregates relationship accessible by the inverse relationship IsDecomposedBy . Parts within the decomposition are usually be of type IfcBuildingElementPart for wall layer, insolation layers and similar IfcMember for studs, posts and similar elements, IfcElementAssembly for other aggregates, or IfcBuildingElementProxy . EXAMPLE Elemented walls may extend the concepts of standard walls with the following features, as shown in Figure 1, including the IfcRelConnectsWithRealizingElements relationship to define fasteners and accessories. voiding .. .. .. .. .. .. figures ifcwallelementedcase partitioning.png Figure 1 Wall elemented case HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcWall"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcWall"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A ramp is a vertical passageway which provides a human or vehicle circulation link between one floor level and another floor level at a different elevation. It may include a landing as an intermediate floor slab. A ramp normally does not include steps. .extDef NOTE Definition according to ISO 6707 1 Inclined way or floor joining two surfaces at different levels. The IfcRamp shall either be represented as a ramp assembly that aggregates all parts ramp flight, landing, etc. with own shape representations, or as a single ramp without decomposition including all shape representations directly at the ramp entity. NOTE In case of an IfcRamp being the assembly of all parts of the ramp the aggregation is handled by the IfcRelAggregates relationship, relating an IfcRamp with the related IfcRampFlight and landings, IfcSlab with PredefinedType LANDING. IfcRailing s belonging to the ramp may also be included into the aggregation. NOTE Model View Definitions and implementer agreements may restrict the IfcRamp being an assembly to not have an independent shape representation, but to always require that the decomposed parts have a shape representation. In this case, at least the Body geometric representations shall not be provided directly at IfcRamp if it is an assembly. The Body geometric representation of the IfcRamp is then the sum of the Body shape representation of the parts within the decomposition structure. HISTORY New entity in IFC2.0. .change ifc2x4 IFC4 CHANGE Attribute ShapeType renamed to PredefinedType bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRamp"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRamp"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A covering is an element which covers some part of another element and is fully dependent on that other element. The IfcCovering defines the occurrence of a covering type, that if given is expressed by the IfcCoveringType . .extDef NOTE Definition according to ISO ISO 6707 1 final coverings and treatments of surfaces and their intersections. Coverings are elements with relationships to the covered element and the space on the other side, they may contain openings, assigned by IfcRelVoidsElement , material information, assigned by IfcRelAssociatesMaterial , and others. EXAMPLE Coverings include wall claddings, floorings, suspended ceilings, moldings and skirting boards. NOTE A more basic information about claddings, floorings, and ceilings of a space can be attached to IfcSpace s using the Pset SpaceCommon properties. Then only a name can be provided and the covering quantities would be interpreted from the space quantities. Coverings can be assigned to a space represented by IfcSpace using the inverse relationship CoversSpaces pointing to IfcRelCoversSpaces . The space is then accessible via IfcRelCoversSpaces.RelatedSpace . It defines to which space a covering is facing towards. a space boundary represented by IfcRelSpaceBoundary using the inverse relationship ProvidesBoundaries pointing to IfcRelSpaceBoundary. The space is then accessible via IfcRelSpaceBoundary.RelatingSpace . a building element represented by IfcBuildingElement using the inverse relationship Covers pointing to IfcRelCoversBldgElements . The building element is then accessible via IfcRelCoversBldgElements.RelatingBuildingElement . NOTE The mere containment relationship between an IfcCovering and an IfcSpace is created by using IfcRelContainedInSpatialStructure The following guideline shall apply default if the space has coverings that may not have their own shape representation and no defined relationships to the building elements they cover, then the IfcCovering shall be assigned to IfcSpace using the IfcRelCoversSpaces relationship, if the space has coverings that have an own shape representation and the space has defined space boundaries, then the covering, which relates to that space, shall be contained in the space using IfcRelContainedInSpatialStructure . It may be assigned to the space boundaries using the IfcRelSpaceBoundary . if the covering does not relate to a space, then the covering should be assigned to the building element or a distribution element using the IfcRelCoversBldgElements relationship. HISTORY New entity in IFC1.0. .change ifc2x IFC2x CHANGE The attribute PredefinedType is now optional and should only be inserted when no type information, given by IfcCoveringType , is assigned to the IfcCovering occurrence by IfcRelDefinesByType . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCovering"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCovering"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A track element is a built element used specifically in the track domain in railway.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcTrackElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcTrackElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Chimneys are typically vertical, or as near as vertical, parts of the construction of a building and part of the building fabric. Often constructed by pre cast or insitu concrete, today seldom by bricks. .extDef NOTE Definition according to ISO 6707 1 construction containing one or more flues. Flue Duct designed to convey the products of combustion to the open air. Chimney stack Part of the chimney that projects above a roof. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcChimney"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcChimney"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A roof is the covering of the top part of a building, it protects the building against the effects of wheather. .extDef NOTE Definition according to ISO 6707 1 construction enclosing the building from above. The IfcRoof shall either be represented as a roof assembly that aggregates all parts slabs, rafters and purlins, or other included roofs, such as dormers with own shape representaion, or as a single roof without decomposition including all shape representations directly at the roof entity. NOTE In case of an IfcRoof being the assembly of all parts of the roof the aggregation is handled by the IfcRelAggregates relationship, relating an IfcRoof with the related roof elements, like slabs represented by IfcSlab , rafters and purlins represented by IfcBeam , or other included roofs, such as dormers represented by IfcRoof . NOTE Model View Definitions and implementer agreements may restrict the IfcRoof being an assembly to not have an independent shape representation, but to always require that the decomposed parts have a shape representation. In this case, at least the Body geometric representations shall not be provided directly at IfcRoof if it is an assembly. The Body geometric representation of the IfcRoof is then the sum of the Body shape representation of the parts within the decomposition structure. HISTORY New entity in IFC2.0. .change ifc2x4 IFC4 CHANGE Attribute ShapeType renamed to PredefinedType . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRoof"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRoof"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A navigation element is an active or passive built element who s primary function is provide navigational instructions and warnings to vessels, this could be in the form of a floating buoy, a fixed beacon. Navigation elements can aggregate other components and elements to form the entire structure. this might include frame structure to form the body, instances of IfcSign for signage or instances of IfcSignal for supplementary lights an or sound signals.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcNavigationElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcNavigationElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The standard beam, IfcBeamStandardCase , defines a beam with certain constraints for the provision of material usage, parameters and with certain constraints for the geometric representation. The IfcBeamStandardCase handles all cases of beams, that have a reference to the IfcMaterialProfileSetUsage defining the material profile association of the beam with the cardinal point of its insertion relative to the local placement. are consistent in using the correct cardinal point offset of the profile as compared to the Axis and Body shape representation are based on a sweep of a planar profile, or set of profiles, as defined by the IfcMaterialProfileSet have an Axis shape representation with constraints provided below in the geometry use definition have a Body shape representation with constraints provided below in the geometry use definition are extruded perpendicular to the profile definition plane have a start profile, or set of profiles, that is swept the sweeping operation can be linear extrusion, circular rotation, or a sweep along a directrix the start profile, or set of profiles can be swept unchanged, or might be changed uniformly by a taper definition NOTE View definitions and implementer agreements may further constrain the applicable geometry types, e.g. by excluding tapering from an IfcBeamStandardCase implementation. HISTORY New entity in IFC4. Geometric Representations The geometric representation of IfcBeamStandardCase is defined using the following multiple shape representations for its definition Axis A three dimensional open curve subtype of IfcBoundedCurve defining the axis for the standard beam. The cardinal point is determined by the beam axis. Body A Swept Solid Representation or a CSG clipping representation defining the 3D shape of the standard beam. NOTE It is invalid to exchange a SurfaceModel , Brep , or MappedRepresentation representation for the Body shape representation of an IfcBeamStandardCase . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcBeam"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcBeam"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The railing is a frame assembly adjacent to human or vehicle circulation spaces and at some space boundaries where it is used in lieu of walls or to complement walls. REMOVE Designed to aid humans, either as an optional physical support, or to prevent injury or damage, either by falling or collision. Designed as an optional physical support, or to prevent injury or damage, either by falling or collision. HISTORY New entity in IFC2.0 bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRailing"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRailing"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A ramp comprises a single inclined segment, or several inclined segments that are connected by a horizontal segment, refered to as a landing. A ramp flight is the single inclined segment and part of the ramp construction. In case of single flight ramps, the ramp flight and the ramp are identical. NOTE A single flight ramp is represented by an IfcRamp instance without using aggregation and by utilizing the product shape representation directly at IfcRamp . An IfcRampFlight is an aggregated part of an IfcRamp realized through the IfcRelAggregates relationship, the ramp flight is therefore included in the set of IfcRelAggregates.RelatedObjects . An IfcRampFlight connects the floor slab of zero to two different storeys or partial storeys or landings within a building. The connection relationship between the IfcRampFlight and the IfcSlab can be expressed using the IfcRelConnectsElements relationship. HISTORY New entity in IFC2.0. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRampFlight"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRampFlight"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A stair is a vertical passageway allowing occupants to walk step from one floor level to another floor level at a different elevation. It may include a landing as an intermediate floor slab. NOTE Definition according to ISO 6707 1 Construction comprising a succession of horizontal stages steps or landings that make it possible to pass on foot to other levels. The IfcStair shall either be represented as a stair assembly entity that aggregates all parts stair flight, landing, etc. with own representations , or as a single stair entity without decomposition including all representation directly at the stair entity. NOTE In case of an IfcStair being the aggregate of all parts of the stair the aggregation is handled by the IfcRelAggregates relationship, relating an IfcStair with the related IfcStairFlight and landings, IfcSlab with PredefinedType LANDING. IfcRailing s belonging to the stair may also be included into the aggregation. NOTE Model View Definitions and implementer agreements may restrict the IfcStair being an assembly to not have an independent shape representation, but to always require that the decomposed parts have a shape representation. In this case, at least the Body geometric representations shall not be provided directly at IfcStair if it is an assembly. The Body geometric representation of the IfcStair is then the sum of the Body shape representation of the parts within the decomposition structure. HISTORY New entity in IFC2.0. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStair"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStair"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A rail is a predominately linear built element that has a special section profile. Rail is distinctive from built elements with similar geometric shapes e.g. beam, member that its major function is to ensure guidance of moving for vehicles or other kinds of machineries.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcRail"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcRail"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Type of building element that is usually used to transmit loads from superstructure to substructure, and usually allowing movement displacement or rotation in one or more degrees of freedom. It is typically a mechanical component procured as a whole and installed on site, but in simple cases it may be built on site composed of other building elements, element components, etc. . NOTE The sliding and roller materials are to be assigned to the bearing with the Material Constituent Set concept. NOTE The displacements and rotations accommodated can be defined in the Pset BearingCommon property set. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcBearing"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcBearing"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A stair flight is an assembly of building components in a single run of stair steps not interrupted by a landing . The stair steps and any stringers are included in the stair flight. A winder is also regarded a part of a stair flight. An IfcStairFlight is normally aggregated by an IfcStair through the IfcRelAggregates relationship, the stair flight is then included in the set of IfcRelAggregates.RelatedObjects . An IfcStairFlight normally connects the floor slab of zero to two different storeys or partial storeys, or landings within a building. The connection relationship between the IfcStairFlight and the IfcSlab can be expressed using the IfcRelConnectsElements relationship. HISTORY New entity in IFC2.0. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStairFlight"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStairFlight"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A border of stone, concrete or other rigid material formed at the edge of the carriageway or footway. NOTE Definition from ISO 6707 1 border, usually upstanding, at the edge of a carriageway, hard strip, hard shoulder, or footway, Curb, US . NOTE Definition from PIARC Unit intended to separate surfacings of different surfaces and to provide physical delineation or containment CEN .",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcKerb"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcKerb"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The standard slab, IfcSlabStandardCase , defines a slab with certain constraints for the provision of material usage, parameters and with certain constraints for the geometric representation. The IfcSlabStandardCase handles all cases of slabs, that have a reference to the IfcMaterialLayerSetUsage defining the material layers of the slab with thicknesses are based on an extrusion of a planar surface as defined by the slab profile have a constant thickness along the extrusion direction are consistent in using the correct material layer set offset to the base planar surface in regard to the shape representation are extruded either perpendicular or slanted to the plane surface The definitions of slab openings and niches are the same as given at the supertype IfcSlab . The same agreements to the special types of slabs, as defined in the PredefinedType attribute apply as well. NOTE If the IfcSlabStandardCase is of type Landing and is used within an IfcStair or IfcRamp , the special agreements to handle stair and ramp geometry will also affect the geometric representation of the IfcSlabStandardCase . HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSlab"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSlab"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A type of earthworks element created by earthwork activities to build subgrade or to raise the level of the ground in general.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcEarthworksElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcEarthworksElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A built element whose length greatly exceeds its thickness and often also its width, usually of a single material laid on site on top of another horizontal or nearly horizontal built element. A course is distinctive from a earthworks element in that a course is a graded granular which can be bound or unbound material that is generally processed in some fashion, where as earthworks elements are soil earthen based structure that can be formed by removal and transport of general ground material. Structurally a course does not have capacity to carry loads over open span, or to be removed or replaced as a single unit. examples of courses include Graded aggregate layers Graded sand layers Cement bounded material CBM Asphalt layers",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCourse"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCourse"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A pile is a slender timber, concrete, or steel structural element, driven, jetted, or otherwise embedded on end in the ground for the purpose of supporting a load. A pile is also characterized as deep foundation, where the loads are transfered to deeper subsurface layers. .extDef NOTE Definition according to ISO 6707 1 slender structural member, substantially underground, intended to transmit force s into loadbearing strata below the surface of the ground. NOTE Shallow foundations, which transfer the loads to the ground near its surface, are represented by IfcFooting . HISTORY New entity in IFC2x2. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcPile"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcPile"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "CaissonFoundation essentially is a hollow box that can be either open or closed. NOTE corresponding predefined type is deprecated from IfcFootingTypeEnum . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCaissonFoundation"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCaissonFoundation"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The standard door, IfcDoorStandardCase , defines a door with certain constraints for the provision of operation types, opening directions, frame and lining parameters, and with certain constraints for the geometric representation. The IfcDoorStandardCase handles all cases of doors, that are inserted into an opening, represented by IfcOpeningElement , using the IfcRelFillsElement relationship have a local placement relative to this opening, and with the y axis of the placement pointing into the opening direction have a profile geometry, represented by IfcShapeRepresentation.RepresentationIdentifier Profile as a closed curve to which the door parameters apply have a reference to an IfcDoorType to define the opening direction and the operation type swinging, sliding, folding, etc. of the door. The attribute OperationType shall be provided and not being UNDEFINED, and the attribute ParameterTakesPrecedence shall be TRUE have an IfcDoorLiningProperties and IfcDoorPanelProperties instances included in the set of HasPropertySets at IfcDoorType . HISTORY New entity in IFC4. Geometric Representations The geometric representation of IfcDoorStandardCase is defined using the following multiple shape representations for its definition Profile a three dimensional closed curve within a particular shape representation. The profile is used to apply the parameter of the parametric door representation. The profile around the edges of the opening is used to apply the door lining and door panel shape parameter. MappedRepresentation A SweptSolid, SurfaceModel, Brep or a CSG representation additionally defining the 3D shape of the standard door in addition to the parametric representation by applying the IfcDoorLiningProperties and an the IfcDoorPanelProperties to the Profile representation. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDoorStandardCase"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDoorStandardCase"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The standard column, IfcColumnStandardCase , defines a column with certain constraints for the provision of material usage, parameters and with certain constraints for the geometric representation. The IfcColumnStandardCase handles all cases of columns, that have a reference to the IfcMaterialProfileSetUsage defining the material profile association of the column with the cardinal point of its insertion relative to the local placement. are based on a sweep of a planar profile, or set of profiles, as defined by the IfcMaterialProfileSet have an Axis shape representation with constraints provided below in the geometry use definition have a Body shape representation with constraints provided below in the geometry use definition have a start profile, or set of profiles, that is swept along the directrix and might be changed uniformly by a taper definition are consistent in using the correct cardinal point offset of the profile as compared to the Axis and Body shape representation are extruded perpendicular to the profile definition plane NOTE View definitions and implementer agreements may further constrain the applicable geometry types, e.g. by excluding tapering from an IfcBeamStandardCase implementation. HISTORY New entity in IFC4. Geometric Representations The geometric representation of IfcColumnStandardCase is defined using the following multiple shape representations for its definition Axis A three dimensional open curve subtype of IfcBoundedCurve defining the axis for the standard column. The cardinal point is determined by the column axis. Body A Swept Solid Representation or a CSG representation defining the 3D shape of the standard column. NOTE It is invalid to exchange a SurfaceModel , Brep , or MappedRepresentation representation for the Body shape representation of an IfcColumnStandardCase . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcColumnStandardCase"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcColumnStandardCase"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The standard window, IfcWindowStandardCase , defines a window with certain constraints for the provision of operation types, opening directions, frame and lining parameters, construction types and with certain constraints for the geometric representation. The IfcWindowStandardCase handles all cases of windows, that are inserted into an opening, represented by IfcOpeningElement , using the IfcRelFillsElement relationship have a local placement relative to this opening, and with the y axis of the placement pointing into the opening direction have a profile geometry, represented by IfcShapeRepresentation.RepresentationIdentifier Profile as a closed curve to which the window parameter apply. The profile represents a rectangle within the xz plane of the local placement have a reference to an IfcWindowType to define the opening direction and the operation type swinging, sliding, folding, etc. of the window. The attribute OperationType shall be provided and not being UNDEFINED, and the attribute ParameterTakesPrecedence shall be TRUE . have a single IfcWindowLiningProperties and a set of IfcWindowPanelProperties instances included in the set of HasPropertySets at IfcWindowType HISTORY New entity in IFC4. The geometric representation of IfcWindowStandardCase is defined using the following multiple shape representations for its definition Profile a three dimensional closed curve within a particular shape representation. The profile is used to apply the parameter of the parametric window representation. The profile around the edges of the opening is used to apply the window lining and window panel shape parameter. Body A SweptSolid, SurfaceModel, or Brep Representation or a CSG additionally defining the 3D shape of the standard window in addition to the parametric representation by applying the IfcWindowLiningProperties and an the IfcWindowPanelProperties to the Profile representation. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcWindowStandardCase"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcWindowStandardCase"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The standard plate, IfcPlateStandardCase , defines a plate with certain constraints for the provision of material usage, parameters and with certain constraints for the geometric representation. The IfcPlateStandardCase handles all cases of plates, that have a reference to the IfcMaterialLayerSetUsage defining the material layers of the plate with thicknesses are based on an extrusion of a planar surface as defined by the plate profile have a constant thickness along the extrusion direction are consistent in using the correct material layer set offset to the base planar surface in regard to the shape representation are extruded perpendicular to the plane surface The definitions of plate openings and niches are the same as given at the supertype IfcPlate . The same agreements to the special types of plates, as defined in the PredefinedType attribute apply as well. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcPlateStandardCase"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcPlateStandardCase"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The standard member, IfcMemberStandardCase , defines a member with certain constraints for the provision of material usage, parameters and with certain constraints for the geometric representation. The IfcMemberStandardCase handles all cases of members, that have a reference to the IfcMaterialProfileSetUsage defining the material profile association of the member with the cardinal point of its insertion relative to the local placement. are based on a sweep of a planar profile, or set of profiles, as defined by the IfcMaterialProfileSet have an Axis shape representation with constraints provided below in the geometry use definition have a Body shape representation with constraints provided below in the geometry use definition have a start profile, or set of profiles, that is swept along the directrix and might be changed uniformly by a taper definition are consistent in using the correct cardinal point offset of the profile as compared to the Axis and Body shape representation are extruded perpendicular to the profile definition plane NOTE View definitions and implementer agreements may further constrain the applicable geometry types, such as by excluding tapering from an IfcMemberStandardCase implementation. HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcMemberStandardCase"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcMemberStandardCase"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcWallStandardCase defines a wall with certain constraints for the provision of parameters and with certain constraints for the geometric representation. The IfcWallStandardCase handles all cases of walls, that are extruded vertically along the positive z axis of the wall object coordinate system, and along the positve z axis of the global world coordinate system and have a single thickness along the path for each wall layer, i.e. parallel sides for straight walls co centric sides for curved walls. and have either a straight line axis straight wall , or a circular arc axis round wall . and shall not have aggregated components, that is, parts aggregated to a wall by IfcRelAggregates shape representation for Body not being an extrusion, or clipped extrusion The following parameter have to be provided Wall height, taken from the depth of extrusion, provided by the geometric representation. Wall thickness, taken from the material layer set usage, attached to the wall Wall offset from axis, taken from the material layer set usage, attached to the wall The IfcWallStandardCase requires the provision of the wall axis either a straight line that is parallel to the x axis of the object coordinate system, or a circular arc where the tangent at start is parallel to the x axis of the object coordinate system. The direction of the wall axis shall be the positive direction of that x axis. The material of the wall is defined by the IfcMaterialLayerSetUsage and is attached by the IfcRelAssociatesMaterial objectified relationship. It is accessible by the inverse HasAssociations relationship. The material layer set usage has to be given enforced by where rule . An Axis and a Body shape representation has to be provided, and it is invalid to exchange a Tessellation , SurfaceModel , Brep or MappedRepresentation representation for the Body shape representation of the IfcWallStandardCase . HISTORY New entity in IFC2x. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcWallStandardCase"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcWallStandardCase"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcWallElementedCase defines a wall with certain constraints for the provision of its components. The IfcWallElementedCase handles all cases of walls, that are decomposed into parts having components being assigned to the IfcWallElementedCase using the IfcRelAggregates relationship accessible by the inverse relationship IsDecomposedBy . Parts within the decomposition are usually be of type IfcBuildingElementPart for wall layer, insolation layers and similar IfcMember for studs, posts and similar elements, IfcElementAssembly for other aggregates, or IfcBuildingElementProxy . EXAMPLE Elemented walls may extend the concepts of standard walls with the following features, as shown in Figure 1, including the IfcRelConnectsWithRealizingElements relationship to define fasteners and accessories. voiding .. .. .. .. .. .. figures ifcwallelementedcase partitioning.png Figure 1 Wall elemented case HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcWallElementedCase"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcWallElementedCase"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The standard beam, IfcBeamStandardCase , defines a beam with certain constraints for the provision of material usage, parameters and with certain constraints for the geometric representation. The IfcBeamStandardCase handles all cases of beams, that have a reference to the IfcMaterialProfileSetUsage defining the material profile association of the beam with the cardinal point of its insertion relative to the local placement. are consistent in using the correct cardinal point offset of the profile as compared to the Axis and Body shape representation are based on a sweep of a planar profile, or set of profiles, as defined by the IfcMaterialProfileSet have an Axis shape representation with constraints provided below in the geometry use definition have a Body shape representation with constraints provided below in the geometry use definition are extruded perpendicular to the profile definition plane have a start profile, or set of profiles, that is swept the sweeping operation can be linear extrusion, circular rotation, or a sweep along a directrix the start profile, or set of profiles can be swept unchanged, or might be changed uniformly by a taper definition NOTE View definitions and implementer agreements may further constrain the applicable geometry types, e.g. by excluding tapering from an IfcBeamStandardCase implementation. HISTORY New entity in IFC4. Geometric Representations The geometric representation of IfcBeamStandardCase is defined using the following multiple shape representations for its definition Axis A three dimensional open curve subtype of IfcBoundedCurve defining the axis for the standard beam. The cardinal point is determined by the beam axis. Body A Swept Solid Representation or a CSG clipping representation defining the 3D shape of the standard beam. NOTE It is invalid to exchange a SurfaceModel , Brep , or MappedRepresentation representation for the Body shape representation of an IfcBeamStandardCase . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcBeamStandardCase"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcBeamStandardCase"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The IfcSlabElementedCase defines a slab with certain constraints for the provision of its components. The IfcSlabElementedCase handles all cases of slabs, that are decomposed into parts having components being assigned to the IfcSlabElementedCase using the IfcRelAggregates relationship accessible by the inverse relationship IsDecomposedBy . applying the constraint that the parts within the decomposition shall be of type IfcElementAssembly , IfcBeam , IfcMember , IfcPlate , IfcBuildingElementPart or IfcBuildingElementProxy . HISTORY New entity in IFC4. .use head Voiding Use Definition As shown in Figure 1, openings within the composite slab are directly assigned to IfcSlabElementedCase using IfcRelVoidsElement pointing to IfcOpeningElement and apply to all aggregated parts. If individual parts have cutting and other voiding features, then the decomposed parts have a separate voiding relationship IfcRelVoidsElement pointing to IfcVoidingFeature . voiding .. .. .. .. .. .. figures ifcslabelementedcase fig01.png Figure 1 Slab elemented voiding bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSlabElementedCase"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSlabElementedCase"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The standard slab, IfcSlabStandardCase , defines a slab with certain constraints for the provision of material usage, parameters and with certain constraints for the geometric representation. The IfcSlabStandardCase handles all cases of slabs, that have a reference to the IfcMaterialLayerSetUsage defining the material layers of the slab with thicknesses are based on an extrusion of a planar surface as defined by the slab profile have a constant thickness along the extrusion direction are consistent in using the correct material layer set offset to the base planar surface in regard to the shape representation are extruded either perpendicular or slanted to the plane surface The definitions of slab openings and niches are the same as given at the supertype IfcSlab . The same agreements to the special types of slabs, as defined in the PredefinedType attribute apply as well. NOTE If the IfcSlabStandardCase is of type Landing and is used within an IfcStair or IfcRamp , the special agreements to handle stair and ramp geometry will also affect the geometric representation of the IfcSlabStandardCase . HISTORY New entity in IFC4. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSlabStandardCase"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSlabStandardCase"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Soil reinforced or stabilized by some mechanical or chemical method.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcReinforcedSoil"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcReinforcedSoil"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A type of earthworks element created by earthwork activities to build subgrade or to raise the level of the ground in general.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcEarthworksFill"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcEarthworksFill"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Representations of fixing parts which are used as fasteners to connect or join elements with other elements. Excluded are mechanical fasteners which are modeled by a separate entity IfcMechanicalFastener . HISTORY New entity in IFC2x2 .change ifc2x4 IFC4 CHANGE Attribute PredefinedType added. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFastener"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFastener"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A vibration damper is a device used to minimize the effects of vibration in a structure by dissipating kinetic energy. The damper may be passive elastic, frictional, inertia or active in a system using sensors and actuators . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcVibrationDamper"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcVibrationDamper"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcBuildingElementPart represents major components as subordinate parts of a building element. Typical usage examples include precast concrete sandwich walls, where the layers may have different geometry representations. In this case the layered material representation does not sufficiently describe the element. Each layer is represented by an own instance of the IfcBuildingElementPart with its own geometry description. The kind of building element part is further specified by a corresponding instance of IfcBuildingElementPartType, referred to by IfcRelDefinesByType. HISTORY New entity in IFC2x2. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcBuildingElementPart"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcBuildingElementPart"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A mechanical fasteners connecting building elements or parts mechanically. A single instance of this class may represent one or many of actual mechanical fasteners, for example an array of bolts or a row of nails. HISTORY New entity in IFC2x2 IFC4 CHANGE Supertype changed from IfcFastener to IfcElementComponent. Attribute PredefinedType added. Attributes NominalDiameter and NominalLength deprecated. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcMechanicalFastener"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcMechanicalFastener"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A discrete accessory is a representation of different kinds of accessories included in or added to elements. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE Attribute PredefinedType added. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDiscreteAccessory"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDiscreteAccessory"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A vibration isolator is a device used to minimize the effects of vibration transmissibility in a structure. HISTORY New entity in IFC4 bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcVibrationIsolator"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcVibrationIsolator"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A sign is a notice on display that gives information or instructions in a written, symbolic or other form. Signs are passive with the most common form of a pictorial panel. An instance of IfcSign refers to the occurrence of an individual panel which can be applied to a surface such as a wall or be aggregated within a Signal Assembly which can include multiple sign occurrences and the associated supporting structural elements see Signal Assembly for examples .",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSign"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSign"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A reinforcing bar is usually made of steel with manufactured deformations in the surface, and used in concrete and masonry construction to provide additional strength. A single instance of this class may represent one or many of actual rebars, for example a row of rebars. HISTORY New entity in IFC2x2 .change ifc2x4 IFC 2x4 CHANGE All attributes are optional now. Several attributes are deprecated their information now provided by IfcReinforcingBarType . Attribute BarRole renamed to PredefinedType . .use head Geometry Use Definition Placement and representation are defined at the supertype IfcElementComponent . The representation map of a mapped Body representation should contain a representation of type AdvancedSweptSolid which holds an IfcSweptDiskSolid including subtype IfcSweptDiskSolidPolygonal . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcReinforcingElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcReinforcingElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A impact protection device is a component used to protect other built elements from kinetic damage. impact protection devices currently come in 3 different varieties A vibration damper used to minimize the effects of vibration in a structure by dissipating kinetic energy. The damper may be passive elastic, frictional, inertia or active in a system using sensors and actuators . A vibration isolator is a device used to minimize the effects of vibration transmissibility in a structure. Impact devices that dissipate kinetic energy from impacting elements such as vehicles by deformation or elastic mechanics.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcImpactProtectionDevice"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcImpactProtectionDevice"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A tendon anchor is the end connection for tendons in prestressed or posttensioned concrete. HISTORY New entity in IFC2x2. .history IFC4 CHANGE Attribute PredefinedType added. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcTendonAnchor"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcTendonAnchor"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A TendonConduit represents the components of the conduit system for tendons embedded in concrete structure. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcTendonConduit"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcTendonConduit"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A reinforcing mesh is a series of longitudinal and transverse wires or bars of various gauges, arranged at right angles to each other and welded at all points of intersection usually used for concrete slab reinforcement. It is also known as welded wire fabric. In scope are plane meshes as well as bent meshes. HISTORY New entity in IFC2x2 .change ifc2x4 IFC4 CHANGE All attributes are optional now. Several attributes are deprecated their information is now provided by IfcReinforcingMeshType . Attribute PredefinedType added. .use head Geometry Use Definition Placement and representation are defined at the supertype IfcElementComponent . The representation map of a mapped Outline representation should contain a representation of type Curve3D which holds an IfcPolyline . The representation map of a mapped Body representation should contain a representation of type AdvancedSweptSolid which holds multiple IfcSweptDiskSolid including subtype IfcSweptDiskSolidPolygonal . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcReinforcingMesh"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcReinforcingMesh"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A tendon is a steel element such as a wire, cable, bar, rod, or strand used to impart prestress to concrete when the element is tensioned. .extDef NOTE Definition according to ISO 6707 1 steel bar s or groups of bars, strands or wires given a tensile stress that produces a compressive stress in prestressed concrete or masonry. .extDef NOTE To be efficient, the cable follows the deck alignment and moves vertically up on the top of the piers and down in the middle of the span. Therefore the cable axis is defined relatively towards the deck alignment. The ShapeRepresentation should be AdvancedSweptSolid geometry based on SectionedSolidHorizontal description including DistanceExpression, CircleProfileDef and AlignmentCurve, leading to a polyline describing the cable directrix. .extDef NOTE Regarding the Structural Analysis model, the cable has to be transformed into loads applied at each CartesianPoint defining the polyline. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE Attribute PredefinedType made optional. NominalDiameter and CrossSectionArea made optional and deprecated this information can now be provided by IfcTendonType . Description of FrictionCoefficient corrected. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcTendon"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcTendon"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A reinforcing bar is usually made of steel with manufactured deformations in the surface, and used in concrete and masonry construction to provide additional strength. A single instance of this class may represent one or many of actual rebars, for example a row of rebars. HISTORY New entity in IFC2x2 .change ifc2x4 IFC 2x4 CHANGE All attributes are optional now. Several attributes are deprecated their information now provided by IfcReinforcingBarType . Attribute BarRole renamed to PredefinedType . .use head Geometry Use Definition Placement and representation are defined at the supertype IfcElementComponent . The representation map of a mapped Body representation should contain a representation of type AdvancedSweptSolid which holds an IfcSweptDiskSolid including subtype IfcSweptDiskSolidPolygonal . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcReinforcingBar"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcReinforcingBar"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The projection element is a specialization of the general feature element to represent projections applied to building elements. It represents a solid attached to any element that has physical manifestation. EXAMPLE A wall projection such as a pilaster strip is handled by IfcProjectionElement NOTE View definitions or implementer agreements may restrict the types of elements to which IfcProjectionElement can be applied. An IfcProjectionElement has to be linked to a element all subtypes of IfcElement by using the IfcRelProjectsElement relationship. Its existence depends on the existence of the master element. The relationship implies a Boolean union operation between the volume of the projection element and the volume of the element. The IfcProjectionElement shall not participate in the containment relationship, i.e. it is not linked directly to the spatial structure of the project. It has a mandatory ProjectsElements inverse relationship pointing to the IfcElement that is contained in the spatial structure. The inverse relationship ContainedInStructure shall be NIL. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE The attribute PredefinedType has been added at the end of attribute list. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFeatureElementAddition"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFeatureElementAddition"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A surface feature is a modification at onto, or into of the surface of an element. Parts of the surface of the entire surface may be affected. The volume and mass of the element may be increased, remain unchanged, or be decreased by the surface feature, depending on manufacturing technology. However, any increase or decrease of volume is small compared to the total volume of the element. The standard use of instances of IfcSurfaceFeature is as a part of element type objects instances of subtypes of IfcElementType . The part whole relationship is established by an aggregation relationship object, expressing the decomposition of an element type into one or more additive elements element parts and zero or more feature elements. HISTORY New entity in IFC4. Containment Use Definition Surface features shall have no spatial containment relationship to the spatial structure since they are dependent on element types without spatial containment relationships or on an element occurrence with own spatial containment relationship. The SELF IfcElement.ContainedInStructure relationship shall be NIL. Geometry use definition The geometric representation of IfcSurfaceFeatureElement is given by the IfcProductDefinitionShape , allowing multiple geometric representation. Local Placement The local placement for IfcSurfaceFeatureElement is defined in its supertype IfcProduct . It is defined by the IfcLocalPlacement , which defines the local coordinate system that is referenced by all geometric representations. In case of features which are part of an element type, absolute placement into the type object s implied coordinate system shall be used. In case of features which are voiding an element occurrence, the PlacementRelTo relationship of IfcLocalPlacement shall point to the local placement of the respective element. Shape representation Different shape representations may be used, depending on the nature of the feature and information requirements Symbolic representation, such as the two dimensional bounding box of a tag. A geometric set representing the geometric items of a mark. Surface representations of treated parts of the lement surface by means of IfcShellBasedSurfaceModel . The faces within the surface model may be included into a B Rep model within a representation map of the parent element type. Higher level parameters geometric and non geometric may be provided by property sets based on local agreements. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSurfaceFeature"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSurfaceFeature"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The resulting void from modification of existing terrain or road structure by excavation or by other means of removing material. NOTE Definition from ISO 6707 1 void that results from bulk excavation of material. NOTE The material excavated and either used as fill or discarded as waste is not modelled as Cut, but may be handled as a different concept Resource in the future.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFeatureElementSubtraction"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFeatureElementSubtraction"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The projection element is a specialization of the general feature element to represent projections applied to building elements. It represents a solid attached to any element that has physical manifestation. EXAMPLE A wall projection such as a pilaster strip is handled by IfcProjectionElement NOTE View definitions or implementer agreements may restrict the types of elements to which IfcProjectionElement can be applied. An IfcProjectionElement has to be linked to a element all subtypes of IfcElement by using the IfcRelProjectsElement relationship. Its existence depends on the existence of the master element. The relationship implies a Boolean union operation between the volume of the projection element and the volume of the element. The IfcProjectionElement shall not participate in the containment relationship, i.e. it is not linked directly to the spatial structure of the project. It has a mandatory ProjectsElements inverse relationship pointing to the IfcElement that is contained in the spatial structure. The inverse relationship ContainedInStructure shall be NIL. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE The attribute PredefinedType has been added at the end of attribute list. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcProjectionElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcProjectionElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The standard opening, IfcOpeningStandardCase , defines an opening with certain constraints for the dimension parameters, position within the voided element, and with certain constraints for the geometric representation. The IfcOpeningStandardCase handles all cases of openings, that are true openings where the opening depth is greather than or equal to the thickness of the element, and the Predefinedtype is set correctly to .OPENING. are true recesses where the opening depth is lower than the thickness of the element, and the Predefinedtype is set correctly to .RECESS. are extruded perpendicular to the wall plane in case of openings in a wall are extruded perpendicular to the slab plane in case of openings in a slab have a local placement relative to the local placement of the voided element have a Body shape representation with SweptSolid representation type have only a single extrusion body within the Body shape representation HISTORY New entity in IFC4 bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcOpeningElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcOpeningElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A voiding feature is a modification of an element which reduces its volume. Such a feature may be manufactured in different ways, for example by cutting, drilling, or milling of members made of various materials, or by inlays into the formwork of cast members made of materials such as concrete. The standard use of instances of IfcVoidingFeature is as a part of element type objects instances of subtypes of IfcElementType . The part whole relationship is established by an aggregation relationship object, expressing the decomposition of an element type into one or more additive elements element parts and zero or more feature elements. HISTORY New entity in IFC4. .use head Containment Use Definition Voiding features shall have no spatial containment relationship to the spatial structure since they are dependent on element types without spatial containment relationships or on an element occurrence with own spatial containment relationship. The SELF IfcElement.ContainedInStructure relationship shall be NIL. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcVoidingFeature"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcVoidingFeature"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The resulting void from modification of existing terrain or road structure by excavation or by other means of removing material. NOTE Definition from ISO 6707 1 void that results from bulk excavation of material. NOTE The material excavated and either used as fill or discarded as waste is not modelled as Cut, but may be handled as a different concept Resource in the future.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcEarthworksCut"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcEarthworksCut"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "The standard opening, IfcOpeningStandardCase , defines an opening with certain constraints for the dimension parameters, position within the voided element, and with certain constraints for the geometric representation. The IfcOpeningStandardCase handles all cases of openings, that are true openings where the opening depth is greather than or equal to the thickness of the element, and the Predefinedtype is set correctly to .OPENING. are true recesses where the opening depth is lower than the thickness of the element, and the Predefinedtype is set correctly to .RECESS. are extruded perpendicular to the wall plane in case of openings in a wall are extruded perpendicular to the slab plane in case of openings in a slab have a local placement relative to the local placement of the voided element have a Body shape representation with SweptSolid representation type have only a single extrusion body within the Body shape representation HISTORY New entity in IFC4 bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcOpeningStandardCase"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcOpeningStandardCase"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Trees, shrubs, herbs, grasses, ferns, and mosses. NOTE It is proposed to deprecate the PredefinedType attribute for existing IFC class IfcGeographicElement.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcPlant"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcPlant"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Representation of the concept of a linear geological and geotechnical model, usually an interpretation but sometimes created direct from ground penetrating measurement The assembly may contain one of more strata and other elements such as capping and lining. The contained subtypes of IfcGeotechnicalStratum will have shape representations made from straight or bent tubes reflecting the bore diameter, or discs if a Yabuki top surface model is being used.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcGeotechnicalAssembly"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcGeotechnicalAssembly"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Representation of the concept of an identified discrete air filled geological feature, including caves and other voids",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcGeotechnicalStratum"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcGeotechnicalStratum"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Representation of the concept of a volumetric geological and geotechnical model, usually an interpretation but sometimes created direct from ground penetrating measurement. The assembly may contain one of more strata and other anthropic elements. The contained subtypes of IfcGeotechnicalStratum will have shape representations made from polyhedra or surfaces if a Yabuki top surface model is being used.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcGeomodel"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcGeomodel"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Representation of the concept of a sectional planar geological and geotechnical model, usually an interpretation but sometimes created direct from ground penetrating measurement. The assembly may contain one of more strata and anthropic elements. The contained subtypes of IfcGeotechnicalStratum will have shape representations made from polygons reflecting the visible section or poly lines if a Yabuki top surface model is being used.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcGeoslice"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcGeoslice"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Representation of the concept of a linear geological and geotechnical model, usually an interpretation but sometimes created direct from ground penetrating measurement The assembly may contain one of more strata and other elements such as capping and lining. The contained subtypes of IfcGeotechnicalStratum will have shape representations made from straight or bent tubes reflecting the bore diameter, or discs if a Yabuki top surface model is being used.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcBorehole"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcBorehole"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Representation of the concept of an identified discrete water filled geological or surface feature including lakes, rivers and seas.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcWaterStratum"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcWaterStratum"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Representation of the concept of an identified discrete almost homogenous solid geological or surface feature, including discontinuities such as faults, fractures, boundaries and interfaces that are not explicitly modelled.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSolidStratum"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSolidStratum"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Representation of the concept of an identified discrete air filled geological feature, including caves and other voids",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcVoidStratum"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcVoidStratum"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Furniture defines complete furnishings such as a table, desk, chair, or cabinet, which may or may not be permanently attached to a building structure. Occurrences of furniture that are built in where the property Pset FurnitureTypeCommon.IsBuiltIn is asserted to be TRUE should have their connection relationship with a building element occurrence defined through the IfcRelConnectsElements relationship. HISTORY New entity in IFC2x2. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFurniture"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFurniture"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A system furniture element defines components of modular furniture which are not directly placed in a building structure but aggregated inside furniture. HISTORY New entity in IFC2x2. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSystemFurnitureElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSystemFurnitureElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A unitary control element combines a number of control components into a single product, such as a thermostat or humidistat. A unitary control element provides a housing for an aggregation of control or electrical distribution elements that, in combination, perform a singular unitary purpose. Each item in the aggregation may have its own geometric representation and location. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDistributionControlElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDistributionControlElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A distribution chamber element defines a place at which distribution systems and their constituent elements may be inspected or through which they may travel. An IfcDistributionChamberElement is a formed volume used in a distribution system, such as a sump, trench or manhole. Instances of IfcDistributionSystem .. .. ifcsharedbldgserviceelements lexical ifcdistributionsystem.htm or IfcDistributionFlowElement .. .. ifcsharedbldgserviceelements lexical ifcdistributionflowelement.htm may be related to the IfcDistributionChamberElement enabling their location in or at the chamber to be determined. HISTORY New entity in IFC2x2. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDistributionFlowElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDistributionFlowElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An actuator is a mechanical device for moving or controlling a mechanism or system. An actuator takes energy, usually created by air, electricity, or liquid, and converts that into some kind of motion. HISTORY New entity in IFC4 bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcActuator"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcActuator"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A sensor is a device that measures a physical quantity and converts it into a signal which can be read by an observer or by an instrument. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSensor"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSensor"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A controller is a device that monitors inputs and controls outputs within a building automation system. A controller may be physical having placement within a spatial structure or logical a software interface or aggregated within a programmable physical controller . HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcController"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcController"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A flow instrument reads and displays the value of a particular property of a system at a point, or displays the difference in the value of a property between two points. Instrumentation is typically for the purpose of determining the value of the property at a point in time. It is not the purpose of an instrument to record or integrate the values over time although they may be connected to recording devices that do perform such a function . This entity provides for all forms of mechanical flow instrument thermometers, pressure gauges etc. and electrical flow instruments ammeters, voltmeters etc. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFlowInstrument"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFlowInstrument"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A protective device tripping unit breaks an electrical circuit at a separate breaking unit when a stated electric current that passes through the unit is exceeded. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcProtectiveDeviceTrippingUnit"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcProtectiveDeviceTrippingUnit"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An alarm is a device that signals the existence of a condition or situation that is outside the boundaries of normal expectation or that activates such a device. Alarms include the provision of break glass buttons and manual pull boxes that are used to activate alarms. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcAlarm"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcAlarm"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A unitary control element combines a number of control components into a single product, such as a thermostat or humidistat. A unitary control element provides a housing for an aggregation of control or electrical distribution elements that, in combination, perform a singular unitary purpose. Each item in the aggregation may have its own geometric representation and location. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcUnitaryControlElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcUnitaryControlElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A damper typically participates in an HVAC duct distribution system and is used to control or modulate the flow of air. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFlowController"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFlowController"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A conveyor segment defines an occurrence of a flow segment continuous run within a conveyor system that joins two sections of the system. these can utilise different carrying methods such as belt, rope, chain, screw etc. NOTE Definition according to ISO6707 1 machine that continuously transports material or objects along a gentle slope using an endless belt, rope or chain, or rollers.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFlowSegment"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFlowSegment"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A communications appliance transmits and receives electronic or digital information as data or sound. Communication appliances may be fixed in place or may be able to be moved from one space to another. Communication appliances require an electrical supply that may be supplied either by an electrical circuit or provided from a local battery source. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFlowTerminal"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFlowTerminal"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An electric flow storage device is a device in which electrical energy is stored and from which energy may be progressively released. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFlowStorageDevice"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFlowStorageDevice"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A fan is a device which imparts mechanical work on a gas. A typical usage of a fan is to induce airflow in a building services air distribution system. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFlowMovingDevice"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFlowMovingDevice"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An electric flow treatment device is used to remove unwanted matter from an electric or electronic signal in a flow distribution system.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFlowTreatmentDevice"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFlowTreatmentDevice"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An electric motor is an engine that is a machine for converting electrical energy into mechanical energy. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcEnergyConversionDevice"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcEnergyConversionDevice"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A pipe fitting is a junction or transition in a piping flow distribution system used to connect pipe segments, resulting in changes in flow characteristics to the fluid such as direction or flow rate. Pipe fittings include elbows, junctions, manifolds, and plumbing boxes. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFlowFitting"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFlowFitting"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A distribution chamber element defines a place at which distribution systems and their constituent elements may be inspected or through which they may travel. An IfcDistributionChamberElement is a formed volume used in a distribution system, such as a sump, trench or manhole. Instances of IfcDistributionSystem .. .. ifcsharedbldgserviceelements lexical ifcdistributionsystem.htm or IfcDistributionFlowElement .. .. ifcsharedbldgserviceelements lexical ifcdistributionflowelement.htm may be related to the IfcDistributionChamberElement enabling their location in or at the chamber to be determined. HISTORY New entity in IFC2x2. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDistributionChamberElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDistributionChamberElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A protective device breaks an electrical circuit when a stated electric current that passes through it is exceeded. A protective device provides protection against electrical current only not as a general protective device . It may be used to represent the complete set of elements including both the tripping unit and the breaking unit that provide the protection. This may be particularly useful at earlier stages of design where the approach to breaking the electrical supply may be determined but the method of tripping may not. Alternatively, this entity may be used to specifically represent the breaking unit alone in which case the tripping unit will also be specifically identified . This entity is specific to dedicated protective devices and excludes electrical outlets that may have circuit protection. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcProtectiveDevice"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcProtectiveDevice"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A flow meter is a device that is used to measure the flow rate in a system. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFlowMeter"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFlowMeter"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A distribution board is a flow controller in which instances of electrical devices are brought together at a single place for a particular purpose. A distribution provides a housing for connected electrical distribution elements so that they can be viewed, operated or acted upon from a single place. Each connected item may have its own geometric representation and location. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcElectricDistributionBoard"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcElectricDistributionBoard"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An air terminal box typically participates in an HVAC duct distribution system and is used to control or modulate the amount of air delivered to its downstream ductwork. An air terminal box type is often referred to as an air flow regulator . HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcAirTerminalBox"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcAirTerminalBox"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An electric time control is a device that applies control to the provision or flow of electrical energy over time. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcElectricTimeControl"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcElectricTimeControl"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A switch is used in a cable distribution system electrical circuit to control or modulate the flow of electricity. Switches include those used for electrical power, communications, audio visual, or other distribution system types as determined by the available ports. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSwitchingDevice"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSwitchingDevice"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A valve is used in a building services piping distribution system to control or modulate the flow of the fluid. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcValve"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcValve"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A distribution board is a flow controller in which instances of electrical or communication devices are brought together at a single place for a particular purpose. A distribution provides a housing for connected distribution elements so that they can be viewed, operated or acted upon from a single place. Each connected item may have its own geometric representation and location.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDistributionBoard"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDistributionBoard"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A damper typically participates in an HVAC duct distribution system and is used to control or modulate the flow of air. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDamper"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDamper"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A duct segment is used to typically join two sections of duct network. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDuctSegment"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDuctSegment"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A pipe segment is used to typically join two sections of a piping network. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcPipeSegment"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcPipeSegment"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A cable carrier segment is a flow segment that is specifically used to carry and support cabling. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCableCarrierSegment"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCableCarrierSegment"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A cable segment is a flow segment used to carry electrical power, data, or telecommunications signals. A cable segment is used to typically join two sections of an electrical network or a network of components carrying the electrical service. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCableSegment"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCableSegment"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A conveyor segment defines an occurrence of a flow segment continuous run within a conveyor system that joins two sections of the system. these can utilise different carrying methods such as belt, rope, chain, screw etc. NOTE Definition according to ISO6707 1 machine that continuously transports material or objects along a gentle slope using an endless belt, rope or chain, or rollers.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcConveyorSegment"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcConveyorSegment"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A light fixture is a container that is designed for the purpose of housing one or more lamps and optionally devices that control, restrict or vary their emission. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcLightFixture"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcLightFixture"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An outlet is a device installed at a point to receive one or more inserted plugs for electrical power or communications. Power outlets are commonly connected within a junction box data outlets may be directly connected to a wall. For power outlets sharing the same circuit within a junction box, the ports should indicate the logical wiring relationship to the enclosing junction box, even though they may be physically connected to a cable going to another outlet, switch, or fixture. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcOutlet"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcOutlet"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A waste terminal has the purpose of collecting or intercepting waste from one or more sanitary terminals or other fluid waste generating equipment and discharging it into a single waste drainage system. A waste terminal provides for all forms of trap and waste point that collects discharge from a sanitary terminal and discharges it into a waste drainage subsystem or that collects waste from several terminals and passes it into a single waste drainage subsystem. This includes the P and S traps from soil sanitary terminals, sinks, and basins as well as floor wastes and gully traps that provide collection points. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcWasteTerminal"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcWasteTerminal"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An electric appliance is a device intended for consumer usage that is powered by electricity. Electric appliances may be fixed in place or may be able to be moved from one space to another. Electric appliances require an electrical supply that may be supplied either by an electrical circuit or provided from a local battery source. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcElectricAppliance"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcElectricAppliance"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A mobile telecommunications appliance is a device that transmits, converts, amplifies or receives signals used in mobile networks. Note This entity is used to define specific appliances used in mobile telecommunication networks. General communications appliances and those used in fixed transmission networks should be instantiated using IfcCommunicationsAppliance.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcMobileTelecommunicationsAppliance"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcMobileTelecommunicationsAppliance"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A sanitary terminal is a fixed appliance or terminal usually supplied with water and used for drinking, cleaning or foul water disposal or that is an item of equipment directly used with such an appliance or terminal. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSanitaryTerminal"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSanitaryTerminal"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A signal is an active device that conveys information or instructions to users, by means of an audio, visual signal or a combination of both. The primary distinction from an IfcSign is that a signal is active and therefore a subtype of IfcFlowTerminal usually requiring power and data connections for its operation. An instance of IfcSignal represents a singular signalling device in a larger assembled unit or connected system, such as an individual frame within a railway signal, a single light unit in a traffic light system or an audio signal or light mounted on a navigational buoy. Signals can be physically aggregated together into an assembly which can include multiple signal instances and also sign instances and the associated supporting structural elements such as a simple pole or a rigid frame gantry see Signal Assembly for examples . Signals can be logically functionally grouped together into a signalling system a type of distribution system to represent a connected group of signals for example a group of traffic lights controlling an road intersection.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSignal"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSignal"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A fire suppression terminal has the purpose of delivering a fluid gas or liquid that will suppress a fire. A fire suppression terminal provides for all forms of sprinkler, spreader and other form of terminal that is connected to a pipework system and intended to act in the role of suppressing a fire. HISTORY New entity in IFC4 bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFireSuppressionTerminal"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFireSuppressionTerminal"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A liquid terminal is a terminating or origination point for the transfer of liquid between distribution system s . this is the point where the liquid distribution system interacts with the external environment. An example of this is a loading arm for the transfer of liquid from a docked vessel.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcLiquidTerminal"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcLiquidTerminal"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A medical device is attached to a medical piping system and operates upon medical gases to perform a specific function. Medical gases include medical air, medical vacuum, oxygen, carbon dioxide, nitrogen, and nitrous oxide. Outlets for medical gasses should use IfcValve with PredefinedType equal to GASTAP, containing an IfcDistributionPort with FlowDirection SINK and PredefinedType equal to COMPRESSEDAIR, VACUUM, or CHEMICAL, and having property sets on the port further indicating the gas type and pressure. Tanks for medical gasses should use IfcTank with PredefinedType equal to PRESSUREVESSEL, containing an IfcDistributionPort with FlowDirection SOURCE and PredefinedType CHEMICAL, and having property sets on the port further indicating the gas type and pressure range. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcMedicalDevice"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcMedicalDevice"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A stack terminal is placed at the top of a ventilating stack such as to prevent ingress by birds or rainwater or rainwater pipe to act as a collector or hopper for discharge from guttering . HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStackTerminal"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStackTerminal"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An audio visual appliance is a device that displays, captures, transmits, or receives audio or video. Audio visual appliances may be fixed in place or may be able to be moved from one space to another. They may require an electrical supply that may be supplied either by an electrical circuit or provided from a local battery source. Audio visual appliances may be connected to data circuits including specialist circuits for audio visual purposes only. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcAudioVisualAppliance"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcAudioVisualAppliance"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Space heaters utilize a combination of radiation and or natural convection using a heating source such as electricity, steam or hot water to heat a limited space or area. Examples of space heaters include radiators, convectors, baseboard and finned tube heaters. IfcUnitaryEquipment should be used for packaged units supporting a combination of heating, cooling, and or dehumidification IfcCoil should be used for coil based floor heating. HISTORY New entity in IFC4 .note .change ifc2x4 IFC4 CHANGE Electric heaters formerly defined by IfcElectricHeaterType are now represented by this entity with PredefinedType set to CONVECTOR and Pset SpaceHeaterCommon . HeatTransferDimension reflecting IfcElectricHeaterTypeEnum as follows ELECTRICPOINTHEATER POINT , ELECTRICCABLEHEATER CURVE , ELECTRICMATHEATER SURFACE . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSpaceHeater"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSpaceHeater"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A lamp is an artificial light source such as a light bulb or tube. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcLamp"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcLamp"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An air terminal is a terminating or origination point for the transfer of air between distribution system s and one or more spaces. It can also be used for the transfer of air between adjacent spaces. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcAirTerminal"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcAirTerminal"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A communications appliance transmits and receives electronic or digital information as data or sound. Communication appliances may be fixed in place or may be able to be moved from one space to another. Communication appliances require an electrical supply that may be supplied either by an electrical circuit or provided from a local battery source. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCommunicationsAppliance"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCommunicationsAppliance"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A tank is a vessel or container in which a fluid or gas is stored for later use. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcTank"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcTank"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An electric flow storage device is a device in which electrical energy is stored and from which energy may be progressively released. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcElectricFlowStorageDevice"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcElectricFlowStorageDevice"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A compressor is a device that compresses a fluid typically used in a refrigeration circuit. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCompressor"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCompressor"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A pump is a device which imparts mechanical work on fluids or slurries to move them through a channel or pipeline. A typical use of a pump is to circulate chilled water or heating hot water in a building services distribution system. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcPump"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcPump"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A fan is a device which imparts mechanical work on a gas. A typical usage of a fan is to induce airflow in a building services air distribution system. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFan"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFan"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An interceptor is a device designed and installed in order to separate and retain deleterious, hazardous or undesirable matter while permitting normal sewage or liquids to discharge into a collection system by gravity. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcInterceptor"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcInterceptor"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A filter is an apparatus used to remove particulate or gaseous matter from fluids and gases. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcFilter"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcFilter"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A duct silencer is a device that is typically installed inside a duct distribution system for the purpose of reducing the noise levels from air movement, fan noise, etc. in the adjacent space or downstream of the duct silencer device. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDuctSilencer"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDuctSilencer"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An electric flow treatment device is used to remove unwanted matter from an electric or electronic signal in a flow distribution system.",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcElectricFlowTreatmentDevice"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcElectricFlowTreatmentDevice"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A motor connection provides the means for connecting a motor as the driving device to the driven device. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcMotorConnection"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcMotorConnection"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A solar device converts solar radiation into other energy such as electric current or thermal energy. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSolarDevice"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSolarDevice"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A chiller is a device used to remove heat from a liquid via a vapor compression or absorption refrigeration cycle to cool a fluid, typically water or a mixture of water and glycol. The chilled fluid is then used to cool and dehumidify air in a building. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcChiller"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcChiller"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A tube bundle is a device consisting of tubes and bundles of tubes used for heat transfer and contained typically within other energy conversion devices, such as a chiller or coil. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcTubeBundle"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcTubeBundle"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A boiler is a closed, pressure rated vessel in which water or other fluid is heated using an energy source such as natural gas, heating oil, or electricity. The fluid in the vessel is then circulated out of the boiler for use in various processes or heating applications. IfcBoiler is a vessel solely used for heating of water or other fluids. Storage vessels, such as for drinking water storage are considered as tanks and use the IfcTank entity. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcBoiler"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcBoiler"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A heat exchanger is a device used to provide heat transfer between non mixing media such as plate and shell and tube heat exchangers. IfcHeatExchanger is commonly used on water side distribution systems to recover energy from a liquid to another liquid typically water based , whereas IfcAirToAirHeatRecovery is commonly used on air side distribution systems to recover energy from a gas to a gas usually air . HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcHeatExchanger"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcHeatExchanger"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A transformer is an inductive stationary device that transfers electrical energy from one circuit to another. IfcTransformer is used to transform electric power conversion of electric signals for other purposes is handled at other entities IfcController converts arbitrary signals, IfcAudioVisualAppliance converts signals for audio or video streams, and IfcCommunicationsAppliance converts signals for data or other communications usage. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcTransformer"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcTransformer"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A coil is a device used to provide heat transfer between non mixing media. A common example is a cooling coil, which utilizes a finned coil in which circulates chilled water, antifreeze, or refrigerant that is used to remove heat from air moving across the surface of the coil. A coil may be used either for heating or cooling purposes by placing a series of tubes the coil carrying a heating or cooling fluid into an airstream. The coil may be constructed from tubes bundled in a serpentine form or from finned tubes that give a extended heat transfer surface. Coils may also be used for non airflow cases such as embedded in a floor slab. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCoil"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCoil"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An air to air heat recovery device employs a counter flow heat exchanger between inbound and outbound air flow. It is typically used to transfer heat from warmer air in one chamber to cooler air in the second chamber i.e., typically used to recover heat from the conditioned air being exhausted and the outside air being supplied to a building , resulting in energy savings from reduced heating or cooling requirements. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcAirToAirHeatRecovery"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcAirToAirHeatRecovery"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An evaporative cooler is a device that cools air by saturating it with water vapor. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcEvaporativeCooler"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcEvaporativeCooler"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Unitary equipment typically combine a number of components into a single product, such as air handlers, pre packaged rooftop air conditioning units, heat pumps, and split systems. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcUnitaryEquipment"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcUnitaryEquipment"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An evaporator is a device in which a liquid refrigerent is vaporized and absorbs heat from the surrounding fluid. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcEvaporator"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcEvaporator"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A cooled beam or chilled beam is a device typically used to cool air by circulating a fluid such as chilled water through exposed finned tubes above a space. Typically mounted overhead near or within a ceiling, the cooled beam uses convection to cool the space below it by acting as a heat sink for the naturally rising warm air of the space. Once cooled, the air naturally drops back to the floor where the cycle begins again. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCooledBeam"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCooledBeam"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An engine is a device that converts fuel into mechanical energy through combustion. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcEngine"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcEngine"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A condenser is a device that is used to dissipate heat, typically by condensing a substance such as a refrigerant from its gaseous to its liquid state. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCondenser"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCondenser"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An electric generator is an engine that is a machine for converting mechanical energy into electrical energy. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcElectricGenerator"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcElectricGenerator"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A cooling tower is a device which rejects heat to ambient air by circulating a fluid such as water through it to reduce its temperature by partial evaporation. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCoolingTower"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCoolingTower"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A humidifier is a device that adds moisture into the air. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcHumidifier"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcHumidifier"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A burner is a device that converts fuel into heat through combustion. It includes gas, oil, and wood burners. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcBurner"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcBurner"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An electric motor is an engine that is a machine for converting electrical energy into mechanical energy. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcElectricMotor"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcElectricMotor"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A cable fitting is a fitting that is placed at a junction, transition or termination in a cable system. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCableFitting"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCableFitting"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A duct fitting is a junction or transition in a ducted flow distribution system or used to connect duct segments, resulting in changes in flow characteristics to the fluid such as direction and flow rate. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDuctFitting"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDuctFitting"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A junction box is an enclosure within which cables are connected. Cables may be members of an electrical circuit for electrical power systems or be information carriers in a telecommunications system . A junction box is typically intended to conceal a cable junction from sight, eliminate tampering or provide a safe place for electrical connection. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcJunctionBox"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcJunctionBox"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A cable carrier fitting is a fitting that is placed at junction or transition in a cable carrier system. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCableCarrierFitting"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCableCarrierFitting"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A pipe fitting is a junction or transition in a piping flow distribution system used to connect pipe segments, resulting in changes in flow characteristics to the fluid such as direction or flow rate. Pipe fittings include elbows, junctions, manifolds, and plumbing boxes. HISTORY New entity in IFC4 .note bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcPipeFitting"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcPipeFitting"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An alignment is used to define a reference system to position elements mainly for linear construction works, such as roads, rails, bridges, and others. The relative positioning along the alignment is defined by the linear referencing methodology. NOTE See ISO 19148 Geographic information Linear referencing for general definitions about linear referencing. A single alignment may have a horizontal alignment defined in the x y plane of the engineering coordinate system an accompanying vertical alignment, defined along the horizontal alignment in the distance along z coordinate space a relative alignment, defined as a span within another alignment and or at constant or variable offsets a 3D alignment, either computed from the horizontal and vertical alignment, or extracted from geospatial data. Alignments may be aggregated into referents IfcReferent or derivative alignments. Derivative alignments may be used to indicate dependent alignments, such as an alignment for a bridge that is relative to a parent alignment for a road, where the child IfcAlignment may have Axis set to IfcOffsetCurveByDistances that starts and ends at a span within the extent of the IfcAlignmentCurve defined at the Axis of the parent IfcAlignment . Alignments may be assigned to groups using IfcRelAssignsToGroup , where IfcGroup or subtypes may capture information common to multiple alignments. Supported representations of IfcAlignment.Axis are IfcAlignmentCurve as a 3D horizontal and vertical alignment represented by their alignment segments IfcAlignmentCurve as a 2D horizontal alignment represented by its horizontal alignment segments without a vertical alignment IfcOffsetCurveByDistances as a 2D or 3D curve defined relative to an IfcAlignmentCurve or another IfcOffsetCurveByDistances IfcPolyline as a 3D alignment by a 3D polyline representation such as coming from a survey IfcPolyline as a 2D horizontal alignment by a 2D polyline representation such as in very early planning phases or as a map representation NOTE Although Axis is an IfcCurve base type, only derived types IfcAlignmentCurve , IfcOffsetCurveByDistances , and IfcPolyline are meant to be supported types. Derivative specifications Model View Definitions may expand this set to include additional curve types. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcLinearPositioningElement"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcLinearPositioningElement"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcGrid ia a planar design grid defined in 3D space used as an aid in locating structural and design elements. The position of the grid ObjectPlacement is defined by a 3D coordinate system and thereby the design grid can be used in plan, section or in any position relative to the world coordinate system . The position can be relative to the object placement of other products or grids. The XY plane of the 3D coordinate system is used to place the grid axes, which are 2D curves for example, line, circle, arc, polyline . The inherited attributes Name and Description can be used to define a descriptive name of the grid and to indicate the grid s purpose. A grid is defined by normally two, or in case of a triangular grid three lists of grid axes. The following figures shows some examples. A grid may support a rectangular layout as shown in Figure 1, a radial layout as shown in Figure 2, or a triangular layout as shown in Figure 3. NOTE The PredefinedType denotes the type of grid that is represented by IfcGrid . The instantiation of IfcGridAxis s has to agree to the PredefinedType , if provided. NOTE The grid axes, defined within the design grid, are those elements to which project objects will be placed relatively using the IfcGridPlacement . Figure 1 Grid rectangular layout Figure 2 Grid radial layout Figure 3 Grid triangular layout HISTORY New entity in IFC1.0. .change ifc2x4 IFC4 CHANGE The attribute PredefinedType has been added at the end of the attribute list. .spec head Informal Propositions Grid axes, which are referenced in different lists of axes UAxes, VAxes, WAxes shall not be parallel. Grid axes should be defined such as there are no two grid axes which intersect twice see Figure 189 . NOTE Left side ambiguous intersections A1 and A2, a grid containing such grid axes is not a valid design grid Right side the conflict can be resolved by splitting one grid axis in a way, such as no ambiguous intersections exist. Figure 4 Grid intersections bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcGrid"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcGrid"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcReferent defines a position at a particular offset along an alignment curve. Referents may be used for several scenarios positioning physical elements at common locations along an alignment curve e.g. bridge piers indicating transitions for cross sections e.g. beginning of curvature where road is relatively flat, maximum curvature having super elevated cross slope to accomodate design speed indicating broken chainage where distance measurements reset or reverse directions indicating domain specific design parameters via property sets at locations along an alignment curve bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcReferent"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcReferent"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An alignment is used to define a reference system to position elements mainly for linear construction works, such as roads, rails, bridges, and others. The relative positioning along the alignment is defined by the linear referencing methodology. NOTE See ISO 19148 Geographic information Linear referencing for general definitions about linear referencing. A single alignment may have a horizontal alignment defined in the x y plane of the engineering coordinate system an accompanying vertical alignment, defined along the horizontal alignment in the distance along z coordinate space a relative alignment, defined as a span within another alignment and or at constant or variable offsets a 3D alignment, either computed from the horizontal and vertical alignment, or extracted from geospatial data. Alignments may be aggregated into referents IfcReferent or derivative alignments. Derivative alignments may be used to indicate dependent alignments, such as an alignment for a bridge that is relative to a parent alignment for a road, where the child IfcAlignment may have Axis set to IfcOffsetCurveByDistances that starts and ends at a span within the extent of the IfcAlignmentCurve defined at the Axis of the parent IfcAlignment . Alignments may be assigned to groups using IfcRelAssignsToGroup , where IfcGroup or subtypes may capture information common to multiple alignments. Supported representations of IfcAlignment.Axis are IfcAlignmentCurve as a 3D horizontal and vertical alignment represented by their alignment segments IfcAlignmentCurve as a 2D horizontal alignment represented by its horizontal alignment segments without a vertical alignment IfcOffsetCurveByDistances as a 2D or 3D curve defined relative to an IfcAlignmentCurve or another IfcOffsetCurveByDistances IfcPolyline as a 3D alignment by a 3D polyline representation such as coming from a survey IfcPolyline as a 2D horizontal alignment by a 2D polyline representation such as in very early planning phases or as a map representation NOTE Although Axis is an IfcCurve base type, only derived types IfcAlignmentCurve , IfcOffsetCurveByDistances , and IfcPolyline are meant to be supported types. Derivative specifications Model View Definitions may expand this set to include additional curve types. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcAlignment"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcAlignment"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A distribution port is an inlet or outlet of a product through which a particular substance may flow. Distribution ports are used for passage of solid, liquid, or gas substances, as well as electricity for power or communications. Flow segments pipes, ducts, cables may be used to connect ports across products. Distribution ports are defined by system type and flow direction such that for two ports to be connected, they must share the same system type and have opposite flow directions one side being a SOURCE and the other being a SINK . Ports are similar to openings in that they do not have any visible geometry such geometry is captured at the shape representation of the enclosing element or element type. Ports may have placement that indicates the position and orientation of the connection. Ports are assigned the distribution systems in order to indicate its role in a particular system, e.g. cold water inlet. HISTORY New entity in IFC2x2 .change ifc2x4 IFC4 CHANGE Ports are now related to products and product types using the IfcRelNests relationship use of IfcRelConnectsPortToElement is now reserved for dynamically attached ports such as drilling a hole in a tank . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcDistributionPort"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcDistributionPort"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "This entity defines a reaction which occurs distributed over a surface. A surface reaction may be connected with a surface member or surface connection. HISTORY New entity in IFC4. Coordinate Systems See definitions at IfcStructuralActivity . Topology Use Definitions See definitions at IfcStructuralActivity . .spec head Informal Propositions If the surface reaction is of the predefined type CONST, SELF IfcStructuralActivity.AppliedLoad must not be of type IfcStructuralLoadConfiguration. If the surface reaction is of the predefined type BILINEAR, SELF IfcStructuralActivity.AppliedLoad shall be of type IfcStructuralLoadConfiguration and shall contain three items with two dimensional IfcStructuralLoadConfiguration.Locations, defining the location of the result samples in local coordinates of the surface reaction. If the surface reaction is of the predefined type DISCRETE, SELF IfcStructuralActivity.AppliedLoad shall be of type IfcStructuralLoadConfiguration and shall contain two or more items with two dimensional locations. If the surface reaction is of the predefined type ISOCONTOUR, SELF IfcStructuralActivity.AppliedLoad shall be of type IfcStructuralLoadConfiguration and shall contain the same number of items as the set SELF.IfcProduct.Representation.Representations .Items. Each item in the load configuration shall have a two dimensional location, defining the location of the result samples in local coordinates of the surface reaction. Each item in SELF IfcStructuralActivity.AppliedLoad shall be located at exactly one of the isocontours. NOTE The set of representation items is unordered, hence result locations are required to correlate result values and isocontours. NOTE Isocontours are represented as IfcPCurves which are defined in terms of surface parameters u,v, while result locations are given in local surface item coordinates x,y. It is strongly recommended that the surface parameterization u,v is scaled 1 1 in order to avoid different scales of u,v versus x,y. If u,v are scaled 1 1 and the IfcPCurve s base surface is identical with the surface item s base surface, u,v and local x,y are identical. All items in SELF IfcStructuralActivity.AppliedLoad IfcStructuralLoadConfiguration.Values shall be of the same entity type. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStructuralReaction"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStructuralReaction"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A structural curve action defines an action which is distributed over a curve. A curve action may be connected with a curve member or curve connection, or surface member or surface connection. HISTORY New entity in IFC4. .change ifc2x4 IFC4 CHANGE Former entity IfcStructuralLinearActionVarying from IFC2x2 has been removed and are replaced by this entity. Coordinate Systems See definitions at IfcStructuralActivity . Topology Use Definitions Standard Case If connected with a curve item, instances of IfcStructuralCurveAction shall not have an ObjectPlacement nor a Representation . It is implied that the placement and representation of the IfcStructuralActivity is the same as the ones of the member or connection. Special Case 1 If connected with a surface item, instances of IfcStructuralCurveAction shall have an ObjectPlacement and Representation , containing an IfcEdgeCurve . See IfcStructuralActivity for further definitions. Special Case 2 If not connected with a structural item which may happen in an incomplete or conceptual model , a curve action should have an ObjectPlacement and Representation , containing an IfcEdgeCurve . See IfcStructuralActivity for further definitions. .spec head Informal Propositions 1. If the curve action is of the predefined type CONST, SINUS, or PARABOLA, SELF IfcStructuralActivity.AppliedLoad must not be of type IfcStructuralLoadConfiguration . In case of SINUS and PARABOLA, the load item defines the maximum of the load at the centre of the load distribution. 2. If the curve action is of the predefined type LINEAR, SELF IfcStructuralActivity.AppliedLoad shall be of type IfcStructuralLoadConfiguration and shall contain two items. 3. If the curve action is of the predefined type POLYGONAL, SELF IfcStructuralActivity.AppliedLoad shall be of type IfcStructuralLoadConfiguration and shall contain three or more items. 4. If the curve action is of the predefined type DISCRETE, SELF IfcStructuralActivity.AppliedLoad shall be of type IfcStructuralLoadConfiguration and shall contain two or more items. 5. In case of types LINEAR, POLYGONAL, and DISCRETE, the load items shall have one dimensional IfcStructuralLoadConfiguration.Locations , defining the location of the load samples in local coordinates of the curve action. The load items shall be provided in ascending order according to their locations. The first and the last load item define the extent of the load distribution. 6. Point actions must be of type DISCRETE, thus contain two or more load points. Single point loads are modeled by IfcStructuralPointAction . 7. All items in SELF IfcStructuralActivity.AppliedLoad IfcStructuralLoadConfiguration.Values shall be of the same entity type. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStructuralAction"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStructuralAction"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "This entity defines a reaction which occurs at a point. A point reaction is typically connected with a point connection. It may also be connected with a curve member or curve connection, or surface member or surface connection. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE Attributes in the supertypes IfcStructuralActivity and IfcStructuralReaction changed. Use definitions changed, informal propositions added. Coordinate Systems See definitions at IfcStructuralActivity . Topology Use Definitions Standard Case If connected with a point item, instances of IfcStructuralPointReaction shall not have an ObjectPlacement nor a Representation . It is implied that the placement and representation of the reaction is the same as the structural item. Special Case 1 If connected with a curve item or surface item, instances of IfcStructuralPointReaction shall have an ObjectPlacement and Representation , containing an IfcVertexPoint . See IfcStructuralActivity for further definitions. NOTE In order to model concentrated reactions on a curve or surface item, IfcStructuralCurveReaction or IfcStructuralSurfaceAction of type DISCRETE is preferable since they do not require an extra topology representation in this case. An IfcStructuralPointReaction should be used for a concentrated reaction on a curve or surface item only when an explicit vertex point representation is actually desired. Special Case 2 If not connected with a structural item which may happen in an incomplete or conceptual model , a point action should have an ObjectPlacement and Representation , containing an IfcVertexPoint . See IfcStructuralActivity for further definitions. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStructuralPointReaction"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStructuralPointReaction"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "This entity defines a reaction which occurs distributed over a curve. A curve reaction may be connected with a curve member or curve connection, or surface member or surface connection. HISTORY New entity in IFC4. Coordinate Systems See definitions at IfcStructuralActivity . Topology Use Definitions Standard Case If connected with a curve item, instances of IfcStructuralCurveRection shall not have an ObjectPlacement nor a Representation . It is implied that the placement and representation of the IfcStructuralActivity is the same as the ones of the member or connection. Special Case If connected with a surface item, instances of IfcStructuralCurveReaction shall have an ObjectPlacement and Representation , containing an IfcEdgeCurve . See IfcStructuralActivity for further definitions. .spec head Informal Propositions 1. If the curve reaction is of the predefined type CONST, SELF IfcStructuralActivity.AppliedLoad must not be of type IfcStructuralLoadConfiguration . 2. If the curve reaction is of the predefined type LINEAR, SELF IfcStructuralActivity.AppliedLoad shall be of type IfcStructuralLoadConfiguration and shall contain two items. 3. If the curve reaction is of the predefined type POLYGONAL, SELF IfcStructuralActivity.AppliedLoad shall be of type IfcStructuralLoadConfiguration and shall contain three or more items. 4. If the curve action is of the predefined type DISCRETE, SELF IfcStructuralActivity.AppliedLoad shall be of type IfcStructuralLoadConfiguration and shall contain two or more items. 5. In case of types LINEAR, POLYGONAL, and DISCRETE, the load items shall have one dimensional IfcStructuralLoadConfiguration.Locations , defining the location of the result samples in local coordinates of the curve reaction. The load items shall be provided in ascending order according to their locations. The first and the last load item define the extent of the result distribution. 6. If the curve reaction is of the predefined type EQUIDISTANT, SELF IfcStructuralActivity.AppliedLoad shall be of type IfcStructuralLoadConfiguration and shall contain two or more items. IfcStructuralLoadConfiguration.Locations shall be omitted as it is implicit. The load items shall be provided in ascending order. The first and the last load item are located at the beginning and end of the result distribution, respectively. 7. All items in SELF IfcStructuralActivity.AppliedLoad IfcStructuralLoadConfiguration.Values shall be of the same entity type. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStructuralCurveReaction"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStructuralCurveReaction"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "This entity defines a reaction which occurs distributed over a surface. A surface reaction may be connected with a surface member or surface connection. HISTORY New entity in IFC4. Coordinate Systems See definitions at IfcStructuralActivity . Topology Use Definitions See definitions at IfcStructuralActivity . .spec head Informal Propositions If the surface reaction is of the predefined type CONST, SELF IfcStructuralActivity.AppliedLoad must not be of type IfcStructuralLoadConfiguration. If the surface reaction is of the predefined type BILINEAR, SELF IfcStructuralActivity.AppliedLoad shall be of type IfcStructuralLoadConfiguration and shall contain three items with two dimensional IfcStructuralLoadConfiguration.Locations, defining the location of the result samples in local coordinates of the surface reaction. If the surface reaction is of the predefined type DISCRETE, SELF IfcStructuralActivity.AppliedLoad shall be of type IfcStructuralLoadConfiguration and shall contain two or more items with two dimensional locations. If the surface reaction is of the predefined type ISOCONTOUR, SELF IfcStructuralActivity.AppliedLoad shall be of type IfcStructuralLoadConfiguration and shall contain the same number of items as the set SELF.IfcProduct.Representation.Representations .Items. Each item in the load configuration shall have a two dimensional location, defining the location of the result samples in local coordinates of the surface reaction. Each item in SELF IfcStructuralActivity.AppliedLoad shall be located at exactly one of the isocontours. NOTE The set of representation items is unordered, hence result locations are required to correlate result values and isocontours. NOTE Isocontours are represented as IfcPCurves which are defined in terms of surface parameters u,v, while result locations are given in local surface item coordinates x,y. It is strongly recommended that the surface parameterization u,v is scaled 1 1 in order to avoid different scales of u,v versus x,y. If u,v are scaled 1 1 and the IfcPCurve s base surface is identical with the surface item s base surface, u,v and local x,y are identical. All items in SELF IfcStructuralActivity.AppliedLoad IfcStructuralLoadConfiguration.Values shall be of the same entity type. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStructuralSurfaceReaction"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStructuralSurfaceReaction"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "This entity defines an action with constant value which is distributed over a surface. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE Intermediate supertype IfcStructuralSurfaceAction inserted. NOTE Like its supertype IfcStructuralSurfaceAction , this action type may also act on curved faces. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStructuralSurfaceAction"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStructuralSurfaceAction"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "This entity defines an action which acts on a point. A point action is typically connected with a point connection. It may also be connected with a curve member or curve connection, or surface member or surface connection. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE Attributes in the supertypes IfcStructuralActivity and IfcStructuralAction changed. Use definitions changed, informal propositions added. Coordinate Systems See definitions at IfcStructuralActivity . Topology Use Definitions Standard Case If connected with a point item, instances of IfcStructuralPointAction shall not have an ObjectPlacement nor a Representation . It is implied that the placement and representation of the action is the same as the structural item. Special Case 1 If connected with a curve item or surface item, instances of IfcStructuralPointAction shall have an ObjectPlacement and Representation , containing an IfcVertexPoint . See IfcStructuralActivity for further definitions. NOTE In order to model concentrated actions on a curve or surface item, IfcStructuralCurveAction or IfcStructuralSurfaceAction of type DISCRETE is preferable since they do not require an extra topology representation in this case. An IfcStructuralPointAction should be used for a concentrated action on a curve or surface item only when an explicit vertex point representation is actually desired. Special Case 2 If not connected with a structural item which may happen in an incomplete or conceptual model , a point action should have an ObjectPlacement and Representation , containing an IfcVertexPoint . See IfcStructuralActivity for further definitions. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStructuralPointAction"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStructuralPointAction"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "This entity defines an action with constant value which is distributed over a curve. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE Intermediate supertype IfcStructuralCurveAction inserted. NOTE Like its supertype IfcStructuralCurveAction , this action type may also act on curved edges. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStructuralCurveAction"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStructuralCurveAction"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "This entity defines an action with constant value which is distributed over a surface. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE Intermediate supertype IfcStructuralSurfaceAction inserted. NOTE Like its supertype IfcStructuralSurfaceAction , this action type may also act on curved faces. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStructuralPlanarAction"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStructuralPlanarAction"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "This entity defines an action with constant value which is distributed over a curve. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE Intermediate supertype IfcStructuralCurveAction inserted. NOTE Like its supertype IfcStructuralCurveAction , this action type may also act on curved edges. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStructuralLinearAction"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStructuralLinearAction"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Instances of IfcStructuralSurfaceConnection describe face nodes , i.e. faces where two or more surface members are joined, or face supports. Face surfaces may be planar or curved. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE Use definitions added. Coordinate Systems See definitions at IfcStructuralItem . The local coordinate system is established by the reference surface given by topology representation. Topology Use Definitions Instances of IfcStructuralSurfaceConnection shall have a topology representation which consists of one IfcFaceSurface , representing the reference surface of the surface connection. See definitions at IfcStructuralItem for further specifications. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStructuralConnection"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStructuralConnection"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Instances of IfcStructuralCurveMember describe edge members, i.e. structural analysis idealizations of beams, columns, rods etc.. Curve members may be straight or curved. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE Attribute Axis and WHERE rule added. Use definitions changed. Coordinate Systems See definitions at IfcStructuralItem . The local coordinate system is established by the reference curve given by topology representation and by the attribute Axis . The local x axis is parallel with the tangent on the reference curve. The local z axis is located in the surface which is created by sweeping Axis along the reference curve and is directed according to Axis . The local y axis is directed such that x,y,z form a right handed Cartesian coordinate system. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStructuralMember"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStructuralMember"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Instances of IfcStructuralCurveConnection describe edge nodes , i.e. edges where two or more surface members are joined, or edge supports. Edge curves may be straight or curved. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE Attribute Axis added, allowing for skewed supports. Use definitions added. Coordinate Systems See definitions at IfcStructuralItem . The local coordinate system is established by the reference curve given by topology representation and by the attribute Axis . The local x axis is parallel with the tangent on the reference curve. The local z axis is located in the surface which is created by sweeping Axis along the reference curve and is directed according to Axis . The local y axis is directed such that x,y,z form a right handed Cartesian coordinate system. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStructuralCurveConnection"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStructuralCurveConnection"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Instances of IfcStructuralPointConnection describe structural nodes or point supports. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE Attribute ConditionCoordinateSystem added, allowing for skewed supports. Use definitions added. Coordinate Systems See definitions at IfcStructuralItem . The local coordinate system is established by the reference point given by topology representation and by the attribute ConditionCoordinateSystem . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStructuralPointConnection"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStructuralPointConnection"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "Instances of IfcStructuralSurfaceConnection describe face nodes , i.e. faces where two or more surface members are joined, or face supports. Face surfaces may be planar or curved. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE Use definitions added. Coordinate Systems See definitions at IfcStructuralItem . The local coordinate system is established by the reference surface given by topology representation. Topology Use Definitions Instances of IfcStructuralSurfaceConnection shall have a topology representation which consists of one IfcFaceSurface , representing the reference surface of the surface connection. See definitions at IfcStructuralItem for further specifications. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStructuralSurfaceConnection"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStructuralSurfaceConnection"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "This entity describes surface members with varying section properties. The properties are provided by means of Pset StructuralSurfaceMemberVaryingThickness via IfcRelDefinesByProperties , or by means of aggregation An instance of IfcStructuralSurfaceMemberVarying may be composed of two or more instances of IfcStructuralSurfaceMember with differing section properties. These subordinate members relate to the instance of IfcStructuralSurfaceMemberVarying by IfcRelAggregates . NOTE It is recommended that structural activities actions or reactions are not connected with aggregated IfcStructuralSurfaceMemberVarying but only with the IfcStructuralSurfaceMember s in the aggregation. That way, difficulties in interpretation of local coordinates are avoided. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE Use definition changed and attributes deleted. Coordinate Systems See definitions at IfcStructuralItem and IfcStructuralSurfaceMember . The local coordinates of an aggregate are generally undefined since continuity of local coordinates of the parts is not ensured. Material Use Definition In case of aggregation, only the individual parts direct instances of IfcStructuralSurfaceMember carry material and thickness information. Otherwise, definitions at IfcStructuralSurfaceMember apply. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStructuralSurfaceMember"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStructuralSurfaceMember"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "This entity describes edge members with varying profile properties. Each instance of IfcStructuralCurveMemberVarying is composed of two or more instances of IfcStructuralCurveMember with differing profile properties. These subordinate members relate to the instance of IfcStructuralCurveMemberVarying by IfcRelAggregates . NOTE A curve member whose variation of profile properties can be sufficiently described by a start profile and an end profile e.g. tapers shall be modeled as a single direct instance of the supertype IfcStructuralCurveMember . NOTE It is recommended that structural activities actions or reactions are not connected with aggregated IfcStructuralCurveMemberVarying but only with the IfcStructuralCurveMember s in the aggregation. That way, difficulties in interpretation of local coordinates are avoided. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE Use definition changed. Coordinate Systems See definitions at IfcStructuralItem and IfcStructuralCurveMember . The local coordinates of the aggregate are derived from those of its parts. Length measures in local x direction of the aggregate depend on continuity and lengths of the parts. The Axis of the aggregate shal be the same as the Axis of the part at the start of the aggregate. Material Use Definition Only the individual parts direct instances of IfcStructuralCurveMember carry material and profile information. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStructuralCurveMember"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStructuralCurveMember"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "This entity describes surface members with varying section properties. The properties are provided by means of Pset StructuralSurfaceMemberVaryingThickness via IfcRelDefinesByProperties , or by means of aggregation An instance of IfcStructuralSurfaceMemberVarying may be composed of two or more instances of IfcStructuralSurfaceMember with differing section properties. These subordinate members relate to the instance of IfcStructuralSurfaceMemberVarying by IfcRelAggregates . NOTE It is recommended that structural activities actions or reactions are not connected with aggregated IfcStructuralSurfaceMemberVarying but only with the IfcStructuralSurfaceMember s in the aggregation. That way, difficulties in interpretation of local coordinates are avoided. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE Use definition changed and attributes deleted. Coordinate Systems See definitions at IfcStructuralItem and IfcStructuralSurfaceMember . The local coordinates of an aggregate are generally undefined since continuity of local coordinates of the parts is not ensured. Material Use Definition In case of aggregation, only the individual parts direct instances of IfcStructuralSurfaceMember carry material and thickness information. Otherwise, definitions at IfcStructuralSurfaceMember apply. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStructuralSurfaceMemberVarying"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStructuralSurfaceMemberVarying"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "This entity describes edge members with varying profile properties. Each instance of IfcStructuralCurveMemberVarying is composed of two or more instances of IfcStructuralCurveMember with differing profile properties. These subordinate members relate to the instance of IfcStructuralCurveMemberVarying by IfcRelAggregates . NOTE A curve member whose variation of profile properties can be sufficiently described by a start profile and an end profile e.g. tapers shall be modeled as a single direct instance of the supertype IfcStructuralCurveMember . NOTE It is recommended that structural activities actions or reactions are not connected with aggregated IfcStructuralCurveMemberVarying but only with the IfcStructuralCurveMember s in the aggregation. That way, difficulties in interpretation of local coordinates are avoided. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE Use definition changed. Coordinate Systems See definitions at IfcStructuralItem and IfcStructuralCurveMember . The local coordinates of the aggregate are derived from those of its parts. Length measures in local x direction of the aggregate depend on continuity and lengths of the parts. The Axis of the aggregate shal be the same as the Axis of the part at the start of the aggregate. Material Use Definition Only the individual parts direct instances of IfcStructuralCurveMember carry material and profile information. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcStructuralCurveMemberVarying"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcStructuralCurveMemberVarying"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcConstructionMaterialResource identifies a material resource type in a construction project. HISTORY New entity in IFC2.0. .change ifc2x4 IFC4 CHANGE The attribute Suppliers has been deleted use IfcRelAssignsToResource to assign an IfcActor to fulfill the role as a supplier. The attribute UsageRatio has been deleted use BaseQuantityConsumed and BaseQuantityProduced to indicate material usage. Occurrences of IfcConstructionMaterialResource are consumed wholly or partially , or occupied during a construction work task IfcTask . Similar to IfcConstructionProductResource , sometimes things such as 5000kg of gravel are already instantiated as an instance of an IfcProduct subtype because it is a result of a work task for example, transporting gravel . In this case, the instance of IfcConstructionMaterialResource can be associated with the product instance 5000kg of gravel to provide more information for resource uses. Nevertheless, IfcConstructionMaterialResource should only be used to represent resource usage, but not product substances. NOTE This entity is not the same as IfcMaterial . One one hand, IfcConstructionMaterialResource represents usage of bulk materials such as sand, gravels, nails and so on. Physical manifestations can be instantiated from IfcProduct as well, depending on their uses in the system, and such an IfcProduct object can be assigned to the IfcConstructionMaterialResource object via IfcRelAssignsToResource . On the other hand, IfcMaterial is about physical materials that a physical building element consists of, possibly with detailed material layering information. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcConstructionResource"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcConstructionResource"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcCrewResource represents a collection of internal resources used in construction processes. HISTORY New entity in IFC2.0. Identification of people and equipment of a crew is achieved through their specification at the level of the component. Therefore, knowing which persons are within a crew is achieved through identifying the persons assigned to each IfcLaborResource within the IfcCrewResource . Similarly, identifying that a screwing machine for pipe fitting forms part of the crew is achieved by relating an appropriate instance of IfcElementComponent to the IfcConstructionEquipmentResource forming an element of the IfcCrewResource . bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCrewResource"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCrewResource"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An IfcLaborResource is used in construction with particular skills or crafts required to perform certain types of construction or management related work. HISTORY New entity in IFC2.0. .change ifc2x4 IFC4 CHANGE The attribute Skillset has been deleted use LongDescription to describe the skillset. The purpose of an IfcLaborResource is to identify a skillset that may be required or used. The skillset identified may be for instance charge hand, foreman, labourer, plumbers mate etc. and provides a designation of a particular level of skill. It can be used to identify the generic type of labour resource that is required for a purpose without having to be specific about the actor person or organization providing the resource occurrence. It may be particularly useful when creating an overall plan for a process or processes. For instance, within maintenance or work planning there may be a known task that needs to be done which is planned to require a chargehand pipe fitter . There may be several such labour resources available and so the need to identify which will be used is not necessary at the planning stage. At a later stage, individual actors can be determined for the labour resources. This is achieved through specifying the actor through IfcActor . The actor is then identified as the labour resource occurrence through the IfcRelAssignsToResource.RelatedResource attribute. The IfcLaborResource provides the IfcRelAssignsToResource . RelatingResource attribute. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcLaborResource"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcLaborResource"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcConstructionEquipmentResource is usage of construction equipment to assist in the performance of construction. Construction Equipment resources are wholly or partially consumed or occupied in the performance of construction. HISTORY New entity in IFC2.0. Occurrences of IfcConstructionEquipmentResource are products that are used as resources to assist the process of construction. More specifically, they are products that are standalone items brought to a project to fulfil a particular purpose. Examples might be a tower crane or other mobile crane, a screwing machine, or a lifting hoist. Instances of any subtype of IfcProduct may be assigned to the equipment resource using IfcRelAssignsToResource in order to characterize the equipment further, as described at the supertype IfcResource . Examples of relevant subtypes of IfcProduct are IfcTransportElement , IfcDiscreteAccessory , or IfcProxy for particular cases where more precise usage details are not available bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcConstructionEquipmentResource"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcConstructionEquipmentResource"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcConstructionProductResource defines the role of a product that is consumed wholly or partially , or occupied in the performance of construction. HISTORY New entity in IFC2.0. Renamed from IfcProductResource in IFC2x. Occurrences of IfcConstructionProductResource are usage of products to assist the process of construction. More specifically, they are usage of products that result from some construction processes and that are then used as resources to facilitate further construction. For instance, formworks can be instantiated as products resulting from the process constructing formwork . However, they are used as resources in the process pouring concrete in a later stage of the project. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcConstructionProductResource"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcConstructionProductResource"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcSubContractResource is a construction resource needed in a construction process that represents a sub contractor. HISTORY New entity in IFC2.0. .change ifc2x4 IFC4 CHANGE The attribute SubContractor has been deleted use IfcRelAssignsToResource to assign an IfcActor to fulfill the role as the subcontractor. The attribute JobDescription has been deleted use LongDescription to describe the job. An IfcSubContractResource can be used in cost estimating and work planning with or without specifying the subcontractor and contract agreement. The purpose of an IfcSubContractResource is to indicate work of a particular type that is that is to be engaged through the use of a sub contract. Its aim is to identify the description of the sub contract work required. It can be used to identify the generic type of sub contract resource that is required for a purpose without having to be specific about the actor person or organization providing the resource occurrence. It may be particularly useful when creating an overall plan for a process or processes. For instance, within maintenance or work planning there may be a known task that needs to be done which is planned to require an insulation specialist . A subcontract resource may be described at various stages and levels of detail through its assignments Subcontract resource designated for particular tasks Actors identified to request bids Cost schedules bids received from actors Project order work order, change order, etc. executed bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcSubContractResource"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcSubContractResource"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcConstructionMaterialResource identifies a material resource type in a construction project. HISTORY New entity in IFC2.0. .change ifc2x4 IFC4 CHANGE The attribute Suppliers has been deleted use IfcRelAssignsToResource to assign an IfcActor to fulfill the role as a supplier. The attribute UsageRatio has been deleted use BaseQuantityConsumed and BaseQuantityProduced to indicate material usage. Occurrences of IfcConstructionMaterialResource are consumed wholly or partially , or occupied during a construction work task IfcTask . Similar to IfcConstructionProductResource , sometimes things such as 5000kg of gravel are already instantiated as an instance of an IfcProduct subtype because it is a result of a work task for example, transporting gravel . In this case, the instance of IfcConstructionMaterialResource can be associated with the product instance 5000kg of gravel to provide more information for resource uses. Nevertheless, IfcConstructionMaterialResource should only be used to represent resource usage, but not product substances. NOTE This entity is not the same as IfcMaterial . One one hand, IfcConstructionMaterialResource represents usage of bulk materials such as sand, gravels, nails and so on. Physical manifestations can be instantiated from IfcProduct as well, depending on their uses in the system, and such an IfcProduct object can be assigned to the IfcConstructionMaterialResource object via IfcRelAssignsToResource . On the other hand, IfcMaterial is about physical materials that a physical building element consists of, possibly with detailed material layering information. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcConstructionMaterialResource"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcConstructionMaterialResource"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An occupant is a type of actor that defines the form of occupancy of a property. The principal purpose of IfcOccupant is to determine the nature of occupancy of a property for a particular actor. All characteristics relating to the actor name and organization details are inherited from the IfcActor entity. HISTORY New entity in IFC2x bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcOccupant"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcOccupant"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An IfcWorkSchedule represents a task schedule of a work plan, which in turn can contain a set of schedules for different purposes. HISTORY New entity in IFC2.0. .use head Declaration Use Definition IfcWorkSchedule can reference a project the single IfcProject instance via IfcRelDeclares . Figure 1 shows the backbone structure of a work schedule that defines 1 a context through IfcRelDeclares not necessarily the project and 2 controls tasks typically the schedule summary task and resources. Please note that a work calendar shall be assigned to the summary task and not the work schedule. If an assigned IfcTask is a root level task, such task must be declared on the IfcProject using the IfcRelDeclares relationship. work schedule instantiation diagram .. .. .. .. .. .. figures ifcworkschedule instantiation diagram.png Figure 1 Work schedule relationships bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcWorkControl"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcWorkControl"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A project order is a directive to purchase products and or perform work, such as for construction or facilities management. Project orders are typically formal contracts between two organizations, where cost and time information may be rigid or flexible according to contained schedule types and constraints. HISTORY New entity in IFC2.0 .change ifc2x4 IFC4 CHANGE Attribute ID renamed to Identification and promoted to supertype IfcControl . Attribute LongDescription added. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcProjectOrder"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcProjectOrder"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An IfcWorkCalendar defines working and non working time periods for tasks and resources. It enables to define both specific time periods, such as from 7 00 till 12 00 on 25th August 2009, as well as repetitive time periods based on frequently used recurrence patterns, such as each Monday from 7 00 till 12 00 between 1st March 2009 and 31st December 2009. HISTORY New entity in IFC4. A work calendar is a subtype of IfcControl and thus inherits the feature for controlling other objects through IfcRelAssignsToControl , which is used to define a work calendar for tasks IfcTask and resources IfcResource . It also inherits a name and description attribute, whereas a name shall be given and a description may be given as an indication of its content and usage. The definition of time periods can be derived from a base calendar and or modified defined by a set of working times and non working exception times. All time periods defined by IfcWorkCalendar.ExceptionTimes override the time periods inherited from the base calendar base calendar is defined as the next applicable calendar for the task or resource . Thus, exception times replace the working times from the base calendar. Figure 1 shows the definition of a work calendar, which is defined by a set of work times and exception times. The work times are defined as recurring patterns with optional boundaries applying from and or to a specific date . The shown example defines a simple work calendar with working times Monday to Thursday 8 00 to 12 00 and 13 00 to 17 00, Friday 8 00 to 14 00 and as exception every 1st Monday in a month the work starts one hour later i.e. the working time on every 1st Monday in a month is overriden to be 9 00 to 12 00 and 13 00 to 17 00. Both the working time and the exception time is valid for the period of 01.09.2010 till 30.08.2011. task type instantiation diagram .. .. .. .. .. .. figures ifcworkcalendar instantiation diagram.png Figure 1 Work calendar instantiation bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcWorkCalendar"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcWorkCalendar"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "IfcPerformanceHistory is used to document the actual performance of an occurrence instance over time. It includes machine measured data from building automation systems and human specified data such as task and resource usage. The data may represent actual conditions, predictions, or simulations. The realtime data tracked by performance history takes the form of property sets where all properties are based on time series. Unlike design based data at occurrences and types, performance driven data is time sensitive and may change in realtime by some measurement device. Data may be captured at irregular intervals such as when values change beyond established thresholds, or at regular intervals of specified duration. Declaration use definition IfcPerformanceHistory may be declared within a project using IfcRelDeclares where RelatingContext refers to the IfcProject and RelatedDefinitions includes the IfcPerformanceHistory . Default units used for property sets are indicated by the declaring project. Only top level objects are declared nested performance history objects through IfcRelNests do not participate in such relationship. HISTORY New entity in IFC2x2. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcPerformanceHistory"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcPerformanceHistory"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An IfcCostItem describes a cost or financial value together with descriptive information that describes its context in a form that enables it to be used within a cost schedule. An IfcCostItem can be used to represent the cost of goods and services, the execution of works by a process, lifecycle cost and more. Each instance of IfcCostItem may have a name and a description. Depending on the use for which the cost is intended, these values should be asserted on the basis of agreement. For instance, the Name attribute could be used to provide a common value that enables distinct instances to be brought together in a nesting arrangement see below while the Description attribute may be used to provide text used for item description in a costing schedule. An IfcCostItem can link one or many IfcCostValue s representing a unit cost, total cost, or a unit cost with one or many quantities used to generate the total cost. The quantities can be given as individual quantities, or those quantities are provided as element quantities by one or many building elements. The IfcCostValue.CostType attribute indicates the category of cost, which may be used to present the value in a particular column. For nested cost items having IfcRelNests relationship , IfcCostValue.CostType is significant such that IfcCostValue.AppliedValue is calculated as the sum of all nested costs having the same IfcCostValue.CostType or if set to an asterisk , then the sum of all nested costs of all cost types. An IfcCostValue may represent an original value or a value derived from formulas using IfcAppliedValueRelationship . For example, taxes may be calculated as a percentage of a subtotal. HISTORY New entity in IFC2.0. .change ifc2x4 IFC4 CHANGE Attribute PredefinedType , CostValues , and CostQuantities added. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCostItem"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCostItem"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An IfcCostSchedule brings together instances of IfcCostItem either for the purpose of identifying purely cost information as in an estimate for constructions costs or for including cost information within another presentation form such as a work order. HISTORY New entity in IFC2.0. .change ifc2x4 IFC4 CHANGE Attribute ID renamed to Identification and promoted to supertype IfcControl , PredefinedType made optional, attributes PreparedBy , SubmittedBy , TargetUsers removed. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcCostSchedule"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcCostSchedule"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A request is the act or instance of asking for something, such as a request for information, bid submission, or performance of work. Requests may take many forms depending on the need including fault reports for maintenance, requests for small works, and purchase requests where these are to be made through a help desk or buying function . HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE Atribute RequestID renamed to Identification and promoted to supertype IfcControl , attributes PredefinedType , Status , and LongDescription added. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcActionRequest"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcActionRequest"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "A permit is a permission to perform work in places and on artifacts where regulatory, security or other access restrictions apply. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE Attribute PermitID renamed to Identification and promoted to supertype IfcControl , attributes PredefinedType , Status , and LongDescription added. bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcPermit"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcPermit"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An IfcWorkPlan represents work plans in a construction or a facilities management project. HISTORY New entity in IFC2.0 A work plan contains a set of work schedules for different purposes including construction and facilities management . Contained work schedules are defined through the IfcRelAggregates relationship. Through inheritance from IfcWorkControl it is also possible to define references to activities for example, IfcTask and resources used in the work plan. A work plan has information such as start date, finish date, total free float, and so on. IfcWorkPlan can also refer to the construction project represented by the single IfcProject instance please also check the definition of IfcWorkControl . Figure 1 shows the backbone structure of a work plan that defines 1 contained work schedules through IfcRelAggregates and 2 , if not assigned otherwise to contained work schedules, assigned tasks and resources through IfcRelAssignsToControl . If an assigned IfcTask is a root level task, such task must be declared on the IfcProject using the IfcRelDeclares relationship. work plan instantiation diagram .. .. .. .. .. .. figures ifcworkplan instantiation diagram.png Figure 1 Work plan relationships bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcWorkPlan"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcWorkPlan"
              }
            ],
            "required": [
              "type"
            ]
          },
          {
            "description": "An IfcWorkSchedule represents a task schedule of a work plan, which in turn can contain a set of schedules for different purposes. HISTORY New entity in IFC2.0. .use head Declaration Use Definition IfcWorkSchedule can reference a project the single IfcProject instance via IfcRelDeclares . Figure 1 shows the backbone structure of a work schedule that defines 1 a context through IfcRelDeclares not necessarily the project and 2 controls tasks typically the schedule summary task and resources. Please note that a work calendar shall be assigned to the summary task and not the work schedule. If an assigned IfcTask is a root level task, such task must be declared on the IfcProject using the IfcRelDeclares relationship. work schedule instantiation diagram .. .. .. .. .. .. figures ifcworkschedule instantiation diagram.png Figure 1 Work schedule relationships bSI Documentation",
            "type": "object",
            "properties": {
              "type": {
                "const": "ifcWorkSchedule"
              }
            },
            "allOf": [
              {
                "$ref": "#/definitions/ifcWorkSchedule"
              }
            ],
            "required": [
              "type"
            ]
          }
        ]
      }
    }
  },
  "required": [
    "file_schema",
    "data"
  ],
  "definitions": {
    "ifcPropertyDefinition": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcPropertyDefinition"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRoot": {
      "type": "object",
      "properties": {
        "globalId": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "name": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "description": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcRoot"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelationship": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelationship"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcObjectDefinition": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcObjectDefinition"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcPropertyTemplateDefinition": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcPropertyTemplateDefinition"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcPropertySetDefinition": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcPropertySetDefinition"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcPropertyTemplate": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcPropertyTemplate"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcPropertySetTemplate": {
      "type": "object",
      "properties": {
        "applicableEntity": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcPropertyTemplateDefinition"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcComplexPropertyTemplate": {
      "type": "object",
      "properties": {
        "usageName": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcPropertyTemplate"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSimplePropertyTemplate": {
      "type": "object",
      "properties": {
        "primaryMeasureType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "secondaryMeasureType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "primaryUnit": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "secondaryUnit": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "expression": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "accessState": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcPropertyTemplate"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcQuantitySet": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcQuantitySet"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcPropertySet": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcPropertySetDefinition"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcPreDefinedPropertySet": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcPreDefinedPropertySet"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcElementQuantity": {
      "type": "object",
      "properties": {
        "methodOfMeasurement": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcQuantitySet"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcWindowPanelProperties": {
      "type": "object",
      "properties": {
        "operationType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "panelPosition": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "frameDepth": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "frameThickness": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcPreDefinedPropertySet"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDoorPanelProperties": {
      "type": "object",
      "properties": {
        "panelDepth": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "panelOperation": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "panelWidth": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "panelPosition": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcPreDefinedPropertySet"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcPermeableCoveringProperties": {
      "type": "object",
      "properties": {
        "operationType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "panelPosition": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "frameDepth": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "frameThickness": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcPreDefinedPropertySet"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcWindowLiningProperties": {
      "type": "object",
      "properties": {
        "liningDepth": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "liningThickness": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "transomThickness": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "mullionThickness": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "firstTransomOffset": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "secondTransomOffset": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "firstMullionOffset": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "secondMullionOffset": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "liningOffset": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "liningToPanelOffsetX": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "liningToPanelOffsetY": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcPreDefinedPropertySet"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcReinforcementDefinitionProperties": {
      "type": "object",
      "properties": {
        "definitionType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcPreDefinedPropertySet"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDoorLiningProperties": {
      "type": "object",
      "properties": {
        "liningDepth": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "liningThickness": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "thresholdDepth": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "thresholdThickness": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "transomThickness": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "transomOffset": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "liningOffset": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "thresholdOffset": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "casingThickness": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "casingDepth": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "liningToPanelOffsetX": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "liningToPanelOffsetY": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcPreDefinedPropertySet"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelDecomposes": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelDecomposes"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelConnects": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelConnects"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelAssigns": {
      "type": "object",
      "properties": {
        "relatedObjectsType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelAssigns"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelAssociates": {
      "type": "object",
      "properties": {
        "relatedObjects": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelAssociates"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelDefines": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelDefines"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelDeclares": {
      "type": "object",
      "properties": {
        "relatedDefinitions": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelationship"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelNests": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelDecomposes"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelProjectsElement": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelDecomposes"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelAggregates": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelDecomposes"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelVoidsElement": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelDecomposes"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelConnectsElements": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelConnectsElements"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelFlowControlElements": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelConnects"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelSequence": {
      "type": "object",
      "properties": {
        "sequenceType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "userDefinedSequenceType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelConnects"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelConnectsStructuralActivity": {
      "type": "object",
      "properties": {
        "relatingElement": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelConnects"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelContainedInSpatialStructure": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelConnects"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelConnectsStructuralMember": {
      "type": "object",
      "properties": {
        "supportedLength": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelConnectsStructuralMember"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelReferencedInSpatialStructure": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelConnects"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelSpaceBoundary": {
      "type": "object",
      "properties": {
        "relatingSpace": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "physicalOrVirtualBoundary": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "internalOrExternalBoundary": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelSpaceBoundary"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelPositions": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelConnects"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelFillsElement": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelConnects"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelCoversBldgElements": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelConnects"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelConnectsPorts": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelConnects"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelConnectsPortToElement": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelConnects"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelCoversSpaces": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelConnects"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelInterferesElements": {
      "type": "object",
      "properties": {
        "relatedElement": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "relatingElement": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "interferenceType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "impliedOrder": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelConnects"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelServicesBuildings": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelConnects"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelConnectsWithRealizingElements": {
      "type": "object",
      "properties": {
        "connectionType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelConnectsElements"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelConnectsPathElements": {
      "type": "object",
      "properties": {
        "relatingPriorities": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "relatedPriorities": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "relatedConnectionType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "relatingConnectionType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelConnectsElements"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelConnectsWithEccentricity": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelConnectsStructuralMember"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelSpaceBoundary1stLevel": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelSpaceBoundary1stLevel"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelSpaceBoundary2ndLevel": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelSpaceBoundary1stLevel"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelAssignsToResource": {
      "type": "object",
      "properties": {
        "relatingResource": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelAssigns"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelAssignsToProduct": {
      "type": "object",
      "properties": {
        "relatingProduct": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelAssigns"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelAssignsToProcess": {
      "type": "object",
      "properties": {
        "relatingProcess": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelAssigns"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelAssignsToGroup": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelAssignsToGroup"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelAssignsToControl": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelAssigns"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelAssignsToActor": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelAssigns"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelAssignsToGroupByFactor": {
      "type": "object",
      "properties": {
        "factor": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelAssignsToGroup"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelAssociatesClassification": {
      "type": "object",
      "properties": {
        "relatingClassification": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelAssociates"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelAssociatesLibrary": {
      "type": "object",
      "properties": {
        "relatingLibrary": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelAssociates"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelAssociatesProfileDef": {
      "type": "object",
      "properties": {
        "relatingProfileDef": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelAssociates"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelAssociatesDocument": {
      "type": "object",
      "properties": {
        "relatingDocument": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelAssociates"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelAssociatesMaterial": {
      "type": "object",
      "properties": {
        "relatingMaterial": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelAssociates"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelAssociatesConstraint": {
      "type": "object",
      "properties": {
        "intent": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelAssociates"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelAssociatesApproval": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelAssociates"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelDefinesByType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelDefines"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelDefinesByObject": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelDefines"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelDefinesByTemplate": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelDefines"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRelDefinesByProperties": {
      "type": "object",
      "properties": {
        "relatingPropertyDefinition": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcRelDefines"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcContext": {
      "type": "object",
      "properties": {
        "objectType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "longName": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "phase": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcContext"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcTypeObject": {
      "type": "object",
      "properties": {
        "applicableOccurrence": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcTypeObject"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcObject": {
      "type": "object",
      "properties": {
        "objectType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcObject"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcProject": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcContext"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcProjectLibrary": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcContext"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcTypeProcess": {
      "type": "object",
      "properties": {
        "identification": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "longDescription": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "processType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcTypeProcess"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcTypeResource": {
      "type": "object",
      "properties": {
        "identification": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "longDescription": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "resourceType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcTypeResource"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcTypeProduct": {
      "type": "object",
      "properties": {
        "tag": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcTypeProduct"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcTaskType": {
      "type": "object",
      "properties": {
        "workMethod": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcTypeProcess"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcProcedureType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcTypeProcess"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcEventType": {
      "type": "object",
      "properties": {
        "eventTriggerType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "userDefinedEventTriggerType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcTypeProcess"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcConstructionResourceType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcConstructionResourceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSubContractResourceType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcConstructionResourceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcConstructionEquipmentResourceType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcConstructionResourceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcLaborResourceType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcConstructionResourceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcConstructionMaterialResourceType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcConstructionResourceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCrewResourceType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcConstructionResourceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcConstructionProductResourceType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcConstructionResourceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcElementType": {
      "type": "object",
      "properties": {
        "elementType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcWindowStyle": {
      "type": "object",
      "properties": {
        "constructionType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "operationType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "parameterTakesPrecedence": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "sizeable": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcTypeProduct"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSpatialElementType": {
      "type": "object",
      "properties": {
        "elementType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcSpatialElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDoorStyle": {
      "type": "object",
      "properties": {
        "operationType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "constructionType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "parameterTakesPrecedence": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "sizeable": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcTypeProduct"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDistributionElementType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDistributionElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFurnishingElementType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFurnishingElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcTransportElementType": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCivilElementType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcElementComponentType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcElementComponentType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcBuiltElementType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcGeographicElementType": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcElementAssemblyType": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDistributionFlowElementType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDistributionFlowElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDistributionControlElementType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDistributionControlElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFlowFittingType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowFittingType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFlowSegmentType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowSegmentType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcEnergyConversionDeviceType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDistributionChamberElementType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDistributionFlowElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFlowControllerType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowControllerType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFlowStorageDeviceType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowStorageDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFlowTreatmentDeviceType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTreatmentDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFlowTerminalType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminalType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFlowMovingDeviceType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowMovingDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcJunctionBoxType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowFittingType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCableCarrierFittingType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowFittingType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCableFittingType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowFittingType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcPipeFittingType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowFittingType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDuctFittingType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowFittingType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCableCarrierSegmentType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowSegmentType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcPipeSegmentType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowSegmentType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDuctSegmentType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowSegmentType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcConveyorSegmentType": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowSegmentType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCableSegmentType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowSegmentType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCooledBeamType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcChillerType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcUnitaryEquipmentType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcElectricMotorType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcEvaporatorType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSolarDeviceType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcEngineType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCoolingTowerType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcEvaporativeCoolerType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcElectricGeneratorType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcBoilerType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcHumidifierType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcTransformerType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcBurnerType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCoilType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcMotorConnectionType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcAirToAirHeatRecoveryType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCondenserType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcTubeBundleType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcHeatExchangerType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcAirTerminalBoxType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowControllerType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDistributionBoardType": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowControllerType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcElectricTimeControlType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowControllerType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcValveType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowControllerType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFlowMeterType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowControllerType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcProtectiveDeviceType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowControllerType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSwitchingDeviceType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowControllerType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDamperType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowControllerType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcElectricDistributionBoardType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowControllerType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcElectricFlowStorageDeviceType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowStorageDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcTankType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowStorageDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDuctSilencerType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTreatmentDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcElectricFlowTreatmentDeviceType": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTreatmentDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcInterceptorType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTreatmentDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFilterType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTreatmentDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSignalType": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminalType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcLightFixtureType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminalType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcMobileTelecommunicationsApplianceType": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminalType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFireSuppressionTerminalType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminalType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcOutletType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminalType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcWasteTerminalType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminalType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcElectricApplianceType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminalType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStackTerminalType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminalType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcAudioVisualApplianceType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminalType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcAirTerminalType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminalType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcMedicalDeviceType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminalType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCommunicationsApplianceType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminalType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSanitaryTerminalType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminalType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSpaceHeaterType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminalType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcLampType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminalType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcLiquidTerminalType": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminalType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcPumpType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowMovingDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCompressorType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowMovingDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFanType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowMovingDeviceType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcProtectiveDeviceTrippingUnitType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDistributionControlElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcAlarmType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDistributionControlElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSensorType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDistributionControlElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcActuatorType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDistributionControlElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcControllerType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDistributionControlElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFlowInstrumentType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDistributionControlElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcUnitaryControlElementType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDistributionControlElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSystemFurnitureElementType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFurnishingElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFurnitureType": {
      "type": "object",
      "properties": {
        "assemblyPlace": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcFurnishingElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcVibrationIsolatorType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcElementComponentType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcVibrationDamperType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcElementComponentType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSignType": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcElementComponentType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFastenerType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcElementComponentType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcReinforcingElementType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcReinforcingElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDiscreteAccessoryType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcElementComponentType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcImpactProtectionDeviceType": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcElementComponentType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcBuildingElementPartType": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcElementComponentType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcMechanicalFastenerType": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "nominalDiameter": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "nominalLength": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcElementComponentType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcTendonAnchorType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcReinforcingElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcTendonConduitType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcReinforcingElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcReinforcingBarType": {
      "type": "object",
      "properties": {
        "nominalDiameter": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "crossSectionArea": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "barLength": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "barSurface": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "bendingShapeCode": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "bendingParameters": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcReinforcingElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcReinforcingMeshType": {
      "type": "object",
      "properties": {
        "meshLength": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "meshWidth": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "longitudinalBarNominalDiameter": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "transverseBarNominalDiameter": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "longitudinalBarCrossSectionArea": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "transverseBarCrossSectionArea": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "longitudinalBarSpacing": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "transverseBarSpacing": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "bendingShapeCode": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "bendingParameters": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcReinforcingElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcTendonType": {
      "type": "object",
      "properties": {
        "nominalDiameter": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "crossSectionArea": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "sheathDiameter": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcReinforcingElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcChimneyType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCourseType": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcTrackElementType": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRampType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcBuildingElementProxyType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDeepFoundationType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDeepFoundationType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStairFlightType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcNavigationElementType": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSlabType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcWallType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcPavementType": {
      "type": "object",
      "properties": {
        "flexible": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRampFlightType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcBearingType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcPlateType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCoveringType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcBeamType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRailingType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcWindowType": {
      "type": "object",
      "properties": {
        "partitioningType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "parameterTakesPrecedence": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "userDefinedPartitioningType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStairType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcKerbType": {
      "type": "object",
      "properties": {
        "mountable": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcShadingDeviceType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcColumnType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCurtainWallType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcMooringDeviceType": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcMemberType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRoofType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFootingType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDoorType": {
      "type": "object",
      "properties": {
        "operationType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "parameterTakesPrecedence": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "userDefinedOperationType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRailType": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCaissonFoundationType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDeepFoundationType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcPileType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDeepFoundationType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSpatialStructureElementType": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcSpatialStructureElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSpatialZoneType": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "longName": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcSpatialElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSpaceType": {
      "type": "object",
      "properties": {
        "longName": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcSpatialStructureElementType"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcGroup": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcGroup"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcProcess": {
      "type": "object",
      "properties": {
        "identification": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "longDescription": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcProcess"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcProduct": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcProduct"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcResource": {
      "type": "object",
      "properties": {
        "identification": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "longDescription": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcResource"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcActor": {
      "type": "object",
      "properties": {
        "theActor": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcActor"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcControl": {
      "type": "object",
      "properties": {
        "identification": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcControl"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcAsset": {
      "type": "object",
      "properties": {
        "identification": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "owner": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "user": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "incorporationDate": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcGroup"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSystem": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcSystem"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcInventory": {
      "type": "object",
      "properties": {
        "jurisdiction": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "lastUpdateDate": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcGroup"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStructuralLoadGroup": {
      "type": "object",
      "properties": {
        "actionType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "actionSource": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "coefficient": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "purpose": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcStructuralLoadGroup"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStructuralResultGroup": {
      "type": "object",
      "properties": {
        "theoryType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "isLinear": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcGroup"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStructuralAnalysisModel": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcSystem"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcBuiltSystem": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "longName": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcSystem"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDistributionSystem": {
      "type": "object",
      "properties": {
        "longName": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcDistributionSystem"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcZone": {
      "type": "object",
      "properties": {
        "longName": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcSystem"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcBuildingSystem": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "longName": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcSystem"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDistributionCircuit": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDistributionSystem"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStructuralLoadCase": {
      "type": "object",
      "properties": {
        "selfWeightCoefficients": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcStructuralLoadGroup"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcEvent": {
      "type": "object",
      "properties": {
        "eventTriggerType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "userDefinedEventTriggerType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcProcess"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcProcedure": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcProcess"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcTask": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "workMethod": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "isMilestone": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "priority": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcProcess"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSpatialElement": {
      "type": "object",
      "properties": {
        "longName": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcSpatialElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcProxy": {
      "type": "object",
      "properties": {
        "proxyType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "tag": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcProduct"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcElement": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcPositioningElement": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcPositioningElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcPort": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcPort"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcAnnotation": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcProduct"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStructuralActivity": {
      "type": "object",
      "properties": {
        "globalOrLocal": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcStructuralActivity"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStructuralItem": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcStructuralItem"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSpatialStructureElement": {
      "type": "object",
      "properties": {
        "compositionType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcSpatialStructureElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSpatialZone": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcSpatialElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcExternalSpatialStructureElement": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcExternalSpatialStructureElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSpace": {
      "type": "object",
      "properties": {
        "elevationWithFlooring": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcSpatialStructureElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFacility": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFacility"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSite": {
      "type": "object",
      "properties": {
        "refLatitude": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "refLongitude": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "refElevation": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "landTitleNumber": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcSpatialStructureElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFacilityPart": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "usageType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcFacilityPart"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcBuildingStorey": {
      "type": "object",
      "properties": {
        "elevation": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcSpatialStructureElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRailway": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFacility"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcMarineFacility": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcFacility"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcBuilding": {
      "type": "object",
      "properties": {
        "elevationOfRefHeight": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "elevationOfTerrain": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcFacility"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRoad": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFacility"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcBridge": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFacility"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcBridgePart": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFacilityPart"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcExternalSpatialElement": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcExternalSpatialStructureElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcBuiltElement": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcElementComponent": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcElementComponent"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFeatureElement": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFeatureElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcVirtualElement": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcElementAssembly": {
      "type": "object",
      "properties": {
        "assemblyPlace": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcGeographicElement": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcGeographicElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcGeotechnicalElement": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcGeotechnicalElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFurnishingElement": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFurnishingElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcTransportElement": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCivilElement": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDistributionElement": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDistributionElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDeepFoundation": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDeepFoundation"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDoor": {
      "type": "object",
      "properties": {
        "overallHeight": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "overallWidth": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "operationType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "userDefinedOperationType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcDoor"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcColumn": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcColumn"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcShadingDevice": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcWindow": {
      "type": "object",
      "properties": {
        "overallHeight": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "overallWidth": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "partitioningType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "userDefinedPartitioningType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcWindow"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcPavement": {
      "type": "object",
      "properties": {
        "flexible": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcMooringDevice": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcPlate": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcPlate"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcBuildingElementProxy": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcMember": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcMember"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCurtainWall": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFooting": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcWall": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcWall"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRamp": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCovering": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcTrackElement": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcChimney": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRoof": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcNavigationElement": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcBeam": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBeam"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRailing": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRampFlight": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStair": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcRail": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcBearing": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStairFlight": {
      "type": "object",
      "properties": {
        "numberOfRisers": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "numberOfTreads": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "riserHeight": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "treadLength": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcKerb": {
      "type": "object",
      "properties": {
        "mountable": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSlab": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcSlab"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcEarthworksElement": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEarthworksElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCourse": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcBuiltElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcPile": {
      "type": "object",
      "properties": {
        "constructionType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcDeepFoundation"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCaissonFoundation": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDeepFoundation"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDoorStandardCase": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDoor"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcColumnStandardCase": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcColumn"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcWindowStandardCase": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcWindow"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcPlateStandardCase": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcPlate"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcMemberStandardCase": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcMember"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcWallStandardCase": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcWall"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcWallElementedCase": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcWall"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcBeamStandardCase": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcBeam"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSlabElementedCase": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcSlab"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSlabStandardCase": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcSlab"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcReinforcedSoil": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcEarthworksElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcEarthworksFill": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcEarthworksElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFastener": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcElementComponent"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcVibrationDamper": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcElementComponent"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcBuildingElementPart": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcElementComponent"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcMechanicalFastener": {
      "type": "object",
      "properties": {
        "nominalDiameter": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "nominalLength": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcElementComponent"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDiscreteAccessory": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcElementComponent"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcVibrationIsolator": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcElementComponent"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSign": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcElementComponent"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcReinforcingElement": {
      "type": "object",
      "properties": {
        "steelGrade": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcReinforcingElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcImpactProtectionDevice": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcElementComponent"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcTendonAnchor": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcReinforcingElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcTendonConduit": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcReinforcingElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcReinforcingMesh": {
      "type": "object",
      "properties": {
        "meshLength": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "meshWidth": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "longitudinalBarNominalDiameter": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "transverseBarNominalDiameter": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "longitudinalBarCrossSectionArea": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "transverseBarCrossSectionArea": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "longitudinalBarSpacing": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "transverseBarSpacing": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcReinforcingElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcTendon": {
      "type": "object",
      "properties": {
        "nominalDiameter": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "crossSectionArea": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "tensionForce": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "preStress": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "frictionCoefficient": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "anchorageSlip": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "minCurvatureRadius": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcReinforcingElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcReinforcingBar": {
      "type": "object",
      "properties": {
        "nominalDiameter": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "crossSectionArea": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "barLength": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "barSurface": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcReinforcingElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFeatureElementAddition": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFeatureElementAddition"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSurfaceFeature": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFeatureElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFeatureElementSubtraction": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFeatureElementSubtraction"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcProjectionElement": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFeatureElementAddition"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcOpeningElement": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcOpeningElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcVoidingFeature": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFeatureElementSubtraction"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcEarthworksCut": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcFeatureElementSubtraction"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcOpeningStandardCase": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcOpeningElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcPlant": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcGeographicElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcGeotechnicalAssembly": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcGeotechnicalAssembly"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcGeotechnicalStratum": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcGeotechnicalStratum"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcGeomodel": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcGeotechnicalAssembly"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcGeoslice": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcGeotechnicalAssembly"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcBorehole": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcGeotechnicalAssembly"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcWaterStratum": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcGeotechnicalStratum"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSolidStratum": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcGeotechnicalStratum"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcVoidStratum": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcGeotechnicalStratum"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFurniture": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFurnishingElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSystemFurnitureElement": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFurnishingElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDistributionControlElement": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDistributionControlElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDistributionFlowElement": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDistributionFlowElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcActuator": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDistributionControlElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSensor": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDistributionControlElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcController": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDistributionControlElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFlowInstrument": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDistributionControlElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcProtectiveDeviceTrippingUnit": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDistributionControlElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcAlarm": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDistributionControlElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcUnitaryControlElement": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDistributionControlElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFlowController": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowController"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFlowSegment": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowSegment"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFlowTerminal": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminal"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFlowStorageDevice": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowStorageDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFlowMovingDevice": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowMovingDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFlowTreatmentDevice": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTreatmentDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcEnergyConversionDevice": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFlowFitting": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowFitting"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDistributionChamberElement": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcDistributionFlowElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcProtectiveDevice": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowController"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFlowMeter": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowController"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcElectricDistributionBoard": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowController"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcAirTerminalBox": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowController"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcElectricTimeControl": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowController"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSwitchingDevice": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowController"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcValve": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowController"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDistributionBoard": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowController"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDamper": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowController"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDuctSegment": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowSegment"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcPipeSegment": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowSegment"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCableCarrierSegment": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowSegment"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCableSegment": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowSegment"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcConveyorSegment": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowSegment"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcLightFixture": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminal"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcOutlet": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminal"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcWasteTerminal": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminal"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcElectricAppliance": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminal"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcMobileTelecommunicationsAppliance": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminal"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSanitaryTerminal": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminal"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSignal": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminal"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFireSuppressionTerminal": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminal"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcLiquidTerminal": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminal"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcMedicalDevice": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminal"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStackTerminal": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminal"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcAudioVisualAppliance": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminal"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSpaceHeater": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminal"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcLamp": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminal"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcAirTerminal": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminal"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCommunicationsAppliance": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTerminal"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcTank": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowStorageDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcElectricFlowStorageDevice": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowStorageDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCompressor": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowMovingDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcPump": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowMovingDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFan": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowMovingDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcInterceptor": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTreatmentDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcFilter": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTreatmentDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDuctSilencer": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTreatmentDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcElectricFlowTreatmentDevice": {
      "type": "object",
      "properties": {
        "predefinedType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowTreatmentDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcMotorConnection": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSolarDevice": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcChiller": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcTubeBundle": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcBoiler": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcHeatExchanger": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcTransformer": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCoil": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcAirToAirHeatRecovery": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcEvaporativeCooler": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcUnitaryEquipment": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcEvaporator": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCooledBeam": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcEngine": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCondenser": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcElectricGenerator": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCoolingTower": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcHumidifier": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcBurner": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcElectricMotor": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcEnergyConversionDevice"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCableFitting": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowFitting"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDuctFitting": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowFitting"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcJunctionBox": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowFitting"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCableCarrierFitting": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowFitting"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcPipeFitting": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcFlowFitting"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcLinearPositioningElement": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcLinearPositioningElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcGrid": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcPositioningElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcReferent": {
      "type": "object",
      "properties": {
        "restartDistance": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcPositioningElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcAlignment": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcLinearPositioningElement"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcDistributionPort": {
      "type": "object",
      "properties": {
        "flowDirection": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "systemType": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcPort"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStructuralReaction": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcStructuralReaction"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStructuralAction": {
      "type": "object",
      "properties": {
        "destabilizingLoad": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcStructuralAction"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStructuralPointReaction": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcStructuralReaction"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStructuralCurveReaction": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcStructuralReaction"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStructuralSurfaceReaction": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcStructuralReaction"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStructuralSurfaceAction": {
      "type": "object",
      "properties": {
        "projectedOrTrue": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcStructuralSurfaceAction"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStructuralPointAction": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcStructuralAction"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStructuralCurveAction": {
      "type": "object",
      "properties": {
        "projectedOrTrue": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcStructuralCurveAction"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStructuralPlanarAction": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcStructuralSurfaceAction"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStructuralLinearAction": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcStructuralCurveAction"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStructuralConnection": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcStructuralConnection"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStructuralMember": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcStructuralMember"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStructuralCurveConnection": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcStructuralConnection"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStructuralPointConnection": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcStructuralConnection"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStructuralSurfaceConnection": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcStructuralConnection"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStructuralSurfaceMember": {
      "type": "object",
      "properties": {
        "thickness": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcStructuralSurfaceMember"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStructuralCurveMember": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcStructuralCurveMember"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStructuralSurfaceMemberVarying": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcStructuralSurfaceMember"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcStructuralCurveMemberVarying": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcStructuralCurveMember"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcConstructionResource": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcConstructionResource"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCrewResource": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcConstructionResource"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcLaborResource": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcConstructionResource"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcConstructionEquipmentResource": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcConstructionResource"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcConstructionProductResource": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcConstructionResource"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcSubContractResource": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcConstructionResource"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcConstructionMaterialResource": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcConstructionResource"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcOccupant": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcActor"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcWorkControl": {
      "type": "object",
      "properties": {
        "creationDate": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "purpose": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "duration": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "totalFloat": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "startTime": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "finishTime": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcWorkControl"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcProjectOrder": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "longDescription": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcControl"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcWorkCalendar": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcControl"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcPerformanceHistory": {
      "type": "object",
      "properties": {
        "lifeCyclePhase": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcControl"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCostItem": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcControl"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcCostSchedule": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "submittedOn": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "updateDate": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcControl"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcActionRequest": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "longDescription": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcControl"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcPermit": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        },
        "longDescription": {
          "$ref": "#/definitions/@todo:IFCTYPE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ifcControl"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcWorkPlan": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcWorkControl"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    },
    "ifcWorkSchedule": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ifcWorkControl"
        }
      ],
      "required": [
        "@todo:NON-OPTIONAL"
      ]
    }
  }
}